GAS LISTING /tmp/cc8ioz4J.s 			page 1


   1              		.file	"memoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator4initEv
   9              	_ZN15MemoryAllocator4initEv:
  10              	.LFB0:
  11              		.file 1 "src/memoryAllocator.cpp"
   1:src/memoryAllocator.cpp **** #include "../lib/hw.h"
   2:src/memoryAllocator.cpp **** #include "../h/memoryAllocator.hpp"
   3:src/memoryAllocator.cpp **** 
   4:src/memoryAllocator.cpp **** MemoryAllocator::DBlock* MemoryAllocator::headFull = nullptr;
   5:src/memoryAllocator.cpp **** MemoryAllocator::DBlock* MemoryAllocator::headFree = nullptr;
   6:src/memoryAllocator.cpp **** bool MemoryAllocator::initialized = false;
   7:src/memoryAllocator.cpp **** 
   8:src/memoryAllocator.cpp **** const size_t MemoryAllocator::DBlockSize = sizeof(MemoryAllocator::DBlock);
   9:src/memoryAllocator.cpp **** 
  10:src/memoryAllocator.cpp **** void MemoryAllocator::init(){
  12              		.loc 1 10 29
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/memoryAllocator.cpp ****     if(!initialized){
  20              		.loc 1 11 5
  21              		.loc 1 11 8 is_stmt 0
  22 000c 97070000 		lbu	a5,.LANCHOR0
  22      83C70700 
  23              		.loc 1 11 5
  24 0014 63980704 		bnez	a5,.L1
  12:src/memoryAllocator.cpp ****         headFree=(DBlock*)((char*)HEAP_START_ADDR);
  25              		.loc 1 12 9 is_stmt 1
  26              		.loc 1 12 17 is_stmt 0
  27 0018 97070000 		la	a5,HEAP_START_ADDR
  27      83B70700 
  28 0020 83B60700 		ld	a3,0(a5)
  29 0024 17070000 		lla	a4,.LANCHOR0
  29      13070700 
  30 002c 2334D700 		sd	a3,8(a4)
  13:src/memoryAllocator.cpp ****         headFree->size=ROUNDUP((uint64)HEAP_END_ADDR-(uint64)HEAP_START_ADDR+1)/MEM_BLOCK_SIZE-1; /
  31              		.loc 1 13 9 is_stmt 1
  32              		.loc 1 13 24 is_stmt 0
  33 0030 97070000 		la	a5,HEAP_END_ADDR
  33      83B70700 
  34 0038 83B70700 		ld	a5,0(a5)
  35 003c B387D740 		sub	a5,a5,a3
  36 0040 93870704 		addi	a5,a5,64
  37              		.loc 1 13 80
  38 0044 93D76700 		srli	a5,a5,6
  39              		.loc 1 13 95
  40 0048 9387F7FF 		addi	a5,a5,-1
  41              		.loc 1 13 23
GAS LISTING /tmp/cc8ioz4J.s 			page 2


  42 004c 23B0F600 		sd	a5,0(a3)
  14:src/memoryAllocator.cpp ****         headFree->next = nullptr;
  43              		.loc 1 14 9 is_stmt 1
  44              		.loc 1 14 19 is_stmt 0
  45 0050 83378700 		ld	a5,8(a4)
  46              		.loc 1 14 24
  47 0054 23B40700 		sd	zero,8(a5)
  15:src/memoryAllocator.cpp ****         headFree->prev  = nullptr;
  48              		.loc 1 15 9 is_stmt 1
  49              		.loc 1 15 25 is_stmt 0
  50 0058 23B80700 		sd	zero,16(a5)
  16:src/memoryAllocator.cpp ****         initialized=true;
  51              		.loc 1 16 9 is_stmt 1
  52              		.loc 1 16 20 is_stmt 0
  53 005c 93071000 		li	a5,1
  54 0060 2300F700 		sb	a5,0(a4)
  55              	.L1:
  17:src/memoryAllocator.cpp ****     }
  18:src/memoryAllocator.cpp **** }
  56              		.loc 1 18 1
  57 0064 03348100 		ld	s0,8(sp)
  58              		.cfi_restore 8
  59              		.cfi_def_cfa 2, 16
  60 0068 13010101 		addi	sp,sp,16
  61              		.cfi_def_cfa_offset 0
  62 006c 67800000 		jr	ra
  63              		.cfi_endproc
  64              	.LFE0:
  66              		.align	2
  67              		.globl	_ZN15MemoryAllocator9mem_allocEm
  69              	_ZN15MemoryAllocator9mem_allocEm:
  70              	.LFB1:
  19:src/memoryAllocator.cpp **** 
  20:src/memoryAllocator.cpp **** void* MemoryAllocator::mem_alloc(size_t size){ //broj blokova - uracunat header
  71              		.loc 1 20 46 is_stmt 1
  72              		.cfi_startproc
  73              	.LVL0:
  74 0070 130101FF 		addi	sp,sp,-16
  75              		.cfi_def_cfa_offset 16
  76 0074 23348100 		sd	s0,8(sp)
  77              		.cfi_offset 8, -8
  78 0078 13040101 		addi	s0,sp,16
  79              		.cfi_def_cfa 8, 0
  21:src/memoryAllocator.cpp **** 
  22:src/memoryAllocator.cpp ****     if(size <=0 || size>=ROUNDUP((uint64)HEAP_END_ADDR-(uint64)HEAP_START_ADDR)/MEM_BLOCK_SIZE) ret
  80              		.loc 1 22 5
  81 007c 630E0510 		beqz	a0,.L17
  82 0080 93070500 		mv	a5,a0
  83              		.loc 1 22 26 is_stmt 0 discriminator 2
  84 0084 17070000 		la	a4,HEAP_END_ADDR
  84      03370700 
  85 008c 03370700 		ld	a4,0(a4)
  86 0090 97060000 		la	a3,HEAP_START_ADDR
  86      83B60600 
  87 0098 83B60600 		ld	a3,0(a3)
  88 009c 3307D740 		sub	a4,a4,a3
  89 00a0 1307F703 		addi	a4,a4,63
GAS LISTING /tmp/cc8ioz4J.s 			page 3


  90              		.loc 1 22 80 discriminator 2
  91 00a4 13576700 		srli	a4,a4,6
  92              		.loc 1 22 17 discriminator 2
  93 00a8 637CE50E 		bleu	a4,a0,.L18
  23:src/memoryAllocator.cpp ****     DBlock* curr=nullptr;
  94              		.loc 1 23 5 is_stmt 1
  95              	.LVL1:
  24:src/memoryAllocator.cpp **** 
  25:src/memoryAllocator.cpp ****     for(curr = headFree; curr ; curr=curr->next){ //iteriramo kroz free
  96              		.loc 1 25 5
  97              	.LBB2:
  98              		.loc 1 25 14 is_stmt 0
  99 00ac 97060000 		ld	a3,.LANCHOR0+8
  99      83B60600 
 100              	.LVL2:
 101 00b4 13850600 		mv	a0,a3
 102              	.LVL3:
 103              	.L7:
 104              		.loc 1 25 26 is_stmt 1 discriminator 1
 105 00b8 63020506 		beqz	a0,.L4
 106              	.LBB3:
  26:src/memoryAllocator.cpp **** 
  27:src/memoryAllocator.cpp ****         if(curr->size<size) continue; //nema prostora, idi na sledece
 107              		.loc 1 27 9
 108              		.loc 1 27 18 is_stmt 0
 109 00bc 03370500 		ld	a4,0(a0)
 110              		.loc 1 27 9
 111 00c0 6364F706 		bltu	a4,a5,.L20
  28:src/memoryAllocator.cpp ****         if(curr->size==size){ //ima tacno onoliko prostora koliki je blok
 112              		.loc 1 28 9 is_stmt 1
 113 00c4 6306F706 		beq	a4,a5,.L21
  29:src/memoryAllocator.cpp ****             if(curr->next) curr->next->prev=curr->prev;
  30:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next; //izbacen iz free liste
  31:src/memoryAllocator.cpp ****             if (curr == headFree) headFree = curr->next;
  32:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
  33:src/memoryAllocator.cpp **** 
  34:src/memoryAllocator.cpp ****         }
  35:src/memoryAllocator.cpp ****         else{ //slucaj da ima prostora + viska
  36:src/memoryAllocator.cpp ****             curr->size-=size;
 114              		.loc 1 36 13
 115              		.loc 1 36 23 is_stmt 0
 116 00c8 3307F740 		sub	a4,a4,a5
 117 00cc 2330E500 		sd	a4,0(a0)
  37:src/memoryAllocator.cpp ****             curr=(DBlock*)((char*)curr+(curr->size*MEM_BLOCK_SIZE));
 118              		.loc 1 37 13 is_stmt 1
 119              		.loc 1 37 51 is_stmt 0
 120 00d0 13176700 		slli	a4,a4,6
 121              		.loc 1 37 17
 122 00d4 3305E500 		add	a0,a0,a4
 123              	.LVL4:
  38:src/memoryAllocator.cpp ****             curr->size=size;
 124              		.loc 1 38 13 is_stmt 1
 125              		.loc 1 38 23 is_stmt 0
 126 00d8 2330F500 		sd	a5,0(a0)
  39:src/memoryAllocator.cpp ****             curr->prev=nullptr;
 127              		.loc 1 39 13 is_stmt 1
 128              		.loc 1 39 23 is_stmt 0
GAS LISTING /tmp/cc8ioz4J.s 			page 4


 129 00dc 23380500 		sd	zero,16(a0)
  40:src/memoryAllocator.cpp ****             curr->next =nullptr;
 130              		.loc 1 40 13 is_stmt 1
 131              		.loc 1 40 24 is_stmt 0
 132 00e0 23340500 		sd	zero,8(a0)
 133              	.LVL5:
 134              	.L12:
  41:src/memoryAllocator.cpp **** 
  42:src/memoryAllocator.cpp ****         }
  43:src/memoryAllocator.cpp ****         //ubaci u full listu
  44:src/memoryAllocator.cpp **** 
  45:src/memoryAllocator.cpp ****         if(!headFull){
 135              		.loc 1 45 9 is_stmt 1
 136              		.loc 1 45 12 is_stmt 0
 137 00e4 97070000 		ld	a5,.LANCHOR0+16
 137      83B70700 
 138              		.loc 1 45 9
 139 00ec 63820708 		beqz	a5,.L22
  46:src/memoryAllocator.cpp ****             headFull=curr;
  47:src/memoryAllocator.cpp ****             return (char*)curr+DBlockSize;
  48:src/memoryAllocator.cpp ****         }
  49:src/memoryAllocator.cpp **** 
  50:src/memoryAllocator.cpp ****         if(headFull>curr) {
 140              		.loc 1 50 9 is_stmt 1
 141 00f0 6368F508 		bgtu	a5,a0,.L23
 142              	.L14:
 143              	.LVL6:
  51:src/memoryAllocator.cpp ****             curr->next=headFull;
  52:src/memoryAllocator.cpp ****             headFull->prev=curr;
  53:src/memoryAllocator.cpp ****             headFull=curr;
  54:src/memoryAllocator.cpp ****             return (char*)curr+DBlockSize;
  55:src/memoryAllocator.cpp ****         } //stavljamo na pocetak liste
  56:src/memoryAllocator.cpp **** 
  57:src/memoryAllocator.cpp ****         DBlock *currUsed=headFull;
  58:src/memoryAllocator.cpp ****         while(currUsed->next && currUsed->next<curr) currUsed=currUsed->next;
 144              		.loc 1 58 9 discriminator 3
 145              		.loc 1 58 30 discriminator 3
 146 00f4 13870700 		mv	a4,a5
 147              		.loc 1 58 25 is_stmt 0 discriminator 3
 148 00f8 83B78700 		ld	a5,8(a5)
 149              	.LVL7:
 150              		.loc 1 58 30 discriminator 3
 151 00fc 63840700 		beqz	a5,.L15
 152              		.loc 1 58 30 discriminator 1
 153 0100 E3EAA7FE 		bltu	a5,a0,.L14
 154              	.L15:
  59:src/memoryAllocator.cpp ****         curr->next=currUsed->next;
 155              		.loc 1 59 9 is_stmt 1
 156              		.loc 1 59 19 is_stmt 0
 157 0104 2334F500 		sd	a5,8(a0)
  60:src/memoryAllocator.cpp ****         if(currUsed->next) currUsed->next->prev=curr;
 158              		.loc 1 60 9 is_stmt 1
 159 0108 63840700 		beqz	a5,.L16
 160              		.loc 1 60 28 discriminator 1
 161              		.loc 1 60 48 is_stmt 0 discriminator 1
 162 010c 23B8A700 		sd	a0,16(a5)
 163              	.L16:
GAS LISTING /tmp/cc8ioz4J.s 			page 5


  61:src/memoryAllocator.cpp ****         curr->prev=currUsed;
 164              		.loc 1 61 9 is_stmt 1
 165              		.loc 1 61 19 is_stmt 0
 166 0110 2338E500 		sd	a4,16(a0)
  62:src/memoryAllocator.cpp ****         currUsed->next=curr;
 167              		.loc 1 62 9 is_stmt 1
 168              		.loc 1 62 23 is_stmt 0
 169 0114 2334A700 		sd	a0,8(a4)
  63:src/memoryAllocator.cpp ****         return (char*)curr+DBlockSize;
 170              		.loc 1 63 9 is_stmt 1
 171              		.loc 1 63 28 is_stmt 0
 172 0118 13058501 		addi	a0,a0,24
 173              	.LVL8:
 174              	.L4:
 175              	.LBE3:
 176              	.LBE2:
  64:src/memoryAllocator.cpp ****         //ubaciti na odgovarajuce mesto u full listi
  65:src/memoryAllocator.cpp ****         //currUsed je prethodnik curr
  66:src/memoryAllocator.cpp ****     }
  67:src/memoryAllocator.cpp **** 
  68:src/memoryAllocator.cpp ****     return nullptr;
  69:src/memoryAllocator.cpp **** }
 177              		.loc 1 69 1
 178 011c 03348100 		ld	s0,8(sp)
 179              		.cfi_remember_state
 180              		.cfi_restore 8
 181              		.cfi_def_cfa 2, 16
 182 0120 13010101 		addi	sp,sp,16
 183              		.cfi_def_cfa_offset 0
 184 0124 67800000 		jr	ra
 185              	.LVL9:
 186              	.L20:
 187              		.cfi_restore_state
 188              	.LBB6:
 189              	.LBB4:
  27:src/memoryAllocator.cpp ****         if(curr->size==size){ //ima tacno onoliko prostora koliki je blok
 190              		.loc 1 27 29 is_stmt 1 discriminator 1
 191              	.LBE4:
  25:src/memoryAllocator.cpp **** 
 192              		.loc 1 25 5 discriminator 1
  25:src/memoryAllocator.cpp **** 
 193              		.loc 1 25 37 is_stmt 0 discriminator 1
 194 0128 03358500 		ld	a0,8(a0)
 195              	.LVL10:
  25:src/memoryAllocator.cpp **** 
 196              		.loc 1 25 5 discriminator 1
 197 012c 6FF0DFF8 		j	.L7
 198              	.L21:
 199              	.LBB5:
  29:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next; //izbacen iz free liste
 200              		.loc 1 29 13 is_stmt 1
  29:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next; //izbacen iz free liste
 201              		.loc 1 29 22 is_stmt 0
 202 0130 83378500 		ld	a5,8(a0)
 203              	.LVL11:
  29:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next; //izbacen iz free liste
 204              		.loc 1 29 13
GAS LISTING /tmp/cc8ioz4J.s 			page 6


 205 0134 63860700 		beqz	a5,.L9
  29:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next; //izbacen iz free liste
 206              		.loc 1 29 28 is_stmt 1 discriminator 1
  29:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next; //izbacen iz free liste
 207              		.loc 1 29 51 is_stmt 0 discriminator 1
 208 0138 03370501 		ld	a4,16(a0)
  29:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next; //izbacen iz free liste
 209              		.loc 1 29 44 discriminator 1
 210 013c 23B8E700 		sd	a4,16(a5)
 211              	.L9:
  30:src/memoryAllocator.cpp ****             if (curr == headFree) headFree = curr->next;
 212              		.loc 1 30 13 is_stmt 1
  30:src/memoryAllocator.cpp ****             if (curr == headFree) headFree = curr->next;
 213              		.loc 1 30 22 is_stmt 0
 214 0140 83370501 		ld	a5,16(a0)
  30:src/memoryAllocator.cpp ****             if (curr == headFree) headFree = curr->next;
 215              		.loc 1 30 13
 216 0144 63860700 		beqz	a5,.L10
  30:src/memoryAllocator.cpp ****             if (curr == headFree) headFree = curr->next;
 217              		.loc 1 30 28 is_stmt 1 discriminator 1
  30:src/memoryAllocator.cpp ****             if (curr == headFree) headFree = curr->next;
 218              		.loc 1 30 51 is_stmt 0 discriminator 1
 219 0148 03378500 		ld	a4,8(a0)
  30:src/memoryAllocator.cpp ****             if (curr == headFree) headFree = curr->next;
 220              		.loc 1 30 44 discriminator 1
 221 014c 23B4E700 		sd	a4,8(a5)
 222              	.L10:
  31:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 223              		.loc 1 31 13 is_stmt 1
 224 0150 6308D500 		beq	a0,a3,.L24
 225              	.L11:
  32:src/memoryAllocator.cpp **** 
 226              		.loc 1 32 13
  32:src/memoryAllocator.cpp **** 
 227              		.loc 1 32 37 is_stmt 0
 228 0154 23340500 		sd	zero,8(a0)
  32:src/memoryAllocator.cpp **** 
 229              		.loc 1 32 24
 230 0158 23380500 		sd	zero,16(a0)
 231 015c 6FF09FF8 		j	.L12
 232              	.L24:
  31:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 233              		.loc 1 31 35 is_stmt 1 discriminator 1
  31:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 234              		.loc 1 31 52 is_stmt 0 discriminator 1
 235 0160 83378500 		ld	a5,8(a0)
  31:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 236              		.loc 1 31 44 discriminator 1
 237 0164 17070000 		sd	a5,.LANCHOR0+8,a4
 237      2330F700 
 238 016c 6FF09FFE 		j	.L11
 239              	.L22:
  46:src/memoryAllocator.cpp ****             return (char*)curr+DBlockSize;
 240              		.loc 1 46 13 is_stmt 1
  46:src/memoryAllocator.cpp ****             return (char*)curr+DBlockSize;
 241              		.loc 1 46 21 is_stmt 0
 242 0170 97070000 		sd	a0,.LANCHOR0+16,a5
GAS LISTING /tmp/cc8ioz4J.s 			page 7


 242      23B0A700 
  47:src/memoryAllocator.cpp ****         }
 243              		.loc 1 47 13 is_stmt 1
  47:src/memoryAllocator.cpp ****         }
 244              		.loc 1 47 32 is_stmt 0
 245 0178 13058501 		addi	a0,a0,24
 246              	.LVL12:
 247 017c 6FF01FFA 		j	.L4
 248              	.LVL13:
 249              	.L23:
  51:src/memoryAllocator.cpp ****             headFull->prev=curr;
 250              		.loc 1 51 13 is_stmt 1
  51:src/memoryAllocator.cpp ****             headFull->prev=curr;
 251              		.loc 1 51 23 is_stmt 0
 252 0180 2334F500 		sd	a5,8(a0)
  52:src/memoryAllocator.cpp ****             headFull=curr;
 253              		.loc 1 52 13 is_stmt 1
  52:src/memoryAllocator.cpp ****             headFull=curr;
 254              		.loc 1 52 27 is_stmt 0
 255 0184 23B8A700 		sd	a0,16(a5)
  53:src/memoryAllocator.cpp ****             return (char*)curr+DBlockSize;
 256              		.loc 1 53 13 is_stmt 1
  53:src/memoryAllocator.cpp ****             return (char*)curr+DBlockSize;
 257              		.loc 1 53 21 is_stmt 0
 258 0188 97070000 		sd	a0,.LANCHOR0+16,a5
 258      23B0A700 
  54:src/memoryAllocator.cpp ****         } //stavljamo na pocetak liste
 259              		.loc 1 54 13 is_stmt 1
  54:src/memoryAllocator.cpp ****         } //stavljamo na pocetak liste
 260              		.loc 1 54 32 is_stmt 0
 261 0190 13058501 		addi	a0,a0,24
 262              	.LVL14:
 263 0194 6FF09FF8 		j	.L4
 264              	.LVL15:
 265              	.L17:
 266              	.LBE5:
 267              	.LBE6:
  22:src/memoryAllocator.cpp ****     DBlock* curr=nullptr;
 268              		.loc 1 22 104
 269 0198 13050000 		li	a0,0
 270              	.LVL16:
 271 019c 6FF01FF8 		j	.L4
 272              	.LVL17:
 273              	.L18:
 274 01a0 13050000 		li	a0,0
 275              	.LVL18:
 276 01a4 6FF09FF7 		j	.L4
 277              		.cfi_endproc
 278              	.LFE1:
 280              		.align	2
 281              		.globl	_ZN15MemoryAllocator9tryToJoinEPNS_6DBlockE
 283              	_ZN15MemoryAllocator9tryToJoinEPNS_6DBlockE:
 284              	.LFB3:
  70:src/memoryAllocator.cpp **** 
  71:src/memoryAllocator.cpp **** int MemoryAllocator::mem_free (void* ptr){
  72:src/memoryAllocator.cpp **** 
  73:src/memoryAllocator.cpp ****     if(!ptr) return -1;
GAS LISTING /tmp/cc8ioz4J.s 			page 8


  74:src/memoryAllocator.cpp ****     ptr=(DBlock*)((char*)ptr-DBlockSize);
  75:src/memoryAllocator.cpp ****     for(DBlock* curr=headFull; curr || ptr<=curr; curr=curr->next){
  76:src/memoryAllocator.cpp ****         if(curr==ptr){ //curr izbacujemo iz full liste
  77:src/memoryAllocator.cpp ****             if(curr->next) curr->next->prev=curr->prev;
  78:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next;
  79:src/memoryAllocator.cpp ****             if (curr == headFull) headFull = curr->next;
  80:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
  81:src/memoryAllocator.cpp **** 
  82:src/memoryAllocator.cpp ****             //treba curr(ptr) ubaciti u free listu
  83:src/memoryAllocator.cpp **** 
  84:src/memoryAllocator.cpp ****             if(!headFree){
  85:src/memoryAllocator.cpp ****                 headFree=curr;
  86:src/memoryAllocator.cpp ****                 return 0;
  87:src/memoryAllocator.cpp ****             }
  88:src/memoryAllocator.cpp **** 
  89:src/memoryAllocator.cpp ****             if(headFree>curr) {
  90:src/memoryAllocator.cpp ****                 curr->next=headFree;
  91:src/memoryAllocator.cpp ****                 headFree->prev=curr;
  92:src/memoryAllocator.cpp ****                 headFree=curr;
  93:src/memoryAllocator.cpp ****                 tryToJoin(headFree);
  94:src/memoryAllocator.cpp ****                 return 0;
  95:src/memoryAllocator.cpp ****             } //stavljamo na pocetak liste
  96:src/memoryAllocator.cpp **** 
  97:src/memoryAllocator.cpp ****             DBlock *currFree=headFree;
  98:src/memoryAllocator.cpp ****             while(currFree->next && currFree->next<curr) currFree=currFree->next;
  99:src/memoryAllocator.cpp ****             curr->next=currFree->next;
 100:src/memoryAllocator.cpp ****             if(currFree->next) currFree->next->prev=curr;
 101:src/memoryAllocator.cpp ****             curr->prev=currFree;
 102:src/memoryAllocator.cpp ****             currFree->next=curr;
 103:src/memoryAllocator.cpp ****             tryToJoin(curr);
 104:src/memoryAllocator.cpp ****             tryToJoin(curr->prev);
 105:src/memoryAllocator.cpp ****             return 0;
 106:src/memoryAllocator.cpp ****         }
 107:src/memoryAllocator.cpp ****     }
 108:src/memoryAllocator.cpp **** 
 109:src/memoryAllocator.cpp ****     return -1; // 0 ako je ok -1 ako nije
 110:src/memoryAllocator.cpp **** }
 111:src/memoryAllocator.cpp **** 
 112:src/memoryAllocator.cpp **** void MemoryAllocator::tryToJoin(DBlock* curr){
 285              		.loc 1 112 46 is_stmt 1
 286              		.cfi_startproc
 287              	.LVL19:
 288 01a8 130101FF 		addi	sp,sp,-16
 289              		.cfi_def_cfa_offset 16
 290 01ac 23348100 		sd	s0,8(sp)
 291              		.cfi_offset 8, -8
 292 01b0 13040101 		addi	s0,sp,16
 293              		.cfi_def_cfa 8, 0
 113:src/memoryAllocator.cpp ****     if(!curr) return;
 294              		.loc 1 113 5
 295 01b4 630E0500 		beqz	a0,.L25
 114:src/memoryAllocator.cpp ****     if(curr->next && (char*)curr+curr->size*MEM_BLOCK_SIZE == (char*)curr->next){
 296              		.loc 1 114 5
 297              		.loc 1 114 14 is_stmt 0
 298 01b8 83378500 		ld	a5,8(a0)
 299              		.loc 1 114 5
 300 01bc 638A0700 		beqz	a5,.L25
GAS LISTING /tmp/cc8ioz4J.s 			page 9


 301              		.loc 1 114 40 discriminator 1
 302 01c0 83360500 		ld	a3,0(a0)
 303              		.loc 1 114 44 discriminator 1
 304 01c4 13976600 		slli	a4,a3,6
 305              		.loc 1 114 33 discriminator 1
 306 01c8 3307E500 		add	a4,a0,a4
 307              		.loc 1 114 19 discriminator 1
 308 01cc 6388E700 		beq	a5,a4,.L28
 309              	.L25:
 115:src/memoryAllocator.cpp ****         curr->size+=curr->next->size;
 116:src/memoryAllocator.cpp ****         curr->next=curr->next->next;
 117:src/memoryAllocator.cpp ****         if(curr->next) curr->next->prev=curr;
 118:src/memoryAllocator.cpp ****     }
 119:src/memoryAllocator.cpp **** }
 310              		.loc 1 119 1
 311 01d0 03348100 		ld	s0,8(sp)
 312              		.cfi_remember_state
 313              		.cfi_restore 8
 314              		.cfi_def_cfa 2, 16
 315 01d4 13010101 		addi	sp,sp,16
 316              		.cfi_def_cfa_offset 0
 317 01d8 67800000 		jr	ra
 318              	.L28:
 319              		.cfi_restore_state
 115:src/memoryAllocator.cpp ****         curr->size+=curr->next->size;
 320              		.loc 1 115 9 is_stmt 1
 115:src/memoryAllocator.cpp ****         curr->size+=curr->next->size;
 321              		.loc 1 115 33 is_stmt 0
 322 01dc 03B70700 		ld	a4,0(a5)
 115:src/memoryAllocator.cpp ****         curr->size+=curr->next->size;
 323              		.loc 1 115 19
 324 01e0 B386E600 		add	a3,a3,a4
 325 01e4 2330D500 		sd	a3,0(a0)
 116:src/memoryAllocator.cpp ****         if(curr->next) curr->next->prev=curr;
 326              		.loc 1 116 9 is_stmt 1
 116:src/memoryAllocator.cpp ****         if(curr->next) curr->next->prev=curr;
 327              		.loc 1 116 32 is_stmt 0
 328 01e8 83B78700 		ld	a5,8(a5)
 116:src/memoryAllocator.cpp ****         if(curr->next) curr->next->prev=curr;
 329              		.loc 1 116 19
 330 01ec 2334F500 		sd	a5,8(a0)
 117:src/memoryAllocator.cpp ****     }
 331              		.loc 1 117 9 is_stmt 1
 332 01f0 E38007FE 		beqz	a5,.L25
 117:src/memoryAllocator.cpp ****     }
 333              		.loc 1 117 24 discriminator 1
 117:src/memoryAllocator.cpp ****     }
 334              		.loc 1 117 40 is_stmt 0 discriminator 1
 335 01f4 23B8A700 		sd	a0,16(a5)
 336 01f8 6FF09FFD 		j	.L25
 337              		.cfi_endproc
 338              	.LFE3:
 340              		.align	2
 341              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 343              	_ZN15MemoryAllocator8mem_freeEPv:
 344              	.LFB2:
  71:src/memoryAllocator.cpp **** 
GAS LISTING /tmp/cc8ioz4J.s 			page 10


 345              		.loc 1 71 42 is_stmt 1
 346              		.cfi_startproc
 347              	.LVL20:
  73:src/memoryAllocator.cpp ****     ptr=(DBlock*)((char*)ptr-DBlockSize);
 348              		.loc 1 73 5
 349 01fc 630C0510 		beqz	a0,.L41
  71:src/memoryAllocator.cpp **** 
 350              		.loc 1 71 42 is_stmt 0
 351 0200 130101FE 		addi	sp,sp,-32
 352              		.cfi_def_cfa_offset 32
 353 0204 233C1100 		sd	ra,24(sp)
 354 0208 23388100 		sd	s0,16(sp)
 355 020c 23349100 		sd	s1,8(sp)
 356              		.cfi_offset 1, -8
 357              		.cfi_offset 8, -16
 358              		.cfi_offset 9, -24
 359 0210 13040102 		addi	s0,sp,32
 360              		.cfi_def_cfa 8, 0
  74:src/memoryAllocator.cpp ****     for(DBlock* curr=headFull; curr || ptr<=curr; curr=curr->next){
 361              		.loc 1 74 5 is_stmt 1
  74:src/memoryAllocator.cpp ****     for(DBlock* curr=headFull; curr || ptr<=curr; curr=curr->next){
 362              		.loc 1 74 8 is_stmt 0
 363 0214 130585FE 		addi	a0,a0,-24
 364              	.LVL21:
  75:src/memoryAllocator.cpp ****         if(curr==ptr){ //curr izbacujemo iz full liste
 365              		.loc 1 75 5 is_stmt 1
 366              	.LBB7:
  75:src/memoryAllocator.cpp ****         if(curr==ptr){ //curr izbacujemo iz full liste
 367              		.loc 1 75 17 is_stmt 0
 368 0218 97070000 		ld	a5,.LANCHOR0+16
 368      83B70700 
 369              	.LVL22:
 370 0220 93840700 		mv	s1,a5
 371 0224 6F00C000 		j	.L40
 372              	.LVL23:
 373              	.L31:
 374              	.LBE7:
  76:src/memoryAllocator.cpp ****             if(curr->next) curr->next->prev=curr->prev;
 375              		.loc 1 76 9 is_stmt 1
 376              	.LBB13:
 377              	.LBB8:
 378 0228 638CA400 		beq	s1,a0,.L47
 379              	.LBE8:
  75:src/memoryAllocator.cpp ****         if(curr==ptr){ //curr izbacujemo iz full liste
 380              		.loc 1 75 5 discriminator 3
  75:src/memoryAllocator.cpp ****         if(curr==ptr){ //curr izbacujemo iz full liste
 381              		.loc 1 75 55 is_stmt 0 discriminator 3
 382 022c 83B48400 		ld	s1,8(s1)
 383              	.LVL24:
 384              	.L40:
  75:src/memoryAllocator.cpp ****         if(curr==ptr){ //curr izbacujemo iz full liste
 385              		.loc 1 75 37 is_stmt 1 discriminator 1
 386 0230 E39C04FE 		bnez	s1,.L31
  75:src/memoryAllocator.cpp ****         if(curr==ptr){ //curr izbacujemo iz full liste
 387              		.loc 1 75 37 is_stmt 0 discriminator 2
 388 0234 E3FAA4FE 		bgeu	s1,a0,.L31
 389              	.LBE13:
GAS LISTING /tmp/cc8ioz4J.s 			page 11


 109:src/memoryAllocator.cpp **** }
 390              		.loc 1 109 13
 391 0238 1305F0FF 		li	a0,-1
 392              	.LVL25:
 393 023c 6F000008 		j	.L30
 394              	.LVL26:
 395              	.L47:
 396              	.LBB14:
 397              	.LBB11:
 398              	.LBB9:
  77:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next;
 399              		.loc 1 77 13 is_stmt 1
  77:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next;
 400              		.loc 1 77 22 is_stmt 0
 401 0240 03B78400 		ld	a4,8(s1)
  77:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next;
 402              		.loc 1 77 13
 403 0244 63060700 		beqz	a4,.L33
  77:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next;
 404              		.loc 1 77 28 is_stmt 1 discriminator 1
  77:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next;
 405              		.loc 1 77 51 is_stmt 0 discriminator 1
 406 0248 83B60401 		ld	a3,16(s1)
  77:src/memoryAllocator.cpp ****             if(curr->prev) curr->prev->next=curr->next;
 407              		.loc 1 77 44 discriminator 1
 408 024c 2338D700 		sd	a3,16(a4)
 409              	.L33:
  78:src/memoryAllocator.cpp ****             if (curr == headFull) headFull = curr->next;
 410              		.loc 1 78 13 is_stmt 1
  78:src/memoryAllocator.cpp ****             if (curr == headFull) headFull = curr->next;
 411              		.loc 1 78 22 is_stmt 0
 412 0250 03B70401 		ld	a4,16(s1)
  78:src/memoryAllocator.cpp ****             if (curr == headFull) headFull = curr->next;
 413              		.loc 1 78 13
 414 0254 63060700 		beqz	a4,.L34
  78:src/memoryAllocator.cpp ****             if (curr == headFull) headFull = curr->next;
 415              		.loc 1 78 28 is_stmt 1 discriminator 1
  78:src/memoryAllocator.cpp ****             if (curr == headFull) headFull = curr->next;
 416              		.loc 1 78 51 is_stmt 0 discriminator 1
 417 0258 83B68400 		ld	a3,8(s1)
  78:src/memoryAllocator.cpp ****             if (curr == headFull) headFull = curr->next;
 418              		.loc 1 78 44 discriminator 1
 419 025c 2334D700 		sd	a3,8(a4)
 420              	.L34:
  79:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 421              		.loc 1 79 13 is_stmt 1
 422 0260 6388F406 		beq	s1,a5,.L48
 423              	.L35:
  80:src/memoryAllocator.cpp **** 
 424              		.loc 1 80 13
  80:src/memoryAllocator.cpp **** 
 425              		.loc 1 80 37 is_stmt 0
 426 0264 23B40400 		sd	zero,8(s1)
  80:src/memoryAllocator.cpp **** 
 427              		.loc 1 80 24
 428 0268 23B80400 		sd	zero,16(s1)
  84:src/memoryAllocator.cpp ****                 headFree=curr;
GAS LISTING /tmp/cc8ioz4J.s 			page 12


 429              		.loc 1 84 13 is_stmt 1
  84:src/memoryAllocator.cpp ****                 headFree=curr;
 430              		.loc 1 84 16 is_stmt 0
 431 026c 97070000 		ld	a5,.LANCHOR0+8
 431      83B70700 
  84:src/memoryAllocator.cpp ****                 headFree=curr;
 432              		.loc 1 84 13
 433 0274 63860706 		beqz	a5,.L49
  89:src/memoryAllocator.cpp ****                 curr->next=headFree;
 434              		.loc 1 89 13 is_stmt 1
 435 0278 63ECF406 		bgtu	a5,s1,.L50
 436              	.L37:
 437              	.LVL27:
  98:src/memoryAllocator.cpp ****             curr->next=currFree->next;
 438              		.loc 1 98 13 discriminator 3
  98:src/memoryAllocator.cpp ****             curr->next=currFree->next;
 439              		.loc 1 98 34 discriminator 3
 440 027c 13870700 		mv	a4,a5
  98:src/memoryAllocator.cpp ****             curr->next=currFree->next;
 441              		.loc 1 98 29 is_stmt 0 discriminator 3
 442 0280 83B78700 		ld	a5,8(a5)
 443              	.LVL28:
  98:src/memoryAllocator.cpp ****             curr->next=currFree->next;
 444              		.loc 1 98 34 discriminator 3
 445 0284 63840700 		beqz	a5,.L38
  98:src/memoryAllocator.cpp ****             curr->next=currFree->next;
 446              		.loc 1 98 34 discriminator 1
 447 0288 E3EA97FE 		bltu	a5,s1,.L37
 448              	.L38:
  99:src/memoryAllocator.cpp ****             if(currFree->next) currFree->next->prev=curr;
 449              		.loc 1 99 13 is_stmt 1
  99:src/memoryAllocator.cpp ****             if(currFree->next) currFree->next->prev=curr;
 450              		.loc 1 99 23 is_stmt 0
 451 028c 23B4F400 		sd	a5,8(s1)
 100:src/memoryAllocator.cpp ****             curr->prev=currFree;
 452              		.loc 1 100 13 is_stmt 1
 453 0290 63840700 		beqz	a5,.L39
 100:src/memoryAllocator.cpp ****             curr->prev=currFree;
 454              		.loc 1 100 32 discriminator 1
 100:src/memoryAllocator.cpp ****             curr->prev=currFree;
 455              		.loc 1 100 52 is_stmt 0 discriminator 1
 456 0294 23B89700 		sd	s1,16(a5)
 457              	.L39:
 101:src/memoryAllocator.cpp ****             currFree->next=curr;
 458              		.loc 1 101 13 is_stmt 1
 101:src/memoryAllocator.cpp ****             currFree->next=curr;
 459              		.loc 1 101 23 is_stmt 0
 460 0298 23B8E400 		sd	a4,16(s1)
 102:src/memoryAllocator.cpp ****             tryToJoin(curr);
 461              		.loc 1 102 13 is_stmt 1
 102:src/memoryAllocator.cpp ****             tryToJoin(curr);
 462              		.loc 1 102 27 is_stmt 0
 463 029c 23349700 		sd	s1,8(a4)
 103:src/memoryAllocator.cpp ****             tryToJoin(curr->prev);
 464              		.loc 1 103 13 is_stmt 1
 103:src/memoryAllocator.cpp ****             tryToJoin(curr->prev);
 465              		.loc 1 103 22 is_stmt 0
GAS LISTING /tmp/cc8ioz4J.s 			page 13


 466 02a0 13850400 		mv	a0,s1
 467              	.LVL29:
 468 02a4 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPNS_6DBlockE
 468      E7800000 
 469              	.LVL30:
 104:src/memoryAllocator.cpp ****             return 0;
 470              		.loc 1 104 13 is_stmt 1
 104:src/memoryAllocator.cpp ****             return 0;
 471              		.loc 1 104 22 is_stmt 0
 472 02ac 03B50401 		ld	a0,16(s1)
 473 02b0 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPNS_6DBlockE
 473      E7800000 
 474              	.LVL31:
 105:src/memoryAllocator.cpp ****         }
 475              		.loc 1 105 13 is_stmt 1
 105:src/memoryAllocator.cpp ****         }
 476              		.loc 1 105 20 is_stmt 0
 477 02b8 13050000 		li	a0,0
 478              	.L30:
 479              	.LBE9:
 480              	.LBE11:
 481              	.LBE14:
 110:src/memoryAllocator.cpp **** 
 482              		.loc 1 110 1
 483 02bc 83308101 		ld	ra,24(sp)
 484              		.cfi_remember_state
 485              		.cfi_restore 1
 486 02c0 03340101 		ld	s0,16(sp)
 487              		.cfi_restore 8
 488              		.cfi_def_cfa 2, 32
 489 02c4 83348100 		ld	s1,8(sp)
 490              		.cfi_restore 9
 491              	.LVL32:
 492 02c8 13010102 		addi	sp,sp,32
 493              		.cfi_def_cfa_offset 0
 494 02cc 67800000 		jr	ra
 495              	.LVL33:
 496              	.L48:
 497              		.cfi_restore_state
 498              	.LBB15:
 499              	.LBB12:
 500              	.LBB10:
  79:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 501              		.loc 1 79 35 is_stmt 1 discriminator 1
  79:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 502              		.loc 1 79 52 is_stmt 0 discriminator 1
 503 02d0 83B78400 		ld	a5,8(s1)
  79:src/memoryAllocator.cpp ****             curr->prev = curr->next = nullptr;
 504              		.loc 1 79 44 discriminator 1
 505 02d4 17070000 		sd	a5,.LANCHOR0+16,a4
 505      2330F700 
 506 02dc 6FF09FF8 		j	.L35
 507              	.L49:
  85:src/memoryAllocator.cpp ****                 return 0;
 508              		.loc 1 85 17 is_stmt 1
  85:src/memoryAllocator.cpp ****                 return 0;
 509              		.loc 1 85 25 is_stmt 0
GAS LISTING /tmp/cc8ioz4J.s 			page 14


 510 02e0 97070000 		sd	s1,.LANCHOR0+8,a5
 510      23B09700 
  86:src/memoryAllocator.cpp ****             }
 511              		.loc 1 86 17 is_stmt 1
  86:src/memoryAllocator.cpp ****             }
 512              		.loc 1 86 24 is_stmt 0
 513 02e8 13050000 		li	a0,0
 514              	.LVL34:
 515 02ec 6FF01FFD 		j	.L30
 516              	.LVL35:
 517              	.L50:
  90:src/memoryAllocator.cpp ****                 headFree->prev=curr;
 518              		.loc 1 90 17 is_stmt 1
  90:src/memoryAllocator.cpp ****                 headFree->prev=curr;
 519              		.loc 1 90 27 is_stmt 0
 520 02f0 23B4F400 		sd	a5,8(s1)
  91:src/memoryAllocator.cpp ****                 headFree=curr;
 521              		.loc 1 91 17 is_stmt 1
  91:src/memoryAllocator.cpp ****                 headFree=curr;
 522              		.loc 1 91 31 is_stmt 0
 523 02f4 23B89700 		sd	s1,16(a5)
  92:src/memoryAllocator.cpp ****                 tryToJoin(headFree);
 524              		.loc 1 92 17 is_stmt 1
  92:src/memoryAllocator.cpp ****                 tryToJoin(headFree);
 525              		.loc 1 92 25 is_stmt 0
 526 02f8 97070000 		sd	s1,.LANCHOR0+8,a5
 526      23B09700 
  93:src/memoryAllocator.cpp ****                 return 0;
 527              		.loc 1 93 17 is_stmt 1
  93:src/memoryAllocator.cpp ****                 return 0;
 528              		.loc 1 93 26 is_stmt 0
 529 0300 13850400 		mv	a0,s1
 530              	.LVL36:
 531 0304 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPNS_6DBlockE
 531      E7800000 
 532              	.LVL37:
  94:src/memoryAllocator.cpp ****             } //stavljamo na pocetak liste
 533              		.loc 1 94 17 is_stmt 1
  94:src/memoryAllocator.cpp ****             } //stavljamo na pocetak liste
 534              		.loc 1 94 24 is_stmt 0
 535 030c 13050000 		li	a0,0
 536 0310 6FF0DFFA 		j	.L30
 537              	.LVL38:
 538              	.L41:
 539              		.cfi_def_cfa_register 2
 540              		.cfi_restore 1
 541              		.cfi_restore 8
 542              		.cfi_restore 9
 543              	.LBE10:
 544              	.LBE12:
 545              	.LBE15:
  73:src/memoryAllocator.cpp ****     ptr=(DBlock*)((char*)ptr-DBlockSize);
 546              		.loc 1 73 22
 547 0314 1305F0FF 		li	a0,-1
 548              	.LVL39:
 110:src/memoryAllocator.cpp **** 
 549              		.loc 1 110 1
GAS LISTING /tmp/cc8ioz4J.s 			page 15


 550 0318 67800000 		ret
 551              		.cfi_endproc
 552              	.LFE2:
 554              		.globl	_ZN15MemoryAllocator10DBlockSizeE
 555              		.globl	_ZN15MemoryAllocator11initializedE
 556              		.globl	_ZN15MemoryAllocator8headFreeE
 557              		.globl	_ZN15MemoryAllocator8headFullE
 558              		.section	.rodata
 559              		.align	3
 562              	_ZN15MemoryAllocator10DBlockSizeE:
 563 0000 18000000 		.dword	24
 563      00000000 
 564              		.bss
 565              		.align	3
 566              		.set	.LANCHOR0,. + 0
 569              	_ZN15MemoryAllocator11initializedE:
 570 0000 00       		.zero	1
 571 0001 00000000 		.zero	7
 571      000000
 574              	_ZN15MemoryAllocator8headFreeE:
 575 0008 00000000 		.zero	8
 575      00000000 
 578              	_ZN15MemoryAllocator8headFullE:
 579 0010 00000000 		.zero	8
 579      00000000 
 580              		.text
 581              	.Letext0:
 582              		.file 2 "src/../lib/hw.h"
 583              		.file 3 "src/../h/memoryAllocator.hpp"
GAS LISTING /tmp/cc8ioz4J.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memoryAllocator.cpp
     /tmp/cc8ioz4J.s:9      .text:0000000000000000 _ZN15MemoryAllocator4initEv
     /tmp/cc8ioz4J.s:13     .text:0000000000000000 .L0 
     /tmp/cc8ioz4J.s:14     .text:0000000000000000 .L0 
     /tmp/cc8ioz4J.s:15     .text:0000000000000004 .L0 
     /tmp/cc8ioz4J.s:17     .text:0000000000000008 .L0 
     /tmp/cc8ioz4J.s:19     .text:000000000000000c .L0 
     /tmp/cc8ioz4J.s:21     .text:000000000000000c .L0 
     /tmp/cc8ioz4J.s:22     .text:000000000000000c .L0 
     /tmp/cc8ioz4J.s:24     .text:0000000000000014 .L0 
     /tmp/cc8ioz4J.s:26     .text:0000000000000018 .L0 
     /tmp/cc8ioz4J.s:27     .text:0000000000000018 .L0 
     /tmp/cc8ioz4J.s:32     .text:0000000000000030 .L0 
     /tmp/cc8ioz4J.s:33     .text:0000000000000030 .L0 
     /tmp/cc8ioz4J.s:38     .text:0000000000000044 .L0 
     /tmp/cc8ioz4J.s:40     .text:0000000000000048 .L0 
     /tmp/cc8ioz4J.s:42     .text:000000000000004c .L0 
     /tmp/cc8ioz4J.s:44     .text:0000000000000050 .L0 
     /tmp/cc8ioz4J.s:45     .text:0000000000000050 .L0 
     /tmp/cc8ioz4J.s:47     .text:0000000000000054 .L0 
     /tmp/cc8ioz4J.s:49     .text:0000000000000058 .L0 
     /tmp/cc8ioz4J.s:50     .text:0000000000000058 .L0 
     /tmp/cc8ioz4J.s:52     .text:000000000000005c .L0 
     /tmp/cc8ioz4J.s:53     .text:000000000000005c .L0 
     /tmp/cc8ioz4J.s:57     .text:0000000000000064 .L0 
     /tmp/cc8ioz4J.s:58     .text:0000000000000068 .L0 
     /tmp/cc8ioz4J.s:59     .text:0000000000000068 .L0 
     /tmp/cc8ioz4J.s:61     .text:000000000000006c .L0 
     /tmp/cc8ioz4J.s:63     .text:0000000000000070 .L0 
     /tmp/cc8ioz4J.s:69     .text:0000000000000070 _ZN15MemoryAllocator9mem_allocEm
     /tmp/cc8ioz4J.s:72     .text:0000000000000070 .L0 
     /tmp/cc8ioz4J.s:74     .text:0000000000000070 .L0 
     /tmp/cc8ioz4J.s:75     .text:0000000000000074 .L0 
     /tmp/cc8ioz4J.s:77     .text:0000000000000078 .L0 
     /tmp/cc8ioz4J.s:79     .text:000000000000007c .L0 
     /tmp/cc8ioz4J.s:81     .text:000000000000007c .L0 
     /tmp/cc8ioz4J.s:84     .text:0000000000000084 .L0 
     /tmp/cc8ioz4J.s:91     .text:00000000000000a4 .L0 
     /tmp/cc8ioz4J.s:93     .text:00000000000000a8 .L0 
     /tmp/cc8ioz4J.s:96     .text:00000000000000ac .L0 
     /tmp/cc8ioz4J.s:98     .text:00000000000000ac .L0 
     /tmp/cc8ioz4J.s:99     .text:00000000000000ac .L0 
     /tmp/cc8ioz4J.s:105    .text:00000000000000b8 .L0 
     /tmp/cc8ioz4J.s:108    .text:00000000000000bc .L0 
     /tmp/cc8ioz4J.s:109    .text:00000000000000bc .L0 
     /tmp/cc8ioz4J.s:111    .text:00000000000000c0 .L0 
     /tmp/cc8ioz4J.s:113    .text:00000000000000c4 .L0 
     /tmp/cc8ioz4J.s:115    .text:00000000000000c8 .L0 
     /tmp/cc8ioz4J.s:116    .text:00000000000000c8 .L0 
     /tmp/cc8ioz4J.s:119    .text:00000000000000d0 .L0 
     /tmp/cc8ioz4J.s:120    .text:00000000000000d0 .L0 
     /tmp/cc8ioz4J.s:122    .text:00000000000000d4 .L0 
     /tmp/cc8ioz4J.s:125    .text:00000000000000d8 .L0 
     /tmp/cc8ioz4J.s:126    .text:00000000000000d8 .L0 
     /tmp/cc8ioz4J.s:128    .text:00000000000000dc .L0 
     /tmp/cc8ioz4J.s:129    .text:00000000000000dc .L0 
GAS LISTING /tmp/cc8ioz4J.s 			page 17


     /tmp/cc8ioz4J.s:131    .text:00000000000000e0 .L0 
     /tmp/cc8ioz4J.s:132    .text:00000000000000e0 .L0 
     /tmp/cc8ioz4J.s:136    .text:00000000000000e4 .L0 
     /tmp/cc8ioz4J.s:137    .text:00000000000000e4 .L0 
     /tmp/cc8ioz4J.s:139    .text:00000000000000ec .L0 
     /tmp/cc8ioz4J.s:141    .text:00000000000000f0 .L0 
     /tmp/cc8ioz4J.s:145    .text:00000000000000f4 .L0 
     /tmp/cc8ioz4J.s:146    .text:00000000000000f4 .L0 
     /tmp/cc8ioz4J.s:148    .text:00000000000000f8 .L0 
     /tmp/cc8ioz4J.s:151    .text:00000000000000fc .L0 
     /tmp/cc8ioz4J.s:153    .text:0000000000000100 .L0 
     /tmp/cc8ioz4J.s:156    .text:0000000000000104 .L0 
     /tmp/cc8ioz4J.s:157    .text:0000000000000104 .L0 
     /tmp/cc8ioz4J.s:159    .text:0000000000000108 .L0 
     /tmp/cc8ioz4J.s:161    .text:000000000000010c .L0 
     /tmp/cc8ioz4J.s:162    .text:000000000000010c .L0 
     /tmp/cc8ioz4J.s:165    .text:0000000000000110 .L0 
     /tmp/cc8ioz4J.s:166    .text:0000000000000110 .L0 
     /tmp/cc8ioz4J.s:168    .text:0000000000000114 .L0 
     /tmp/cc8ioz4J.s:169    .text:0000000000000114 .L0 
     /tmp/cc8ioz4J.s:171    .text:0000000000000118 .L0 
     /tmp/cc8ioz4J.s:172    .text:0000000000000118 .L0 
     /tmp/cc8ioz4J.s:178    .text:000000000000011c .L0 
     /tmp/cc8ioz4J.s:179    .text:0000000000000120 .L0 
     /tmp/cc8ioz4J.s:180    .text:0000000000000120 .L0 
     /tmp/cc8ioz4J.s:181    .text:0000000000000120 .L0 
     /tmp/cc8ioz4J.s:183    .text:0000000000000124 .L0 
     /tmp/cc8ioz4J.s:187    .text:0000000000000128 .L0 
     /tmp/cc8ioz4J.s:192    .text:0000000000000128 .L0 
     /tmp/cc8ioz4J.s:193    .text:0000000000000128 .L0 
     /tmp/cc8ioz4J.s:194    .text:0000000000000128 .L0 
     /tmp/cc8ioz4J.s:197    .text:000000000000012c .L0 
     /tmp/cc8ioz4J.s:201    .text:0000000000000130 .L0 
     /tmp/cc8ioz4J.s:202    .text:0000000000000130 .L0 
     /tmp/cc8ioz4J.s:205    .text:0000000000000134 .L0 
     /tmp/cc8ioz4J.s:207    .text:0000000000000138 .L0 
     /tmp/cc8ioz4J.s:208    .text:0000000000000138 .L0 
     /tmp/cc8ioz4J.s:210    .text:000000000000013c .L0 
     /tmp/cc8ioz4J.s:213    .text:0000000000000140 .L0 
     /tmp/cc8ioz4J.s:214    .text:0000000000000140 .L0 
     /tmp/cc8ioz4J.s:216    .text:0000000000000144 .L0 
     /tmp/cc8ioz4J.s:218    .text:0000000000000148 .L0 
     /tmp/cc8ioz4J.s:219    .text:0000000000000148 .L0 
     /tmp/cc8ioz4J.s:221    .text:000000000000014c .L0 
     /tmp/cc8ioz4J.s:224    .text:0000000000000150 .L0 
     /tmp/cc8ioz4J.s:227    .text:0000000000000154 .L0 
     /tmp/cc8ioz4J.s:228    .text:0000000000000154 .L0 
     /tmp/cc8ioz4J.s:230    .text:0000000000000158 .L0 
     /tmp/cc8ioz4J.s:234    .text:0000000000000160 .L0 
     /tmp/cc8ioz4J.s:235    .text:0000000000000160 .L0 
     /tmp/cc8ioz4J.s:237    .text:0000000000000164 .L0 
     /tmp/cc8ioz4J.s:241    .text:0000000000000170 .L0 
     /tmp/cc8ioz4J.s:242    .text:0000000000000170 .L0 
     /tmp/cc8ioz4J.s:244    .text:0000000000000178 .L0 
     /tmp/cc8ioz4J.s:245    .text:0000000000000178 .L0 
     /tmp/cc8ioz4J.s:251    .text:0000000000000180 .L0 
     /tmp/cc8ioz4J.s:252    .text:0000000000000180 .L0 
GAS LISTING /tmp/cc8ioz4J.s 			page 18


     /tmp/cc8ioz4J.s:254    .text:0000000000000184 .L0 
     /tmp/cc8ioz4J.s:255    .text:0000000000000184 .L0 
     /tmp/cc8ioz4J.s:257    .text:0000000000000188 .L0 
     /tmp/cc8ioz4J.s:258    .text:0000000000000188 .L0 
     /tmp/cc8ioz4J.s:260    .text:0000000000000190 .L0 
     /tmp/cc8ioz4J.s:261    .text:0000000000000190 .L0 
     /tmp/cc8ioz4J.s:269    .text:0000000000000198 .L0 
     /tmp/cc8ioz4J.s:277    .text:00000000000001a8 .L0 
     /tmp/cc8ioz4J.s:283    .text:00000000000001a8 _ZN15MemoryAllocator9tryToJoinEPNS_6DBlockE
     /tmp/cc8ioz4J.s:286    .text:00000000000001a8 .L0 
     /tmp/cc8ioz4J.s:288    .text:00000000000001a8 .L0 
     /tmp/cc8ioz4J.s:289    .text:00000000000001ac .L0 
     /tmp/cc8ioz4J.s:291    .text:00000000000001b0 .L0 
     /tmp/cc8ioz4J.s:293    .text:00000000000001b4 .L0 
     /tmp/cc8ioz4J.s:295    .text:00000000000001b4 .L0 
     /tmp/cc8ioz4J.s:297    .text:00000000000001b8 .L0 
     /tmp/cc8ioz4J.s:298    .text:00000000000001b8 .L0 
     /tmp/cc8ioz4J.s:300    .text:00000000000001bc .L0 
     /tmp/cc8ioz4J.s:302    .text:00000000000001c0 .L0 
     /tmp/cc8ioz4J.s:304    .text:00000000000001c4 .L0 
     /tmp/cc8ioz4J.s:306    .text:00000000000001c8 .L0 
     /tmp/cc8ioz4J.s:308    .text:00000000000001cc .L0 
     /tmp/cc8ioz4J.s:311    .text:00000000000001d0 .L0 
     /tmp/cc8ioz4J.s:312    .text:00000000000001d4 .L0 
     /tmp/cc8ioz4J.s:313    .text:00000000000001d4 .L0 
     /tmp/cc8ioz4J.s:314    .text:00000000000001d4 .L0 
     /tmp/cc8ioz4J.s:316    .text:00000000000001d8 .L0 
     /tmp/cc8ioz4J.s:319    .text:00000000000001dc .L0 
     /tmp/cc8ioz4J.s:321    .text:00000000000001dc .L0 
     /tmp/cc8ioz4J.s:322    .text:00000000000001dc .L0 
     /tmp/cc8ioz4J.s:324    .text:00000000000001e0 .L0 
     /tmp/cc8ioz4J.s:327    .text:00000000000001e8 .L0 
     /tmp/cc8ioz4J.s:328    .text:00000000000001e8 .L0 
     /tmp/cc8ioz4J.s:330    .text:00000000000001ec .L0 
     /tmp/cc8ioz4J.s:332    .text:00000000000001f0 .L0 
     /tmp/cc8ioz4J.s:334    .text:00000000000001f4 .L0 
     /tmp/cc8ioz4J.s:335    .text:00000000000001f4 .L0 
     /tmp/cc8ioz4J.s:337    .text:00000000000001fc .L0 
     /tmp/cc8ioz4J.s:343    .text:00000000000001fc _ZN15MemoryAllocator8mem_freeEPv
     /tmp/cc8ioz4J.s:346    .text:00000000000001fc .L0 
     /tmp/cc8ioz4J.s:348    .text:00000000000001fc .L0 
     /tmp/cc8ioz4J.s:349    .text:00000000000001fc .L0 
     /tmp/cc8ioz4J.s:351    .text:0000000000000200 .L0 
     /tmp/cc8ioz4J.s:352    .text:0000000000000204 .L0 
     /tmp/cc8ioz4J.s:356    .text:0000000000000210 .L0 
     /tmp/cc8ioz4J.s:357    .text:0000000000000210 .L0 
     /tmp/cc8ioz4J.s:358    .text:0000000000000210 .L0 
     /tmp/cc8ioz4J.s:360    .text:0000000000000214 .L0 
     /tmp/cc8ioz4J.s:362    .text:0000000000000214 .L0 
     /tmp/cc8ioz4J.s:363    .text:0000000000000214 .L0 
     /tmp/cc8ioz4J.s:367    .text:0000000000000218 .L0 
     /tmp/cc8ioz4J.s:368    .text:0000000000000218 .L0 
     /tmp/cc8ioz4J.s:378    .text:0000000000000228 .L0 
     /tmp/cc8ioz4J.s:381    .text:000000000000022c .L0 
     /tmp/cc8ioz4J.s:382    .text:000000000000022c .L0 
     /tmp/cc8ioz4J.s:386    .text:0000000000000230 .L0 
     /tmp/cc8ioz4J.s:388    .text:0000000000000234 .L0 
GAS LISTING /tmp/cc8ioz4J.s 			page 19


     /tmp/cc8ioz4J.s:391    .text:0000000000000238 .L0 
     /tmp/cc8ioz4J.s:400    .text:0000000000000240 .L0 
     /tmp/cc8ioz4J.s:401    .text:0000000000000240 .L0 
     /tmp/cc8ioz4J.s:403    .text:0000000000000244 .L0 
     /tmp/cc8ioz4J.s:405    .text:0000000000000248 .L0 
     /tmp/cc8ioz4J.s:406    .text:0000000000000248 .L0 
     /tmp/cc8ioz4J.s:408    .text:000000000000024c .L0 
     /tmp/cc8ioz4J.s:411    .text:0000000000000250 .L0 
     /tmp/cc8ioz4J.s:412    .text:0000000000000250 .L0 
     /tmp/cc8ioz4J.s:414    .text:0000000000000254 .L0 
     /tmp/cc8ioz4J.s:416    .text:0000000000000258 .L0 
     /tmp/cc8ioz4J.s:417    .text:0000000000000258 .L0 
     /tmp/cc8ioz4J.s:419    .text:000000000000025c .L0 
     /tmp/cc8ioz4J.s:422    .text:0000000000000260 .L0 
     /tmp/cc8ioz4J.s:425    .text:0000000000000264 .L0 
     /tmp/cc8ioz4J.s:426    .text:0000000000000264 .L0 
     /tmp/cc8ioz4J.s:428    .text:0000000000000268 .L0 
     /tmp/cc8ioz4J.s:430    .text:000000000000026c .L0 
     /tmp/cc8ioz4J.s:431    .text:000000000000026c .L0 
     /tmp/cc8ioz4J.s:433    .text:0000000000000274 .L0 
     /tmp/cc8ioz4J.s:435    .text:0000000000000278 .L0 
     /tmp/cc8ioz4J.s:439    .text:000000000000027c .L0 
     /tmp/cc8ioz4J.s:440    .text:000000000000027c .L0 
     /tmp/cc8ioz4J.s:442    .text:0000000000000280 .L0 
     /tmp/cc8ioz4J.s:445    .text:0000000000000284 .L0 
     /tmp/cc8ioz4J.s:447    .text:0000000000000288 .L0 
     /tmp/cc8ioz4J.s:450    .text:000000000000028c .L0 
     /tmp/cc8ioz4J.s:451    .text:000000000000028c .L0 
     /tmp/cc8ioz4J.s:453    .text:0000000000000290 .L0 
     /tmp/cc8ioz4J.s:455    .text:0000000000000294 .L0 
     /tmp/cc8ioz4J.s:456    .text:0000000000000294 .L0 
     /tmp/cc8ioz4J.s:459    .text:0000000000000298 .L0 
     /tmp/cc8ioz4J.s:460    .text:0000000000000298 .L0 
     /tmp/cc8ioz4J.s:462    .text:000000000000029c .L0 
     /tmp/cc8ioz4J.s:463    .text:000000000000029c .L0 
     /tmp/cc8ioz4J.s:465    .text:00000000000002a0 .L0 
     /tmp/cc8ioz4J.s:466    .text:00000000000002a0 .L0 
     /tmp/cc8ioz4J.s:471    .text:00000000000002ac .L0 
     /tmp/cc8ioz4J.s:472    .text:00000000000002ac .L0 
     /tmp/cc8ioz4J.s:476    .text:00000000000002b8 .L0 
     /tmp/cc8ioz4J.s:477    .text:00000000000002b8 .L0 
     /tmp/cc8ioz4J.s:483    .text:00000000000002bc .L0 
     /tmp/cc8ioz4J.s:484    .text:00000000000002c0 .L0 
     /tmp/cc8ioz4J.s:485    .text:00000000000002c0 .L0 
     /tmp/cc8ioz4J.s:487    .text:00000000000002c4 .L0 
     /tmp/cc8ioz4J.s:488    .text:00000000000002c4 .L0 
     /tmp/cc8ioz4J.s:490    .text:00000000000002c8 .L0 
     /tmp/cc8ioz4J.s:493    .text:00000000000002cc .L0 
     /tmp/cc8ioz4J.s:497    .text:00000000000002d0 .L0 
     /tmp/cc8ioz4J.s:502    .text:00000000000002d0 .L0 
     /tmp/cc8ioz4J.s:503    .text:00000000000002d0 .L0 
     /tmp/cc8ioz4J.s:505    .text:00000000000002d4 .L0 
     /tmp/cc8ioz4J.s:509    .text:00000000000002e0 .L0 
     /tmp/cc8ioz4J.s:510    .text:00000000000002e0 .L0 
     /tmp/cc8ioz4J.s:512    .text:00000000000002e8 .L0 
     /tmp/cc8ioz4J.s:513    .text:00000000000002e8 .L0 
     /tmp/cc8ioz4J.s:519    .text:00000000000002f0 .L0 
GAS LISTING /tmp/cc8ioz4J.s 			page 20


     /tmp/cc8ioz4J.s:520    .text:00000000000002f0 .L0 
     /tmp/cc8ioz4J.s:522    .text:00000000000002f4 .L0 
     /tmp/cc8ioz4J.s:523    .text:00000000000002f4 .L0 
     /tmp/cc8ioz4J.s:525    .text:00000000000002f8 .L0 
     /tmp/cc8ioz4J.s:526    .text:00000000000002f8 .L0 
     /tmp/cc8ioz4J.s:528    .text:0000000000000300 .L0 
     /tmp/cc8ioz4J.s:529    .text:0000000000000300 .L0 
     /tmp/cc8ioz4J.s:534    .text:000000000000030c .L0 
     /tmp/cc8ioz4J.s:535    .text:000000000000030c .L0 
     /tmp/cc8ioz4J.s:539    .text:0000000000000314 .L0 
     /tmp/cc8ioz4J.s:540    .text:0000000000000314 .L0 
     /tmp/cc8ioz4J.s:541    .text:0000000000000314 .L0 
     /tmp/cc8ioz4J.s:542    .text:0000000000000314 .L0 
     /tmp/cc8ioz4J.s:547    .text:0000000000000314 .L0 
     /tmp/cc8ioz4J.s:550    .text:0000000000000318 .L0 
     /tmp/cc8ioz4J.s:551    .text:000000000000031c .L0 
     /tmp/cc8ioz4J.s:562    .rodata:0000000000000000 _ZN15MemoryAllocator10DBlockSizeE
     /tmp/cc8ioz4J.s:569    .bss:0000000000000000 _ZN15MemoryAllocator11initializedE
     /tmp/cc8ioz4J.s:574    .bss:0000000000000008 _ZN15MemoryAllocator8headFreeE
     /tmp/cc8ioz4J.s:578    .bss:0000000000000010 _ZN15MemoryAllocator8headFullE
     /tmp/cc8ioz4J.s:566    .bss:0000000000000000 .LANCHOR0
     /tmp/cc8ioz4J.s:584    .text:000000000000031c .L0 
     /tmp/cc8ioz4J.s:22     .text:000000000000000c .L0 
     /tmp/cc8ioz4J.s:27     .text:0000000000000018 .L0 
     /tmp/cc8ioz4J.s:29     .text:0000000000000024 .L0 
     /tmp/cc8ioz4J.s:33     .text:0000000000000030 .L0 
     /tmp/cc8ioz4J.s:84     .text:0000000000000084 .L0 
     /tmp/cc8ioz4J.s:86     .text:0000000000000090 .L0 
     /tmp/cc8ioz4J.s:99     .text:00000000000000ac .L0 
     /tmp/cc8ioz4J.s:137    .text:00000000000000e4 .L0 
     /tmp/cc8ioz4J.s:237    .text:0000000000000164 .L0 
     /tmp/cc8ioz4J.s:242    .text:0000000000000170 .L0 
     /tmp/cc8ioz4J.s:258    .text:0000000000000188 .L0 
     /tmp/cc8ioz4J.s:368    .text:0000000000000218 .L0 
     /tmp/cc8ioz4J.s:431    .text:000000000000026c .L0 
     /tmp/cc8ioz4J.s:505    .text:00000000000002d4 .L0 
     /tmp/cc8ioz4J.s:510    .text:00000000000002e0 .L0 
     /tmp/cc8ioz4J.s:526    .text:00000000000002f8 .L0 
     /tmp/cc8ioz4J.s:55     .text:0000000000000064 .L1
     /tmp/cc8ioz4J.s:265    .text:0000000000000198 .L17
     /tmp/cc8ioz4J.s:273    .text:00000000000001a0 .L18
     /tmp/cc8ioz4J.s:174    .text:000000000000011c .L4
     /tmp/cc8ioz4J.s:186    .text:0000000000000128 .L20
     /tmp/cc8ioz4J.s:198    .text:0000000000000130 .L21
     /tmp/cc8ioz4J.s:239    .text:0000000000000170 .L22
     /tmp/cc8ioz4J.s:249    .text:0000000000000180 .L23
     /tmp/cc8ioz4J.s:154    .text:0000000000000104 .L15
     /tmp/cc8ioz4J.s:142    .text:00000000000000f4 .L14
     /tmp/cc8ioz4J.s:163    .text:0000000000000110 .L16
     /tmp/cc8ioz4J.s:103    .text:00000000000000b8 .L7
     /tmp/cc8ioz4J.s:211    .text:0000000000000140 .L9
     /tmp/cc8ioz4J.s:222    .text:0000000000000150 .L10
     /tmp/cc8ioz4J.s:232    .text:0000000000000160 .L24
     /tmp/cc8ioz4J.s:134    .text:00000000000000e4 .L12
     /tmp/cc8ioz4J.s:225    .text:0000000000000154 .L11
     /tmp/cc8ioz4J.s:309    .text:00000000000001d0 .L25
     /tmp/cc8ioz4J.s:318    .text:00000000000001dc .L28
GAS LISTING /tmp/cc8ioz4J.s 			page 21


     /tmp/cc8ioz4J.s:538    .text:0000000000000314 .L41
     /tmp/cc8ioz4J.s:384    .text:0000000000000230 .L40
     /tmp/cc8ioz4J.s:395    .text:0000000000000240 .L47
     /tmp/cc8ioz4J.s:373    .text:0000000000000228 .L31
     /tmp/cc8ioz4J.s:478    .text:00000000000002bc .L30
     /tmp/cc8ioz4J.s:409    .text:0000000000000250 .L33
     /tmp/cc8ioz4J.s:420    .text:0000000000000260 .L34
     /tmp/cc8ioz4J.s:496    .text:00000000000002d0 .L48
     /tmp/cc8ioz4J.s:507    .text:00000000000002e0 .L49
     /tmp/cc8ioz4J.s:517    .text:00000000000002f0 .L50
     /tmp/cc8ioz4J.s:448    .text:000000000000028c .L38
     /tmp/cc8ioz4J.s:436    .text:000000000000027c .L37
     /tmp/cc8ioz4J.s:457    .text:0000000000000298 .L39
     /tmp/cc8ioz4J.s:423    .text:0000000000000264 .L35
     /tmp/cc8ioz4J.s:1044   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc8ioz4J.s:1934   .debug_str:00000000000001f7 .LASF41
     /tmp/cc8ioz4J.s:1932   .debug_str:00000000000001df .LASF42
     /tmp/cc8ioz4J.s:1956   .debug_str:0000000000000377 .LASF43
     /tmp/cc8ioz4J.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc8ioz4J.s:581    .text:000000000000031c .Letext0
     /tmp/cc8ioz4J.s:1874   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc8ioz4J.s:1938   .debug_str:00000000000002c2 .LASF0
     /tmp/cc8ioz4J.s:1920   .debug_str:0000000000000173 .LASF1
     /tmp/cc8ioz4J.s:1912   .debug_str:000000000000012b .LASF2
     /tmp/cc8ioz4J.s:1890   .debug_str:000000000000004c .LASF4
     /tmp/cc8ioz4J.s:1918   .debug_str:0000000000000161 .LASF3
     /tmp/cc8ioz4J.s:1880   .debug_str:0000000000000023 .LASF5
     /tmp/cc8ioz4J.s:1876   .debug_str:0000000000000000 .LASF6
     /tmp/cc8ioz4J.s:1904   .debug_str:00000000000000df .LASF7
     /tmp/cc8ioz4J.s:1944   .debug_str:00000000000002fd .LASF8
     /tmp/cc8ioz4J.s:1888   .debug_str:000000000000003e .LASF9
     /tmp/cc8ioz4J.s:1976   .debug_str:0000000000000416 .LASF10
     /tmp/cc8ioz4J.s:1908   .debug_str:00000000000000fb .LASF11
     /tmp/cc8ioz4J.s:1964   .debug_str:00000000000003c9 .LASF12
     /tmp/cc8ioz4J.s:1950   .debug_str:000000000000033f .LASF13
     /tmp/cc8ioz4J.s:1922   .debug_str:0000000000000186 .LASF14
     /tmp/cc8ioz4J.s:1900   .debug_str:00000000000000c0 .LASF15
     /tmp/cc8ioz4J.s:1946   .debug_str:000000000000030d .LASF16
     /tmp/cc8ioz4J.s:1878   .debug_str:0000000000000013 .LASF28
     /tmp/cc8ioz4J.s:1936   .debug_str:00000000000002bb .LASF44
     /tmp/cc8ioz4J.s:1970   .debug_str:00000000000003ed .LASF17
     /tmp/cc8ioz4J.s:1882   .debug_str:000000000000002a .LASF18
     /tmp/cc8ioz4J.s:1974   .debug_str:0000000000000411 .LASF19
     /tmp/cc8ioz4J.s:1898   .debug_str:00000000000000bb .LASF24
     /tmp/cc8ioz4J.s:1948   .debug_str:0000000000000323 .LASF26
     /tmp/cc8ioz4J.s:1968   .debug_str:00000000000003e3 .LASF20
     /tmp/cc8ioz4J.s:1960   .debug_str:000000000000039f .LASF22
     /tmp/cc8ioz4J.s:1952   .debug_str:000000000000034f .LASF21
     /tmp/cc8ioz4J.s:1910   .debug_str:000000000000010a .LASF23
     /tmp/cc8ioz4J.s:1896   .debug_str:000000000000009f .LASF45
     /tmp/cc8ioz4J.s:1966   .debug_str:00000000000003d9 .LASF46
     /tmp/cc8ioz4J.s:1914   .debug_str:0000000000000139 .LASF47
     /tmp/cc8ioz4J.s:1962   .debug_str:00000000000003c0 .LASF25
     /tmp/cc8ioz4J.s:1892   .debug_str:0000000000000053 .LASF27
     /tmp/cc8ioz4J.s:1940   .debug_str:00000000000002cf .LASF48
     /tmp/cc8ioz4J.s:1930   .debug_str:00000000000001c6 .LASF29
     /tmp/cc8ioz4J.s:1906   .debug_str:00000000000000f2 .LASF30
GAS LISTING /tmp/cc8ioz4J.s 			page 22


     /tmp/cc8ioz4J.s:1902   .debug_str:00000000000000d6 .LASF31
     /tmp/cc8ioz4J.s:1916   .debug_str:0000000000000155 .LASF32
     /tmp/cc8ioz4J.s:1884   .debug_str:000000000000002f .LASF49
     /tmp/cc8ioz4J.s:1894   .debug_str:0000000000000073 .LASF50
     /tmp/cc8ioz4J.s:1958   .debug_str:000000000000039a .LASF33
     /tmp/cc8ioz4J.s:1954   .debug_str:0000000000000358 .LASF34
     /tmp/cc8ioz4J.s:1972   .debug_str:00000000000003f2 .LASF35
     /tmp/cc8ioz4J.s:1942   .debug_str:00000000000002da .LASF36
     /tmp/cc8ioz4J.s:1928   .debug_str:00000000000001a4 .LASF37
     /tmp/cc8ioz4J.s:284    .text:00000000000001a8 .LFB3
     /tmp/cc8ioz4J.s:338    .text:00000000000001fc .LFE3
     /tmp/cc8ioz4J.s:1886   .debug_str:0000000000000039 .LASF38
     /tmp/cc8ioz4J.s:344    .text:00000000000001fc .LFB2
     /tmp/cc8ioz4J.s:552    .text:000000000000031c .LFE2
     /tmp/cc8ioz4J.s:1646   .debug_loc:0000000000000000 .LLST3
     /tmp/cc8ioz4J.s:1848   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc8ioz4J.s:1716   .debug_loc:00000000000000f8 .LLST4
     /tmp/cc8ioz4J.s:1926   .debug_str:000000000000019b .LASF39
     /tmp/cc8ioz4J.s:1731   .debug_loc:0000000000000141 .LLST5
     /tmp/cc8ioz4J.s:469    .text:00000000000002ac .LVL30
     /tmp/cc8ioz4J.s:474    .text:00000000000002b8 .LVL31
     /tmp/cc8ioz4J.s:532    .text:000000000000030c .LVL37
     /tmp/cc8ioz4J.s:70     .text:0000000000000070 .LFB1
     /tmp/cc8ioz4J.s:278    .text:00000000000001a8 .LFE1
     /tmp/cc8ioz4J.s:1742   .debug_loc:0000000000000177 .LLST0
     /tmp/cc8ioz4J.s:1790   .debug_loc:000000000000023b .LLST1
     /tmp/cc8ioz4J.s:1924   .debug_str:0000000000000192 .LASF40
     /tmp/cc8ioz4J.s:1824   .debug_loc:00000000000002e1 .LLST2
     /tmp/cc8ioz4J.s:10     .text:0000000000000000 .LFB0
     /tmp/cc8ioz4J.s:64     .text:0000000000000070 .LFE0
     /tmp/cc8ioz4J.s:347    .text:00000000000001fc .LVL20
     /tmp/cc8ioz4J.s:364    .text:0000000000000218 .LVL21
     /tmp/cc8ioz4J.s:392    .text:000000000000023c .LVL25
     /tmp/cc8ioz4J.s:394    .text:0000000000000240 .LVL26
     /tmp/cc8ioz4J.s:467    .text:00000000000002a4 .LVL29
     /tmp/cc8ioz4J.s:495    .text:00000000000002d0 .LVL33
     /tmp/cc8ioz4J.s:514    .text:00000000000002ec .LVL34
     /tmp/cc8ioz4J.s:516    .text:00000000000002f0 .LVL35
     /tmp/cc8ioz4J.s:530    .text:0000000000000304 .LVL36
     /tmp/cc8ioz4J.s:537    .text:0000000000000314 .LVL38
     /tmp/cc8ioz4J.s:548    .text:0000000000000318 .LVL39
     /tmp/cc8ioz4J.s:369    .text:0000000000000220 .LVL22
     /tmp/cc8ioz4J.s:372    .text:0000000000000228 .LVL23
     /tmp/cc8ioz4J.s:491    .text:00000000000002c8 .LVL32
     /tmp/cc8ioz4J.s:437    .text:000000000000027c .LVL27
     /tmp/cc8ioz4J.s:443    .text:0000000000000284 .LVL28
     /tmp/cc8ioz4J.s:73     .text:0000000000000070 .LVL0
     /tmp/cc8ioz4J.s:102    .text:00000000000000b8 .LVL3
     /tmp/cc8ioz4J.s:133    .text:00000000000000e4 .LVL5
     /tmp/cc8ioz4J.s:185    .text:0000000000000128 .LVL9
     /tmp/cc8ioz4J.s:203    .text:0000000000000134 .LVL11
     /tmp/cc8ioz4J.s:264    .text:0000000000000198 .LVL15
     /tmp/cc8ioz4J.s:270    .text:000000000000019c .LVL16
     /tmp/cc8ioz4J.s:272    .text:00000000000001a0 .LVL17
     /tmp/cc8ioz4J.s:275    .text:00000000000001a4 .LVL18
     /tmp/cc8ioz4J.s:95     .text:00000000000000ac .LVL1
     /tmp/cc8ioz4J.s:100    .text:00000000000000b4 .LVL2
GAS LISTING /tmp/cc8ioz4J.s 			page 23


     /tmp/cc8ioz4J.s:173    .text:000000000000011c .LVL8
     /tmp/cc8ioz4J.s:246    .text:000000000000017c .LVL12
     /tmp/cc8ioz4J.s:248    .text:0000000000000180 .LVL13
     /tmp/cc8ioz4J.s:262    .text:0000000000000194 .LVL14
     /tmp/cc8ioz4J.s:143    .text:00000000000000f4 .LVL6
     /tmp/cc8ioz4J.s:149    .text:00000000000000fc .LVL7
     /tmp/cc8ioz4J.s:585    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc8ioz4J.s:106    .text:00000000000000bc .LBB3
     /tmp/cc8ioz4J.s:175    .text:000000000000011c .LBE3
     /tmp/cc8ioz4J.s:189    .text:0000000000000128 .LBB4
     /tmp/cc8ioz4J.s:191    .text:0000000000000128 .LBE4
     /tmp/cc8ioz4J.s:199    .text:0000000000000130 .LBB5
     /tmp/cc8ioz4J.s:266    .text:0000000000000198 .LBE5
     /tmp/cc8ioz4J.s:366    .text:0000000000000218 .LBB7
     /tmp/cc8ioz4J.s:374    .text:0000000000000228 .LBE7
     /tmp/cc8ioz4J.s:376    .text:0000000000000228 .LBB13
     /tmp/cc8ioz4J.s:389    .text:0000000000000238 .LBE13
     /tmp/cc8ioz4J.s:396    .text:0000000000000240 .LBB14
     /tmp/cc8ioz4J.s:481    .text:00000000000002bc .LBE14
     /tmp/cc8ioz4J.s:498    .text:00000000000002d0 .LBB15
     /tmp/cc8ioz4J.s:545    .text:0000000000000314 .LBE15
     /tmp/cc8ioz4J.s:398    .text:0000000000000240 .LBB9
     /tmp/cc8ioz4J.s:479    .text:00000000000002bc .LBE9
     /tmp/cc8ioz4J.s:500    .text:00000000000002d0 .LBB10
     /tmp/cc8ioz4J.s:543    .text:0000000000000314 .LBE10

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
