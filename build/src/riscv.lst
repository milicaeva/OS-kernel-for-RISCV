GAS LISTING /tmp/cccr84xi.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 4572726F 		.string	"Error"
   9      7200
  10              		.text
  11              		.align	2
  12              		.globl	_ZN5Riscv16interruptHandlerEv
  14              	_ZN5Riscv16interruptHandlerEv:
  15              	.LFB29:
  16              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../h/riscv.hpp"
   3:src/riscv.cpp **** #include "../h/tcb.hpp"
   4:src/riscv.cpp **** #include "../h/sem.hpp"
   5:src/riscv.cpp **** #include "../lib/console.h"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** extern void printStr(char const* string);
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** void Riscv::interruptHandler(){ //PREKIDNA RUTINA
  17              		.loc 1 9 31
  18              		.cfi_startproc
  19 0000 130101FA 		addi	sp,sp,-96
  20              		.cfi_def_cfa_offset 96
  21 0004 233C1104 		sd	ra,88(sp)
  22 0008 23388104 		sd	s0,80(sp)
  23 000c 23349104 		sd	s1,72(sp)
  24 0010 23302105 		sd	s2,64(sp)
  25              		.cfi_offset 1, -8
  26              		.cfi_offset 8, -16
  27              		.cfi_offset 9, -24
  28              		.cfi_offset 18, -32
  29 0014 13040106 		addi	s0,sp,96
  30              		.cfi_def_cfa 8, 0
  10:src/riscv.cpp **** 
  11:src/riscv.cpp ****     uint64 scause = readScause();
  31              		.loc 1 11 5
  32              	.LBB20:
  33              	.LBB21:
  34              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** #include "../lib/console.h"
   7:src/../h/riscv.hpp **** #include "../h/syscallC.hpp"
   8:src/../h/riscv.hpp **** #include "../h/memoryAllocator.hpp"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** constexpr uint64 SOFTWARE = 0x8000000000000001UL;
  11:src/../h/riscv.hpp **** constexpr uint64 EXTERNAL = 0x8000000000000009UL;
  12:src/../h/riscv.hpp **** constexpr uint64 U_ECALL  = 0x8UL;
GAS LISTING /tmp/cccr84xi.s 			page 2


  13:src/../h/riscv.hpp **** constexpr uint64 S_ECALL  = 0x9UL;
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp **** class Riscv{
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp **** public:
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     static void supervisorTrap();
  20:src/../h/riscv.hpp ****     static void interruptHandler();
  21:src/../h/riscv.hpp ****     static void push();
  22:src/../h/riscv.hpp ****     static void pop();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     static void popSppSpie();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     static uint64 readScause();
  27:src/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  28:src/../h/riscv.hpp ****     static uint64 readSepc();
  29:src/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  30:src/../h/riscv.hpp ****     static uint64 readStvec();
  31:src/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     enum bitmaskSip{
  34:src/../h/riscv.hpp ****         SSIP = (1 << 1),
  35:src/../h/riscv.hpp ****         SEIP = (1 << 9)
  36:src/../h/riscv.hpp ****     };
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     static void setSip(uint64 mask);
  39:src/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  40:src/../h/riscv.hpp ****     static uint64 readSip();
  41:src/../h/riscv.hpp ****     static void writeSip(uint64 sip);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     enum bitmaskSstatus{
  44:src/../h/riscv.hpp ****         SIE = (1 << 1),
  45:src/../h/riscv.hpp ****         SPIE = (1 << 5),
  46:src/../h/riscv.hpp ****         SPP = (1 << 8)
  47:src/../h/riscv.hpp ****     };
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  50:src/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  51:src/../h/riscv.hpp ****     static uint64 readSstatus();
  52:src/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  53:src/../h/riscv.hpp **** };
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp **** inline uint64 Riscv::readScause() {
  56:src/../h/riscv.hpp ****     uint64 volatile value;
  35              		.loc 2 56 5
  57:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
  36              		.loc 2 57 5
  37              		.loc 2 57 55 is_stmt 0
  38              	#APP
  39              	# 57 "src/../h/riscv.hpp" 1
  58              	    return value;
  40              		csrr a5, scause
  41              	# 0 "" 2
  42              	#NO_APP
  43 001c 2334F4FC 		sd	a5,-56(s0)
  44              		.loc 2 58 5 is_stmt 1
  45              		.loc 2 58 12 is_stmt 0
GAS LISTING /tmp/cccr84xi.s 			page 3


  46 0020 033784FC 		ld	a4,-56(s0)
  47              	.LVL0:
  48              	.LBE21:
  49              	.LBE20:
  12:src/riscv.cpp **** 
  13:src/riscv.cpp ****     if(scause==SOFTWARE) { //timer
  50              		.loc 1 13 5 is_stmt 1
  51              	.LBB22:
  52 0024 9307F0FF 		li	a5,-1
  53 0028 9397F703 		slli	a5,a5,63
  54 002c 93871700 		addi	a5,a5,1
  55 0030 6306F706 		beq	a4,a5,.L21
  56              	.LBE22:
  14:src/riscv.cpp ****         clearSip(bitmaskSip::SSIP);
  15:src/riscv.cpp ****     }
  16:src/riscv.cpp ****     else if(scause==EXTERNAL){
  57              		.loc 1 16 10
  58              	.LBB40:
  59              	.LBB23:
  60 0034 9307F0FF 		li	a5,-1
  61 0038 9397F703 		slli	a5,a5,63
  62 003c 93879700 		addi	a5,a5,9
  63 0040 630EF706 		beq	a4,a5,.L22
  64              	.LBE23:
  65              	.LBE40:
  17:src/riscv.cpp ****         console_handler();
  18:src/riscv.cpp ****     }
  19:src/riscv.cpp ****     else if(scause==U_ECALL || scause==S_ECALL){
  66              		.loc 1 19 10
  67              	.LBB41:
  68              	.LBB36:
  69              	.LBB24:
  70              		.loc 1 19 29 is_stmt 0
  71 0044 130787FF 		addi	a4,a4,-8
  72              	.LVL1:
  73              		.loc 1 19 10
  74 0048 93071000 		li	a5,1
  75 004c 63ECE71A 		bgtu	a4,a5,.L5
  76              	.LBB25:
  20:src/riscv.cpp ****         uint64 volatile oc, arg1, arg2, arg3, arg4;
  77              		.loc 1 20 9 is_stmt 1
  21:src/riscv.cpp **** 
  22:src/riscv.cpp ****         uint64 sepc=readSepc()+4;
  78              		.loc 1 22 9
  79              	.LBB26:
  80              	.LBB27:
  59:src/../h/riscv.hpp **** }
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp **** inline void Riscv::writeScause(uint64 value) {
  62:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %0" : : "r"(value));
  63:src/../h/riscv.hpp **** }
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp **** inline uint64 Riscv::readSepc() {
  66:src/../h/riscv.hpp ****     uint64 volatile value;
  81              		.loc 2 66 5
  67:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
  82              		.loc 2 67 5
GAS LISTING /tmp/cccr84xi.s 			page 4


  83              		.loc 2 67 53 is_stmt 0
  84              	#APP
  85              	# 67 "src/../h/riscv.hpp" 1
  68              	    return value;
  86              		csrr a5, sepc
  87              	# 0 "" 2
  88              	#NO_APP
  89 0054 233CF4FC 		sd	a5,-40(s0)
  90              		.loc 2 68 5 is_stmt 1
  91              		.loc 2 68 12 is_stmt 0
  92 0058 833484FD 		ld	s1,-40(s0)
  93              	.LBE27:
  94              	.LBE26:
  95              		.loc 1 22 32
  96 005c 93844400 		addi	s1,s1,4
  97              	.LVL2:
  23:src/riscv.cpp ****         uint64 sstatus=readSstatus();
  98              		.loc 1 23 9 is_stmt 1
  99              	.LBB28:
 100              	.LBB29:
  69:src/../h/riscv.hpp **** }
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp **** inline void Riscv::writeSepc(uint64 value) {
  72:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %0" : : "r"(value));
  73:src/../h/riscv.hpp **** }
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp **** inline uint64 Riscv::readStvec() {
  76:src/../h/riscv.hpp ****     uint64 volatile value;
  77:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stvec" : "=r"(value));
  78:src/../h/riscv.hpp ****     return value;
  79:src/../h/riscv.hpp **** }
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp **** inline void Riscv::writeStvec(uint64 value) {
  82:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %0" : : "r"(value));
  83:src/../h/riscv.hpp **** }
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp **** inline void Riscv::setSip(uint64 mask) {
  86:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
  87:src/../h/riscv.hpp **** }
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline void Riscv::clearSip(uint64 mask) {
  90:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
  91:src/../h/riscv.hpp **** }
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline uint64 Riscv::readSip() {
  94:src/../h/riscv.hpp ****     uint64 volatile value;
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sip" : "=r"(value));
  96:src/../h/riscv.hpp ****     return value;
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline void Riscv::writeSip(uint64 value) {
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %0" : : "r"(value));
 101:src/../h/riscv.hpp **** }
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline void Riscv::setSstatus(uint64 mask) {
 104:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 105:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cccr84xi.s 			page 5


 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** inline void Riscv::clearSstatus(uint64 mask) {
 108:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
 109:src/../h/riscv.hpp **** };
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline uint64 Riscv::readSstatus() {
 112:src/../h/riscv.hpp ****     uint64 volatile value;
 101              		.loc 2 112 5
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 102              		.loc 2 113 5
 103              		.loc 2 113 56 is_stmt 0
 104              	#APP
 105              	# 113 "src/../h/riscv.hpp" 1
 114              	    return value;
 106              		csrr a5, sstatus
 107              	# 0 "" 2
 108              	#NO_APP
 109 0064 2338F4FC 		sd	a5,-48(s0)
 110              		.loc 2 114 5 is_stmt 1
 111              		.loc 2 114 12 is_stmt 0
 112 0068 033904FD 		ld	s2,-48(s0)
 113              	.LVL3:
 114              	.LBE29:
 115              	.LBE28:
  24:src/riscv.cpp **** 
  25:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(oc)); // operation code
 116              		.loc 1 25 9 is_stmt 1
 117              		.loc 1 25 49 is_stmt 0
 118              	#APP
 119              	# 25 "src/riscv.cpp" 1
  26              	
 120              		mv a5, a0
 121              	# 0 "" 2
 122              	#NO_APP
 123 0070 2330F4FA 		sd	a5,-96(s0)
  27:src/riscv.cpp ****         switch(oc){
 124              		.loc 1 27 9 is_stmt 1
 125              		.loc 1 27 16 is_stmt 0
 126 0074 833704FA 		ld	a5,-96(s0)
 127 0078 13072004 		li	a4,66
 128              	.LVL4:
 129 007c 6360F706 		bgtu	a5,a4,.L6
 130 0080 93972700 		slli	a5,a5,2
 131 0084 17070000 		lla	a4,.L8
 131      13070700 
 132 008c B387E700 		add	a5,a5,a4
 133 0090 83A70700 		lw	a5,0(a5)
 134 0094 B387E700 		add	a5,a5,a4
 135 0098 67800700 		jr	a5
 136              		.section	.rodata
 137              		.align	2
 138              		.align	2
 139              	.L8:
 140 0000 00000000 		.word	.L6-.L8
 141 0004 00000000 		.word	.L19-.L8
 142 0008 00000000 		.word	.L18-.L8
 143 000c 00000000 		.word	.L6-.L8
GAS LISTING /tmp/cccr84xi.s 			page 6


 144 0010 00000000 		.word	.L6-.L8
 145 0014 00000000 		.word	.L6-.L8
 146 0018 00000000 		.word	.L6-.L8
 147 001c 00000000 		.word	.L6-.L8
 148 0020 00000000 		.word	.L6-.L8
 149 0024 00000000 		.word	.L6-.L8
 150 0028 00000000 		.word	.L6-.L8
 151 002c 00000000 		.word	.L6-.L8
 152 0030 00000000 		.word	.L6-.L8
 153 0034 00000000 		.word	.L6-.L8
 154 0038 00000000 		.word	.L6-.L8
 155 003c 00000000 		.word	.L6-.L8
 156 0040 00000000 		.word	.L6-.L8
 157 0044 00000000 		.word	.L17-.L8
 158 0048 00000000 		.word	.L16-.L8
 159 004c 00000000 		.word	.L15-.L8
 160 0050 00000000 		.word	.L6-.L8
 161 0054 00000000 		.word	.L6-.L8
 162 0058 00000000 		.word	.L6-.L8
 163 005c 00000000 		.word	.L6-.L8
 164 0060 00000000 		.word	.L6-.L8
 165 0064 00000000 		.word	.L6-.L8
 166 0068 00000000 		.word	.L6-.L8
 167 006c 00000000 		.word	.L6-.L8
 168 0070 00000000 		.word	.L6-.L8
 169 0074 00000000 		.word	.L6-.L8
 170 0078 00000000 		.word	.L6-.L8
 171 007c 00000000 		.word	.L6-.L8
 172 0080 00000000 		.word	.L6-.L8
 173 0084 00000000 		.word	.L14-.L8
 174 0088 00000000 		.word	.L13-.L8
 175 008c 00000000 		.word	.L12-.L8
 176 0090 00000000 		.word	.L11-.L8
 177 0094 00000000 		.word	.L6-.L8
 178 0098 00000000 		.word	.L10-.L8
 179 009c 00000000 		.word	.L6-.L8
 180 00a0 00000000 		.word	.L6-.L8
 181 00a4 00000000 		.word	.L6-.L8
 182 00a8 00000000 		.word	.L6-.L8
 183 00ac 00000000 		.word	.L6-.L8
 184 00b0 00000000 		.word	.L6-.L8
 185 00b4 00000000 		.word	.L6-.L8
 186 00b8 00000000 		.word	.L6-.L8
 187 00bc 00000000 		.word	.L6-.L8
 188 00c0 00000000 		.word	.L6-.L8
 189 00c4 00000000 		.word	.L6-.L8
 190 00c8 00000000 		.word	.L6-.L8
 191 00cc 00000000 		.word	.L6-.L8
 192 00d0 00000000 		.word	.L6-.L8
 193 00d4 00000000 		.word	.L6-.L8
 194 00d8 00000000 		.word	.L6-.L8
 195 00dc 00000000 		.word	.L6-.L8
 196 00e0 00000000 		.word	.L6-.L8
 197 00e4 00000000 		.word	.L6-.L8
 198 00e8 00000000 		.word	.L6-.L8
 199 00ec 00000000 		.word	.L6-.L8
 200 00f0 00000000 		.word	.L6-.L8
GAS LISTING /tmp/cccr84xi.s 			page 7


 201 00f4 00000000 		.word	.L6-.L8
 202 00f8 00000000 		.word	.L6-.L8
 203 00fc 00000000 		.word	.L6-.L8
 204 0100 00000000 		.word	.L6-.L8
 205 0104 00000000 		.word	.L9-.L8
 206 0108 00000000 		.word	.L7-.L8
 207              		.text
 208              	.LVL5:
 209              	.L21:
 210              	.LBE25:
 211              	.LBE24:
 212              	.LBE36:
  14:src/riscv.cpp ****     }
 213              		.loc 1 14 9 is_stmt 1
 214              	.LBB37:
 215              	.LBB38:
  90:src/../h/riscv.hpp **** }
 216              		.loc 2 90 5
  90:src/../h/riscv.hpp **** }
 217              		.loc 2 90 51 is_stmt 0
 218 009c 93072000 		li	a5,2
 219              	#APP
 220              	# 90 "src/../h/riscv.hpp" 1
 221              		csrc sip, a5
 222              	# 0 "" 2
 223              	.LVL6:
 224              	#NO_APP
 225              	.L1:
 226              	.LBE38:
 227              	.LBE37:
 228              	.LBE41:
  28:src/riscv.cpp ****             case MEM_ALLOC:
  29:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  30:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)arg1);
  31:src/riscv.cpp ****                 break;
  32:src/riscv.cpp ****             case MEM_FREE:
  33:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  34:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)arg1);
  35:src/riscv.cpp ****                 break;
  36:src/riscv.cpp ****             case THREAD_CREATE:
  37:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  38:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(arg2));
  39:src/riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(arg3));
  40:src/riscv.cpp ****                 __asm__ volatile("mv %0, a4" : "=r"(arg4));
  41:src/riscv.cpp ****                 TCB::threadCreate((thread_t *)arg1, (body)arg2, (void *)arg3, (void *)arg4);
  42:src/riscv.cpp ****                 break;
  43:src/riscv.cpp ****             case THREAD_EXIT:
  44:src/riscv.cpp ****                 TCB::threadExit();
  45:src/riscv.cpp ****                 break;
  46:src/riscv.cpp ****             case THREAD_DISPATCH:
  47:src/riscv.cpp ****                 TCB::dispatch();
  48:src/riscv.cpp ****                 break;
  49:src/riscv.cpp ****             case SEM_OPEN:
  50:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  51:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(arg2));
  52:src/riscv.cpp ****                 Sem::sem_open((sem_t*)arg1, (unsigned int)arg2);
  53:src/riscv.cpp ****                 break;
GAS LISTING /tmp/cccr84xi.s 			page 8


  54:src/riscv.cpp ****             case SEM_CLOSE:
  55:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  56:src/riscv.cpp ****                 Sem::sem_close((sem_t)arg1);
  57:src/riscv.cpp ****                 break;
  58:src/riscv.cpp ****             case SEM_WAIT:
  59:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  60:src/riscv.cpp ****                 Sem::sem_wait(((sem_t)arg1));
  61:src/riscv.cpp ****                 break;
  62:src/riscv.cpp ****             case SEM_SIGNAL:
  63:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  64:src/riscv.cpp ****                 Sem::sem_signal((sem_t)arg1);
  65:src/riscv.cpp ****                 break;
  66:src/riscv.cpp ****             case SEM_TRYWAIT:
  67:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  68:src/riscv.cpp ****                 Sem::sem_trywait((sem_t)arg1);
  69:src/riscv.cpp ****                 break;
  70:src/riscv.cpp ****             case GETC:
  71:src/riscv.cpp ****                 __getc();
  72:src/riscv.cpp ****                 break;
  73:src/riscv.cpp ****             case PUTC:
  74:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
  75:src/riscv.cpp ****                 __putc(arg1);
  76:src/riscv.cpp ****                 break;
  77:src/riscv.cpp ****         }
  78:src/riscv.cpp ****         writeSepc(sepc);
  79:src/riscv.cpp ****         writeSstatus(sstatus);
  80:src/riscv.cpp ****     }
  81:src/riscv.cpp ****     else{
  82:src/riscv.cpp ****         printStr("Error");
  83:src/riscv.cpp ****     }
  84:src/riscv.cpp **** }
 229              		.loc 1 84 1
 230 00a4 83308105 		ld	ra,88(sp)
 231              		.cfi_remember_state
 232              		.cfi_restore 1
 233 00a8 03340105 		ld	s0,80(sp)
 234              		.cfi_restore 8
 235              		.cfi_def_cfa 2, 96
 236 00ac 83348104 		ld	s1,72(sp)
 237              		.cfi_restore 9
 238 00b0 03390104 		ld	s2,64(sp)
 239              		.cfi_restore 18
 240 00b4 13010106 		addi	sp,sp,96
 241              		.cfi_def_cfa_offset 0
 242 00b8 67800000 		jr	ra
 243              	.LVL7:
 244              	.L22:
 245              		.cfi_restore_state
 246              	.LBB42:
 247              	.LBB39:
  17:src/riscv.cpp ****     }
 248              		.loc 1 17 9 is_stmt 1
  17:src/riscv.cpp ****     }
 249              		.loc 1 17 24 is_stmt 0
 250 00bc 97000000 		call	console_handler@plt
 250      E7800000 
 251              	.LVL8:
GAS LISTING /tmp/cccr84xi.s 			page 9


 252 00c4 6FF01FFE 		j	.L1
 253              	.LVL9:
 254              	.L19:
 255              	.LBB35:
 256              	.LBB34:
  28:src/riscv.cpp ****             case MEM_ALLOC:
 257              		.loc 1 28 13 is_stmt 1
  29:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)arg1);
 258              		.loc 1 29 17
  29:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)arg1);
 259              		.loc 1 29 59 is_stmt 0
 260              	#APP
 261              	# 29 "src/riscv.cpp" 1
 262              		mv a5, a1
 263              	# 0 "" 2
 264              	#NO_APP
 265 00cc 2334F4FA 		sd	a5,-88(s0)
  30:src/riscv.cpp ****                 break;
 266              		.loc 1 30 17 is_stmt 1
  30:src/riscv.cpp ****                 break;
 267              		.loc 1 30 43 is_stmt 0
 268 00d0 033584FA 		ld	a0,-88(s0)
 269 00d4 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 269      E7800000 
 270              	.LVL10:
  31:src/riscv.cpp ****             case MEM_FREE:
 271              		.loc 1 31 17 is_stmt 1
 272              	.L6:
  78:src/riscv.cpp ****         writeSstatus(sstatus);
 273              		.loc 1 78 9
 274              	.LBB30:
 275              	.LBB31:
  72:src/../h/riscv.hpp **** }
 276              		.loc 2 72 5
  72:src/../h/riscv.hpp **** }
 277              		.loc 2 72 54 is_stmt 0
 278              	#APP
 279              	# 72 "src/../h/riscv.hpp" 1
 280              		csrw sepc, s1
 281              	# 0 "" 2
 282              	.LVL11:
 283              	#NO_APP
 284              	.LBE31:
 285              	.LBE30:
  79:src/riscv.cpp ****     }
 286              		.loc 1 79 9 is_stmt 1
 287              	.LBB32:
 288              	.LBB33:
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::writeSstatus(uint64 value) {
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %0" : : "r"(value));
 289              		.loc 2 118 5
 290              		.loc 2 118 57 is_stmt 0
 291              	#APP
 292              	# 118 "src/../h/riscv.hpp" 1
 119              	}
GAS LISTING /tmp/cccr84xi.s 			page 10


 293              		csrw sstatus, s2
 294              	# 0 "" 2
 295              		.loc 2 119 1
 296              	#NO_APP
 297 00e4 6FF01FFC 		j	.L1
 298              	.LVL12:
 299              	.L18:
 300              	.LBE33:
 301              	.LBE32:
  32:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 302              		.loc 1 32 13 is_stmt 1
  33:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)arg1);
 303              		.loc 1 33 17
  33:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)arg1);
 304              		.loc 1 33 59 is_stmt 0
 305              	#APP
 306              	# 33 "src/riscv.cpp" 1
 307              		mv a5, a1
 308              	# 0 "" 2
 309              	#NO_APP
 310 00ec 2334F4FA 		sd	a5,-88(s0)
  34:src/riscv.cpp ****                 break;
 311              		.loc 1 34 17 is_stmt 1
  34:src/riscv.cpp ****                 break;
 312              		.loc 1 34 42 is_stmt 0
 313 00f0 033584FA 		ld	a0,-88(s0)
 314 00f4 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 314      E7800000 
 315              	.LVL13:
  35:src/riscv.cpp ****             case THREAD_CREATE:
 316              		.loc 1 35 17 is_stmt 1
 317 00fc 6FF01FFE 		j	.L6
 318              	.L17:
  36:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 319              		.loc 1 36 13
  37:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(arg2));
 320              		.loc 1 37 17
  37:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(arg2));
 321              		.loc 1 37 59 is_stmt 0
 322              	#APP
 323              	# 37 "src/riscv.cpp" 1
 324              		mv a5, a1
 325              	# 0 "" 2
 326              	#NO_APP
 327 0104 2334F4FA 		sd	a5,-88(s0)
  38:src/riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(arg3));
 328              		.loc 1 38 17 is_stmt 1
  38:src/riscv.cpp ****                 __asm__ volatile("mv %0, a3" : "=r"(arg3));
 329              		.loc 1 38 59 is_stmt 0
 330              	#APP
 331              	# 38 "src/riscv.cpp" 1
 332              		mv a5, a2
 333              	# 0 "" 2
 334              	#NO_APP
 335 010c 2338F4FA 		sd	a5,-80(s0)
  39:src/riscv.cpp ****                 __asm__ volatile("mv %0, a4" : "=r"(arg4));
 336              		.loc 1 39 17 is_stmt 1
GAS LISTING /tmp/cccr84xi.s 			page 11


  39:src/riscv.cpp ****                 __asm__ volatile("mv %0, a4" : "=r"(arg4));
 337              		.loc 1 39 59 is_stmt 0
 338              	#APP
 339              	# 39 "src/riscv.cpp" 1
 340              		mv a5, a3
 341              	# 0 "" 2
 342              	#NO_APP
 343 0114 233CF4FA 		sd	a5,-72(s0)
  40:src/riscv.cpp ****                 TCB::threadCreate((thread_t *)arg1, (body)arg2, (void *)arg3, (void *)arg4);
 344              		.loc 1 40 17 is_stmt 1
  40:src/riscv.cpp ****                 TCB::threadCreate((thread_t *)arg1, (body)arg2, (void *)arg3, (void *)arg4);
 345              		.loc 1 40 59 is_stmt 0
 346              	#APP
 347              	# 40 "src/riscv.cpp" 1
 348              		mv a5, a4
 349              	# 0 "" 2
 350              	#NO_APP
 351 011c 2330F4FC 		sd	a5,-64(s0)
  41:src/riscv.cpp ****                 break;
 352              		.loc 1 41 17 is_stmt 1
  41:src/riscv.cpp ****                 break;
 353              		.loc 1 41 34 is_stmt 0
 354 0120 033584FA 		ld	a0,-88(s0)
 355 0124 833504FB 		ld	a1,-80(s0)
 356 0128 033684FB 		ld	a2,-72(s0)
 357 012c 833604FC 		ld	a3,-64(s0)
 358 0130 97000000 		call	_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_@plt
 358      E7800000 
 359              	.LVL14:
  42:src/riscv.cpp ****             case THREAD_EXIT:
 360              		.loc 1 42 17 is_stmt 1
 361 0138 6FF05FFA 		j	.L6
 362              	.L16:
  43:src/riscv.cpp ****                 TCB::threadExit();
 363              		.loc 1 43 13
  44:src/riscv.cpp ****                 break;
 364              		.loc 1 44 17
  44:src/riscv.cpp ****                 break;
 365              		.loc 1 44 32 is_stmt 0
 366 013c 97000000 		call	_ZN3TCB10threadExitEv@plt
 366      E7800000 
 367              	.LVL15:
  45:src/riscv.cpp ****             case THREAD_DISPATCH:
 368              		.loc 1 45 17 is_stmt 1
 369 0144 6FF09FF9 		j	.L6
 370              	.L15:
  46:src/riscv.cpp ****                 TCB::dispatch();
 371              		.loc 1 46 13
  47:src/riscv.cpp ****                 break;
 372              		.loc 1 47 17
  47:src/riscv.cpp ****                 break;
 373              		.loc 1 47 30 is_stmt 0
 374 0148 97000000 		call	_ZN3TCB8dispatchEv@plt
 374      E7800000 
 375              	.LVL16:
  48:src/riscv.cpp ****             case SEM_OPEN:
 376              		.loc 1 48 17 is_stmt 1
GAS LISTING /tmp/cccr84xi.s 			page 12


 377 0150 6FF0DFF8 		j	.L6
 378              	.L14:
  49:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 379              		.loc 1 49 13
  50:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(arg2));
 380              		.loc 1 50 17
  50:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r"(arg2));
 381              		.loc 1 50 59 is_stmt 0
 382              	#APP
 383              	# 50 "src/riscv.cpp" 1
 384              		mv a5, a1
 385              	# 0 "" 2
 386              	#NO_APP
 387 0158 2334F4FA 		sd	a5,-88(s0)
  51:src/riscv.cpp ****                 Sem::sem_open((sem_t*)arg1, (unsigned int)arg2);
 388              		.loc 1 51 17 is_stmt 1
  51:src/riscv.cpp ****                 Sem::sem_open((sem_t*)arg1, (unsigned int)arg2);
 389              		.loc 1 51 59 is_stmt 0
 390              	#APP
 391              	# 51 "src/riscv.cpp" 1
 392              		mv a5, a2
 393              	# 0 "" 2
 394              	#NO_APP
 395 0160 2338F4FA 		sd	a5,-80(s0)
  52:src/riscv.cpp ****                 break;
 396              		.loc 1 52 17 is_stmt 1
  52:src/riscv.cpp ****                 break;
 397              		.loc 1 52 30 is_stmt 0
 398 0164 033584FA 		ld	a0,-88(s0)
 399 0168 833504FB 		ld	a1,-80(s0)
 400 016c 9B850500 		sext.w	a1,a1
 401 0170 97000000 		call	_ZN3Sem8sem_openEPPS_j@plt
 401      E7800000 
 402              	.LVL17:
  53:src/riscv.cpp ****             case SEM_CLOSE:
 403              		.loc 1 53 17 is_stmt 1
 404 0178 6FF05FF6 		j	.L6
 405              	.L13:
  54:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 406              		.loc 1 54 13
  55:src/riscv.cpp ****                 Sem::sem_close((sem_t)arg1);
 407              		.loc 1 55 17
  55:src/riscv.cpp ****                 Sem::sem_close((sem_t)arg1);
 408              		.loc 1 55 59 is_stmt 0
 409              	#APP
 410              	# 55 "src/riscv.cpp" 1
 411              		mv a5, a1
 412              	# 0 "" 2
 413              	#NO_APP
 414 0180 2334F4FA 		sd	a5,-88(s0)
  56:src/riscv.cpp ****                 break;
 415              		.loc 1 56 17 is_stmt 1
  56:src/riscv.cpp ****                 break;
 416              		.loc 1 56 31 is_stmt 0
 417 0184 033584FA 		ld	a0,-88(s0)
 418 0188 97000000 		call	_ZN3Sem9sem_closeEPS_@plt
 418      E7800000 
GAS LISTING /tmp/cccr84xi.s 			page 13


 419              	.LVL18:
  57:src/riscv.cpp ****             case SEM_WAIT:
 420              		.loc 1 57 17 is_stmt 1
 421 0190 6FF0DFF4 		j	.L6
 422              	.L12:
  58:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 423              		.loc 1 58 13
  59:src/riscv.cpp ****                 Sem::sem_wait(((sem_t)arg1));
 424              		.loc 1 59 17
  59:src/riscv.cpp ****                 Sem::sem_wait(((sem_t)arg1));
 425              		.loc 1 59 59 is_stmt 0
 426              	#APP
 427              	# 59 "src/riscv.cpp" 1
 428              		mv a5, a1
 429              	# 0 "" 2
 430              	#NO_APP
 431 0198 2334F4FA 		sd	a5,-88(s0)
  60:src/riscv.cpp ****                 break;
 432              		.loc 1 60 17 is_stmt 1
  60:src/riscv.cpp ****                 break;
 433              		.loc 1 60 30 is_stmt 0
 434 019c 033584FA 		ld	a0,-88(s0)
 435 01a0 97000000 		call	_ZN3Sem8sem_waitEPS_@plt
 435      E7800000 
 436              	.LVL19:
  61:src/riscv.cpp ****             case SEM_SIGNAL:
 437              		.loc 1 61 17 is_stmt 1
 438 01a8 6FF05FF3 		j	.L6
 439              	.L11:
  62:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 440              		.loc 1 62 13
  63:src/riscv.cpp ****                 Sem::sem_signal((sem_t)arg1);
 441              		.loc 1 63 17
  63:src/riscv.cpp ****                 Sem::sem_signal((sem_t)arg1);
 442              		.loc 1 63 59 is_stmt 0
 443              	#APP
 444              	# 63 "src/riscv.cpp" 1
 445              		mv a5, a1
 446              	# 0 "" 2
 447              	#NO_APP
 448 01b0 2334F4FA 		sd	a5,-88(s0)
  64:src/riscv.cpp ****                 break;
 449              		.loc 1 64 17 is_stmt 1
  64:src/riscv.cpp ****                 break;
 450              		.loc 1 64 32 is_stmt 0
 451 01b4 033584FA 		ld	a0,-88(s0)
 452 01b8 97000000 		call	_ZN3Sem10sem_signalEPS_@plt
 452      E7800000 
 453              	.LVL20:
  65:src/riscv.cpp ****             case SEM_TRYWAIT:
 454              		.loc 1 65 17 is_stmt 1
 455 01c0 6FF0DFF1 		j	.L6
 456              	.L10:
  66:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 457              		.loc 1 66 13
  67:src/riscv.cpp ****                 Sem::sem_trywait((sem_t)arg1);
 458              		.loc 1 67 17
GAS LISTING /tmp/cccr84xi.s 			page 14


  67:src/riscv.cpp ****                 Sem::sem_trywait((sem_t)arg1);
 459              		.loc 1 67 59 is_stmt 0
 460              	#APP
 461              	# 67 "src/riscv.cpp" 1
 462              		mv a5, a1
 463              	# 0 "" 2
 464              	#NO_APP
 465 01c8 2334F4FA 		sd	a5,-88(s0)
  68:src/riscv.cpp ****                 break;
 466              		.loc 1 68 17 is_stmt 1
  68:src/riscv.cpp ****                 break;
 467              		.loc 1 68 33 is_stmt 0
 468 01cc 033584FA 		ld	a0,-88(s0)
 469 01d0 97000000 		call	_ZN3Sem11sem_trywaitEPS_@plt
 469      E7800000 
 470              	.LVL21:
  69:src/riscv.cpp ****             case GETC:
 471              		.loc 1 69 17 is_stmt 1
 472 01d8 6FF05FF0 		j	.L6
 473              	.L9:
  70:src/riscv.cpp ****                 __getc();
 474              		.loc 1 70 13
  71:src/riscv.cpp ****                 break;
 475              		.loc 1 71 17
  71:src/riscv.cpp ****                 break;
 476              		.loc 1 71 23 is_stmt 0
 477 01dc 97000000 		call	__getc@plt
 477      E7800000 
 478              	.LVL22:
  72:src/riscv.cpp ****             case PUTC:
 479              		.loc 1 72 17 is_stmt 1
 480 01e4 6FF09FEF 		j	.L6
 481              	.L7:
  73:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r"(arg1));
 482              		.loc 1 73 13
  74:src/riscv.cpp ****                 __putc(arg1);
 483              		.loc 1 74 17
  74:src/riscv.cpp ****                 __putc(arg1);
 484              		.loc 1 74 59 is_stmt 0
 485              	#APP
 486              	# 74 "src/riscv.cpp" 1
 487              		mv a5, a1
 488              	# 0 "" 2
 489              	#NO_APP
 490 01ec 2334F4FA 		sd	a5,-88(s0)
  75:src/riscv.cpp ****                 break;
 491              		.loc 1 75 17 is_stmt 1
  75:src/riscv.cpp ****                 break;
 492              		.loc 1 75 23 is_stmt 0
 493 01f0 033584FA 		ld	a0,-88(s0)
 494 01f4 1375F50F 		andi	a0,a0,0xff
 495 01f8 97000000 		call	__putc@plt
 495      E7800000 
 496              	.LVL23:
  76:src/riscv.cpp ****         }
 497              		.loc 1 76 17 is_stmt 1
 498 0200 6FF0DFED 		j	.L6
GAS LISTING /tmp/cccr84xi.s 			page 15


 499              	.LVL24:
 500              	.L5:
 501              	.LBE34:
  82:src/riscv.cpp ****     }
 502              		.loc 1 82 9
  82:src/riscv.cpp ****     }
 503              		.loc 1 82 17 is_stmt 0
 504 0204 17050000 		lla	a0,.LC0
 504      13050500 
 505 020c 97000000 		call	_Z8printStrPKc@plt
 505      E7800000 
 506              	.LVL25:
 507              	.LBE35:
 508              	.LBE39:
 509              	.LBE42:
 510              		.loc 1 84 1
 511 0214 6FF01FE9 		j	.L1
 512              		.cfi_endproc
 513              	.LFE29:
 515              		.align	2
 516              		.globl	_ZN5Riscv10popSppSpieEv
 518              	_ZN5Riscv10popSppSpieEv:
 519              	.LFB30:
  85:src/riscv.cpp **** 
  86:src/riscv.cpp **** void Riscv::popSppSpie(){
 520              		.loc 1 86 25 is_stmt 1
 521              		.cfi_startproc
 522 0218 130101FF 		addi	sp,sp,-16
 523              		.cfi_def_cfa_offset 16
 524 021c 23348100 		sd	s0,8(sp)
 525              		.cfi_offset 8, -8
 526 0220 13040101 		addi	s0,sp,16
 527              		.cfi_def_cfa 8, 0
  87:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 528              		.loc 1 87 5
 529              		.loc 1 87 39 is_stmt 0
 530              	#APP
 531              	# 87 "src/riscv.cpp" 1
  88              	    Riscv::clearSstatus(bitmaskSstatus::SPP);
 532              		csrw sepc, ra
 533              	# 0 "" 2
 534              		.loc 1 88 5 is_stmt 1
 535              	.LVL26:
 536              	#NO_APP
 537              	.LBB43:
 538              	.LBB44:
 108:src/../h/riscv.hpp **** };
 539              		.loc 2 108 5
 108:src/../h/riscv.hpp **** };
 540              		.loc 2 108 55 is_stmt 0
 541 0228 93070010 		li	a5,256
 542              	#APP
 543              	# 108 "src/../h/riscv.hpp" 1
 544              		csrc sstatus, a5
 545              	# 0 "" 2
 546              	.LVL27:
 547              	#NO_APP
GAS LISTING /tmp/cccr84xi.s 			page 16


 548              	.LBE44:
 549              	.LBE43:
  89:src/riscv.cpp ****     __asm__ volatile ("sret");
 550              		.loc 1 89 5 is_stmt 1
 551              		.loc 1 89 30 is_stmt 0
 552              	#APP
 553              	# 89 "src/riscv.cpp" 1
  90              	}...
 554              		sret
 555              	# 0 "" 2
 556              		.loc 1 90 1
 557              	#NO_APP
 558 0234 03348100 		ld	s0,8(sp)
 559              		.cfi_restore 8
 560              		.cfi_def_cfa 2, 16
 561 0238 13010101 		addi	sp,sp,16
 562              		.cfi_def_cfa_offset 0
 563 023c 67800000 		jr	ra
 564              		.cfi_endproc
 565              	.LFE30:
 567              	.Letext0:
 568              		.file 3 "src/../lib/hw.h"
 569              		.file 4 "src/../h/../h/syscallC.hpp"
 570              		.file 5 "src/../h/tcb.hpp"
 571              		.file 6 "src/../h/sem.hpp"
 572              		.file 7 "src/../h/../h/memoryAllocator.hpp"
 573              		.file 8 "src/../h/list.hpp"
 574              		.file 9 "src/../h/../lib/console.h"
GAS LISTING /tmp/cccr84xi.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cccr84xi.s:14     .text:0000000000000000 _ZN5Riscv16interruptHandlerEv
     /tmp/cccr84xi.s:18     .text:0000000000000000 .L0 
     /tmp/cccr84xi.s:19     .text:0000000000000000 .L0 
     /tmp/cccr84xi.s:20     .text:0000000000000004 .L0 
     /tmp/cccr84xi.s:25     .text:0000000000000014 .L0 
     /tmp/cccr84xi.s:26     .text:0000000000000014 .L0 
     /tmp/cccr84xi.s:27     .text:0000000000000014 .L0 
     /tmp/cccr84xi.s:28     .text:0000000000000014 .L0 
     /tmp/cccr84xi.s:30     .text:0000000000000018 .L0 
     /tmp/cccr84xi.s:35     .text:0000000000000018 .L0 
     /tmp/cccr84xi.s:36     .text:0000000000000018 .L0 
     /tmp/cccr84xi.s:37     .text:0000000000000018 .L0 
  src/../h/riscv.hpp:57     .text:0000000000000018 .L0 
     /tmp/cccr84xi.s:45     .text:0000000000000020 .L0 
     /tmp/cccr84xi.s:46     .text:0000000000000020 .L0 
     /tmp/cccr84xi.s:52     .text:0000000000000024 .L0 
     /tmp/cccr84xi.s:60     .text:0000000000000034 .L0 
     /tmp/cccr84xi.s:70     .text:0000000000000044 .L0 
     /tmp/cccr84xi.s:71     .text:0000000000000044 .L0 
     /tmp/cccr84xi.s:74     .text:0000000000000048 .L0 
     /tmp/cccr84xi.s:78     .text:0000000000000050 .L0 
     /tmp/cccr84xi.s:81     .text:0000000000000050 .L0 
     /tmp/cccr84xi.s:82     .text:0000000000000050 .L0 
     /tmp/cccr84xi.s:83     .text:0000000000000050 .L0 
  src/../h/riscv.hpp:67     .text:0000000000000050 .L0 
     /tmp/cccr84xi.s:91     .text:0000000000000058 .L0 
     /tmp/cccr84xi.s:92     .text:0000000000000058 .L0 
     /tmp/cccr84xi.s:96     .text:000000000000005c .L0 
     /tmp/cccr84xi.s:101    .text:0000000000000060 .L0 
     /tmp/cccr84xi.s:102    .text:0000000000000060 .L0 
     /tmp/cccr84xi.s:103    .text:0000000000000060 .L0 
  src/../h/riscv.hpp:113    .text:0000000000000060 .L0 
     /tmp/cccr84xi.s:111    .text:0000000000000068 .L0 
     /tmp/cccr84xi.s:112    .text:0000000000000068 .L0 
     /tmp/cccr84xi.s:117    .text:000000000000006c .L0 
       src/riscv.cpp:25     .text:000000000000006c .L0 
     /tmp/cccr84xi.s:125    .text:0000000000000074 .L0 
     /tmp/cccr84xi.s:126    .text:0000000000000074 .L0 
     /tmp/cccr84xi.s:216    .text:000000000000009c .L0 
     /tmp/cccr84xi.s:217    .text:000000000000009c .L0 
     /tmp/cccr84xi.s:218    .text:000000000000009c .L0 
     /tmp/cccr84xi.s:230    .text:00000000000000a4 .L0 
     /tmp/cccr84xi.s:231    .text:00000000000000a8 .L0 
     /tmp/cccr84xi.s:232    .text:00000000000000a8 .L0 
     /tmp/cccr84xi.s:234    .text:00000000000000ac .L0 
     /tmp/cccr84xi.s:235    .text:00000000000000ac .L0 
     /tmp/cccr84xi.s:237    .text:00000000000000b0 .L0 
     /tmp/cccr84xi.s:239    .text:00000000000000b4 .L0 
     /tmp/cccr84xi.s:241    .text:00000000000000b8 .L0 
     /tmp/cccr84xi.s:245    .text:00000000000000bc .L0 
     /tmp/cccr84xi.s:249    .text:00000000000000bc .L0 
     /tmp/cccr84xi.s:250    .text:00000000000000bc .L0 
     /tmp/cccr84xi.s:258    .text:00000000000000c8 .L0 
     /tmp/cccr84xi.s:259    .text:00000000000000c8 .L0 
       src/riscv.cpp:29     .text:00000000000000c8 .L0 
GAS LISTING /tmp/cccr84xi.s 			page 18


     /tmp/cccr84xi.s:267    .text:00000000000000d0 .L0 
     /tmp/cccr84xi.s:268    .text:00000000000000d0 .L0 
     /tmp/cccr84xi.s:273    .text:00000000000000dc .L0 
     /tmp/cccr84xi.s:276    .text:00000000000000dc .L0 
     /tmp/cccr84xi.s:277    .text:00000000000000dc .L0 
  src/../h/riscv.hpp:72     .text:00000000000000dc .L0 
     /tmp/cccr84xi.s:289    .text:00000000000000e0 .L0 
     /tmp/cccr84xi.s:290    .text:00000000000000e0 .L0 
  src/../h/riscv.hpp:118    .text:00000000000000e0 .L0 
     /tmp/cccr84xi.s:297    .text:00000000000000e4 .L0 
     /tmp/cccr84xi.s:303    .text:00000000000000e8 .L0 
     /tmp/cccr84xi.s:304    .text:00000000000000e8 .L0 
       src/riscv.cpp:33     .text:00000000000000e8 .L0 
     /tmp/cccr84xi.s:312    .text:00000000000000f0 .L0 
     /tmp/cccr84xi.s:313    .text:00000000000000f0 .L0 
     /tmp/cccr84xi.s:317    .text:00000000000000fc .L0 
     /tmp/cccr84xi.s:320    .text:0000000000000100 .L0 
     /tmp/cccr84xi.s:321    .text:0000000000000100 .L0 
       src/riscv.cpp:37     .text:0000000000000100 .L0 
     /tmp/cccr84xi.s:329    .text:0000000000000108 .L0 
       src/riscv.cpp:38     .text:0000000000000108 .L0 
     /tmp/cccr84xi.s:337    .text:0000000000000110 .L0 
       src/riscv.cpp:39     .text:0000000000000110 .L0 
     /tmp/cccr84xi.s:345    .text:0000000000000118 .L0 
       src/riscv.cpp:40     .text:0000000000000118 .L0 
     /tmp/cccr84xi.s:353    .text:0000000000000120 .L0 
     /tmp/cccr84xi.s:354    .text:0000000000000120 .L0 
     /tmp/cccr84xi.s:361    .text:0000000000000138 .L0 
     /tmp/cccr84xi.s:364    .text:000000000000013c .L0 
     /tmp/cccr84xi.s:365    .text:000000000000013c .L0 
     /tmp/cccr84xi.s:366    .text:000000000000013c .L0 
     /tmp/cccr84xi.s:369    .text:0000000000000144 .L0 
     /tmp/cccr84xi.s:372    .text:0000000000000148 .L0 
     /tmp/cccr84xi.s:373    .text:0000000000000148 .L0 
     /tmp/cccr84xi.s:374    .text:0000000000000148 .L0 
     /tmp/cccr84xi.s:377    .text:0000000000000150 .L0 
     /tmp/cccr84xi.s:380    .text:0000000000000154 .L0 
     /tmp/cccr84xi.s:381    .text:0000000000000154 .L0 
       src/riscv.cpp:50     .text:0000000000000154 .L0 
     /tmp/cccr84xi.s:389    .text:000000000000015c .L0 
       src/riscv.cpp:51     .text:000000000000015c .L0 
     /tmp/cccr84xi.s:397    .text:0000000000000164 .L0 
     /tmp/cccr84xi.s:398    .text:0000000000000164 .L0 
     /tmp/cccr84xi.s:404    .text:0000000000000178 .L0 
     /tmp/cccr84xi.s:407    .text:000000000000017c .L0 
     /tmp/cccr84xi.s:408    .text:000000000000017c .L0 
       src/riscv.cpp:55     .text:000000000000017c .L0 
     /tmp/cccr84xi.s:416    .text:0000000000000184 .L0 
     /tmp/cccr84xi.s:417    .text:0000000000000184 .L0 
     /tmp/cccr84xi.s:421    .text:0000000000000190 .L0 
     /tmp/cccr84xi.s:424    .text:0000000000000194 .L0 
     /tmp/cccr84xi.s:425    .text:0000000000000194 .L0 
       src/riscv.cpp:59     .text:0000000000000194 .L0 
     /tmp/cccr84xi.s:433    .text:000000000000019c .L0 
     /tmp/cccr84xi.s:434    .text:000000000000019c .L0 
     /tmp/cccr84xi.s:438    .text:00000000000001a8 .L0 
     /tmp/cccr84xi.s:441    .text:00000000000001ac .L0 
GAS LISTING /tmp/cccr84xi.s 			page 19


     /tmp/cccr84xi.s:442    .text:00000000000001ac .L0 
       src/riscv.cpp:63     .text:00000000000001ac .L0 
     /tmp/cccr84xi.s:450    .text:00000000000001b4 .L0 
     /tmp/cccr84xi.s:451    .text:00000000000001b4 .L0 
     /tmp/cccr84xi.s:455    .text:00000000000001c0 .L0 
     /tmp/cccr84xi.s:458    .text:00000000000001c4 .L0 
     /tmp/cccr84xi.s:459    .text:00000000000001c4 .L0 
       src/riscv.cpp:67     .text:00000000000001c4 .L0 
     /tmp/cccr84xi.s:467    .text:00000000000001cc .L0 
     /tmp/cccr84xi.s:468    .text:00000000000001cc .L0 
     /tmp/cccr84xi.s:472    .text:00000000000001d8 .L0 
     /tmp/cccr84xi.s:475    .text:00000000000001dc .L0 
     /tmp/cccr84xi.s:476    .text:00000000000001dc .L0 
     /tmp/cccr84xi.s:477    .text:00000000000001dc .L0 
     /tmp/cccr84xi.s:480    .text:00000000000001e4 .L0 
     /tmp/cccr84xi.s:483    .text:00000000000001e8 .L0 
     /tmp/cccr84xi.s:484    .text:00000000000001e8 .L0 
       src/riscv.cpp:74     .text:00000000000001e8 .L0 
     /tmp/cccr84xi.s:492    .text:00000000000001f0 .L0 
     /tmp/cccr84xi.s:493    .text:00000000000001f0 .L0 
     /tmp/cccr84xi.s:498    .text:0000000000000200 .L0 
     /tmp/cccr84xi.s:503    .text:0000000000000204 .L0 
     /tmp/cccr84xi.s:504    .text:0000000000000204 .L0 
     /tmp/cccr84xi.s:511    .text:0000000000000214 .L0 
     /tmp/cccr84xi.s:512    .text:0000000000000218 .L0 
     /tmp/cccr84xi.s:518    .text:0000000000000218 _ZN5Riscv10popSppSpieEv
     /tmp/cccr84xi.s:521    .text:0000000000000218 .L0 
     /tmp/cccr84xi.s:522    .text:0000000000000218 .L0 
     /tmp/cccr84xi.s:523    .text:000000000000021c .L0 
     /tmp/cccr84xi.s:525    .text:0000000000000220 .L0 
     /tmp/cccr84xi.s:527    .text:0000000000000224 .L0 
     /tmp/cccr84xi.s:529    .text:0000000000000224 .L0 
       src/riscv.cpp:87     .text:0000000000000224 .L0 
     /tmp/cccr84xi.s:539    .text:0000000000000228 .L0 
     /tmp/cccr84xi.s:540    .text:0000000000000228 .L0 
     /tmp/cccr84xi.s:541    .text:0000000000000228 .L0 
     /tmp/cccr84xi.s:551    .text:0000000000000230 .L0 
       src/riscv.cpp:89     .text:0000000000000230 .L0 
     /tmp/cccr84xi.s:558    .text:0000000000000234 .L0 
     /tmp/cccr84xi.s:559    .text:0000000000000238 .L0 
     /tmp/cccr84xi.s:560    .text:0000000000000238 .L0 
     /tmp/cccr84xi.s:562    .text:000000000000023c .L0 
     /tmp/cccr84xi.s:564    .text:0000000000000240 .L0 
     /tmp/cccr84xi.s:575    .text:0000000000000240 .L0 
     /tmp/cccr84xi.s:139    .rodata:0000000000000000 .L8
     /tmp/cccr84xi.s:131    .text:0000000000000084 .L0 
     /tmp/cccr84xi.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cccr84xi.s:504    .text:0000000000000204 .L0 
     /tmp/cccr84xi.s:209    .text:000000000000009c .L21
     /tmp/cccr84xi.s:244    .text:00000000000000bc .L22
     /tmp/cccr84xi.s:500    .text:0000000000000204 .L5
     /tmp/cccr84xi.s:272    .text:00000000000000dc .L6
     /tmp/cccr84xi.s:225    .text:00000000000000a4 .L1
     /tmp/cccr84xi.s:254    .text:00000000000000c8 .L19
     /tmp/cccr84xi.s:299    .text:00000000000000e8 .L18
     /tmp/cccr84xi.s:318    .text:0000000000000100 .L17
     /tmp/cccr84xi.s:362    .text:000000000000013c .L16
GAS LISTING /tmp/cccr84xi.s 			page 20


     /tmp/cccr84xi.s:370    .text:0000000000000148 .L15
     /tmp/cccr84xi.s:378    .text:0000000000000154 .L14
     /tmp/cccr84xi.s:405    .text:000000000000017c .L13
     /tmp/cccr84xi.s:422    .text:0000000000000194 .L12
     /tmp/cccr84xi.s:439    .text:00000000000001ac .L11
     /tmp/cccr84xi.s:456    .text:00000000000001c4 .L10
     /tmp/cccr84xi.s:473    .text:00000000000001dc .L9
     /tmp/cccr84xi.s:481    .text:00000000000001e8 .L7
     /tmp/cccr84xi.s:2096   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cccr84xi.s:3567   .debug_str:0000000000000847 .LASF170
     /tmp/cccr84xi.s:3619   .debug_str:0000000000000a48 .LASF171
     /tmp/cccr84xi.s:3579   .debug_str:0000000000000953 .LASF172
     /tmp/cccr84xi.s:5      .text:0000000000000000 .Ltext0
     /tmp/cccr84xi.s:567    .text:0000000000000240 .Letext0
     /tmp/cccr84xi.s:3271   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cccr84xi.s:3409   .debug_str:0000000000000417 .LASF0
     /tmp/cccr84xi.s:3435   .debug_str:00000000000004dd .LASF1
     /tmp/cccr84xi.s:3513   .debug_str:00000000000006d4 .LASF2
     /tmp/cccr84xi.s:3523   .debug_str:0000000000000735 .LASF4
     /tmp/cccr84xi.s:3419   .debug_str:0000000000000459 .LASF3
     /tmp/cccr84xi.s:3291   .debug_str:000000000000008d .LASF5
     /tmp/cccr84xi.s:3483   .debug_str:0000000000000621 .LASF6
     /tmp/cccr84xi.s:3429   .debug_str:00000000000004ae .LASF7
     /tmp/cccr84xi.s:3379   .debug_str:0000000000000336 .LASF8
     /tmp/cccr84xi.s:3393   .debug_str:00000000000003b8 .LASF9
     /tmp/cccr84xi.s:3321   .debug_str:0000000000000159 .LASF10
     /tmp/cccr84xi.s:3373   .debug_str:0000000000000315 .LASF11
     /tmp/cccr84xi.s:3337   .debug_str:00000000000001c5 .LASF12
     /tmp/cccr84xi.s:3319   .debug_str:0000000000000149 .LASF13
     /tmp/cccr84xi.s:3547   .debug_str:00000000000007c3 .LASF14
     /tmp/cccr84xi.s:3357   .debug_str:0000000000000246 .LASF15
     /tmp/cccr84xi.s:3539   .debug_str:000000000000078e .LASF16
     /tmp/cccr84xi.s:3633   .debug_str:0000000000000aba .LASF17
     /tmp/cccr84xi.s:3375   .debug_str:0000000000000324 .LASF18
     /tmp/cccr84xi.s:3537   .debug_str:0000000000000780 .LASF19
     /tmp/cccr84xi.s:3495   .debug_str:0000000000000676 .LASF20
     /tmp/cccr84xi.s:3347   .debug_str:0000000000000207 .LASF21
     /tmp/cccr84xi.s:3325   .debug_str:000000000000017f .LASF22
     /tmp/cccr84xi.s:3331   .debug_str:00000000000001a8 .LASF23
     /tmp/cccr84xi.s:3465   .debug_str:00000000000005a2 .LASF24
     /tmp/cccr84xi.s:3559   .debug_str:000000000000080a .LASF25
     /tmp/cccr84xi.s:3583   .debug_str:000000000000097e .LASF26
     /tmp/cccr84xi.s:3425   .debug_str:000000000000049c .LASF27
     /tmp/cccr84xi.s:3457   .debug_str:000000000000057c .LASF28
     /tmp/cccr84xi.s:3603   .debug_str:00000000000009e5 .LASF29
     /tmp/cccr84xi.s:3553   .debug_str:00000000000007df .LASF70
     /tmp/cccr84xi.s:3565   .debug_str:000000000000083f .LASF30
     /tmp/cccr84xi.s:3529   .debug_str:0000000000000756 .LASF31
     /tmp/cccr84xi.s:3519   .debug_str:00000000000006f5 .LASF33
     /tmp/cccr84xi.s:3533   .debug_str:000000000000076c .LASF114
     /tmp/cccr84xi.s:3289   .debug_str:0000000000000077 .LASF116
     /tmp/cccr84xi.s:3351   .debug_str:000000000000021f .LASF75
     /tmp/cccr84xi.s:3329   .debug_str:0000000000000195 .LASF77
     /tmp/cccr84xi.s:3437   .debug_str:00000000000004f0 .LASF45
     /tmp/cccr84xi.s:3299   .debug_str:00000000000000d3 .LASF47
     /tmp/cccr84xi.s:3467   .debug_str:00000000000005ab .LASF35
     /tmp/cccr84xi.s:3433   .debug_str:00000000000004c6 .LASF37
GAS LISTING /tmp/cccr84xi.s 			page 21


     /tmp/cccr84xi.s:3307   .debug_str:000000000000010b .LASF32
     /tmp/cccr84xi.s:3599   .debug_str:00000000000009c9 .LASF34
     /tmp/cccr84xi.s:3277   .debug_str:000000000000000b .LASF36
     /tmp/cccr84xi.s:3573   .debug_str:0000000000000919 .LASF38
     /tmp/cccr84xi.s:3555   .debug_str:00000000000007e7 .LASF39
     /tmp/cccr84xi.s:3385   .debug_str:0000000000000362 .LASF40
     /tmp/cccr84xi.s:3525   .debug_str:000000000000073c .LASF41
     /tmp/cccr84xi.s:3285   .debug_str:0000000000000053 .LASF42
     /tmp/cccr84xi.s:3631   .debug_str:0000000000000aad .LASF43
     /tmp/cccr84xi.s:3387   .debug_str:0000000000000378 .LASF44
     /tmp/cccr84xi.s:3281   .debug_str:000000000000001b .LASF46
     /tmp/cccr84xi.s:3445   .debug_str:000000000000051f .LASF48
     /tmp/cccr84xi.s:3323   .debug_str:0000000000000168 .LASF173
     /tmp/cccr84xi.s:3571   .debug_str:0000000000000910 .LASF49
     /tmp/cccr84xi.s:3349   .debug_str:0000000000000217 .LASF50
     /tmp/cccr84xi.s:3627   .debug_str:0000000000000a8b .LASF51
     /tmp/cccr84xi.s:3581   .debug_str:0000000000000976 .LASF52
     /tmp/cccr84xi.s:3551   .debug_str:00000000000007d6 .LASF53
     /tmp/cccr84xi.s:3475   .debug_str:00000000000005e0 .LASF54
     /tmp/cccr84xi.s:3311   .debug_str:000000000000011c .LASF174
     /tmp/cccr84xi.s:3439   .debug_str:00000000000004f6 .LASF175
     /tmp/cccr84xi.s:3345   .debug_str:00000000000001f9 .LASF91
     /tmp/cccr84xi.s:3283   .debug_str:000000000000002b .LASF93
     /tmp/cccr84xi.s:3623   .debug_str:0000000000000a6f .LASF55
     /tmp/cccr84xi.s:3505   .debug_str:000000000000069b .LASF56
     /tmp/cccr84xi.s:3575   .debug_str:000000000000092f .LASF57
     /tmp/cccr84xi.s:3497   .debug_str:0000000000000682 .LASF58
     /tmp/cccr84xi.s:3301   .debug_str:00000000000000e8 .LASF59
     /tmp/cccr84xi.s:3535   .debug_str:0000000000000777 .LASF60
     /tmp/cccr84xi.s:3421   .debug_str:000000000000046b .LASF61
     /tmp/cccr84xi.s:3397   .debug_str:00000000000003df .LASF62
     /tmp/cccr84xi.s:3287   .debug_str:000000000000005f .LASF63
     /tmp/cccr84xi.s:3489   .debug_str:0000000000000659 .LASF64
     /tmp/cccr84xi.s:3521   .debug_str:000000000000071c .LASF65
     /tmp/cccr84xi.s:3381   .debug_str:0000000000000346 .LASF66
     /tmp/cccr84xi.s:3427   .debug_str:00000000000004a1 .LASF67
     /tmp/cccr84xi.s:3313   .debug_str:000000000000012a .LASF152
     /tmp/cccr84xi.s:3275   .debug_str:0000000000000005 .LASF68
     /tmp/cccr84xi.s:3479   .debug_str:00000000000005f1 .LASF69
     /tmp/cccr84xi.s:3461   .debug_str:0000000000000586 .LASF71
     /tmp/cccr84xi.s:3343   .debug_str:00000000000001f4 .LASF72
     /tmp/cccr84xi.s:3293   .debug_str:0000000000000094 .LASF73
     /tmp/cccr84xi.s:3273   .debug_str:0000000000000000 .LASF74
     /tmp/cccr84xi.s:3303   .debug_str:00000000000000fe .LASF76
     /tmp/cccr84xi.s:3629   .debug_str:0000000000000a91 .LASF78
     /tmp/cccr84xi.s:3453   .debug_str:0000000000000551 .LASF79
     /tmp/cccr84xi.s:3295   .debug_str:0000000000000099 .LASF80
     /tmp/cccr84xi.s:3405   .debug_str:0000000000000402 .LASF81
     /tmp/cccr84xi.s:3455   .debug_str:000000000000055b .LASF82
     /tmp/cccr84xi.s:3423   .debug_str:0000000000000480 .LASF83
     /tmp/cccr84xi.s:3517   .debug_str:00000000000006eb .LASF149
     /tmp/cccr84xi.s:3595   .debug_str:00000000000009a3 .LASF150
     /tmp/cccr84xi.s:3511   .debug_str:00000000000006cb .LASF84
     /tmp/cccr84xi.s:3481   .debug_str:0000000000000601 .LASF85
     /tmp/cccr84xi.s:3317   .debug_str:000000000000013e .LASF86
     /tmp/cccr84xi.s:3297   .debug_str:00000000000000ba .LASF87
     /tmp/cccr84xi.s:3515   .debug_str:00000000000006e2 .LASF88
GAS LISTING /tmp/cccr84xi.s 			page 22


     /tmp/cccr84xi.s:3377   .debug_str:000000000000032d .LASF89
     /tmp/cccr84xi.s:3407   .debug_str:000000000000040b .LASF90
     /tmp/cccr84xi.s:3417   .debug_str:000000000000044f .LASF92
     /tmp/cccr84xi.s:3363   .debug_str:000000000000028a .LASF94
     /tmp/cccr84xi.s:3503   .debug_str:0000000000000696 .LASF95
     /tmp/cccr84xi.s:3441   .debug_str:000000000000050f .LASF96
     /tmp/cccr84xi.s:3451   .debug_str:0000000000000548 .LASF97
     /tmp/cccr84xi.s:3315   .debug_str:0000000000000136 .LASF98
     /tmp/cccr84xi.s:3305   .debug_str:0000000000000103 .LASF99
     /tmp/cccr84xi.s:3607   .debug_str:00000000000009f8 .LASF100
     /tmp/cccr84xi.s:3611   .debug_str:0000000000000a11 .LASF103
     /tmp/cccr84xi.s:3309   .debug_str:0000000000000117 .LASF101
     /tmp/cccr84xi.s:3501   .debug_str:0000000000000691 .LASF102
     /tmp/cccr84xi.s:3355   .debug_str:0000000000000237 .LASF104
     /tmp/cccr84xi.s:3499   .debug_str:000000000000068c .LASF105
     /tmp/cccr84xi.s:3617   .debug_str:0000000000000a39 .LASF106
     /tmp/cccr84xi.s:3391   .debug_str:000000000000039c .LASF107
     /tmp/cccr84xi.s:3449   .debug_str:0000000000000537 .LASF108
     /tmp/cccr84xi.s:3561   .debug_str:0000000000000815 .LASF109
     /tmp/cccr84xi.s:3411   .debug_str:0000000000000424 .LASF110
     /tmp/cccr84xi.s:3415   .debug_str:000000000000043e .LASF111
     /tmp/cccr84xi.s:3509   .debug_str:00000000000006bb .LASF176
     /tmp/cccr84xi.s:3399   .debug_str:00000000000003ea .LASF112
     /tmp/cccr84xi.s:3471   .debug_str:00000000000005bc .LASF113
     /tmp/cccr84xi.s:3485   .debug_str:0000000000000634 .LASF115
     /tmp/cccr84xi.s:3389   .debug_str:0000000000000384 .LASF117
     /tmp/cccr84xi.s:3473   .debug_str:00000000000005d4 .LASF118
     /tmp/cccr84xi.s:3621   .debug_str:0000000000000a56 .LASF119
     /tmp/cccr84xi.s:3335   .debug_str:00000000000001bc .LASF120
     /tmp/cccr84xi.s:3463   .debug_str:000000000000058d .LASF121
     /tmp/cccr84xi.s:3597   .debug_str:00000000000009bf .LASF122
     /tmp/cccr84xi.s:3359   .debug_str:000000000000025c .LASF123
     /tmp/cccr84xi.s:3333   .debug_str:00000000000001b2 .LASF124
     /tmp/cccr84xi.s:3367   .debug_str:00000000000002ce .LASF125
     /tmp/cccr84xi.s:3341   .debug_str:00000000000001e9 .LASF126
     /tmp/cccr84xi.s:3361   .debug_str:0000000000000272 .LASF127
     /tmp/cccr84xi.s:3549   .debug_str:00000000000007cf .LASF128
     /tmp/cccr84xi.s:3609   .debug_str:00000000000009fe .LASF129
     /tmp/cccr84xi.s:3493   .debug_str:000000000000066d .LASF130
     /tmp/cccr84xi.s:3615   .debug_str:0000000000000a24 .LASF131
     /tmp/cccr84xi.s:3491   .debug_str:0000000000000665 .LASF132
     /tmp/cccr84xi.s:3339   .debug_str:00000000000001d5 .LASF133
     /tmp/cccr84xi.s:3531   .debug_str:0000000000000763 .LASF134
     /tmp/cccr84xi.s:3527   .debug_str:0000000000000741 .LASF135
     /tmp/cccr84xi.s:3447   .debug_str:000000000000052c .LASF136
     /tmp/cccr84xi.s:3557   .debug_str:00000000000007f2 .LASF137
     /tmp/cccr84xi.s:3577   .debug_str:0000000000000946 .LASF138
     /tmp/cccr84xi.s:3369   .debug_str:00000000000002e4 .LASF139
     /tmp/cccr84xi.s:3563   .debug_str:0000000000000833 .LASF140
     /tmp/cccr84xi.s:3395   .debug_str:00000000000003c6 .LASF141
     /tmp/cccr84xi.s:3327   .debug_str:0000000000000188 .LASF177
     /tmp/cccr84xi.s:3487   .debug_str:000000000000063f .LASF178
     /tmp/cccr84xi.s:3279   .debug_str:0000000000000016 .LASF142
     /tmp/cccr84xi.s:3605   .debug_str:00000000000009ee .LASF143
     /tmp/cccr84xi.s:3593   .debug_str:000000000000099e .LASF179
     /tmp/cccr84xi.s:3545   .debug_str:00000000000007be .LASF144
     /tmp/cccr84xi.s:3469   .debug_str:00000000000005b7 .LASF145
GAS LISTING /tmp/cccr84xi.s 			page 23


     /tmp/cccr84xi.s:3459   .debug_str:0000000000000581 .LASF146
     /tmp/cccr84xi.s:3541   .debug_str:00000000000007a4 .LASF147
     /tmp/cccr84xi.s:3371   .debug_str:00000000000002fe .LASF148
     /tmp/cccr84xi.s:3507   .debug_str:00000000000006a4 .LASF151
     /tmp/cccr84xi.s:3365   .debug_str:00000000000002b6 .LASF153
     /tmp/cccr84xi.s:3413   .debug_str:0000000000000429 .LASF180
     /tmp/cccr84xi.s:3431   .debug_str:00000000000004c1 .LASF154
     /tmp/cccr84xi.s:3625   .debug_str:0000000000000a75 .LASF155
     /tmp/cccr84xi.s:519    .text:0000000000000218 .LFB30
     /tmp/cccr84xi.s:565    .text:0000000000000240 .LFE30
     /tmp/cccr84xi.s:537    .text:0000000000000228 .LBB43
     /tmp/cccr84xi.s:549    .text:0000000000000230 .LBE43
     /tmp/cccr84xi.s:3170   .debug_loc:0000000000000000 .LLST6
     /tmp/cccr84xi.s:15     .text:0000000000000000 .LFB29
     /tmp/cccr84xi.s:513    .text:0000000000000218 .LFE29
     /tmp/cccr84xi.s:3543   .debug_str:00000000000007b7 .LASF156
     /tmp/cccr84xi.s:3179   .debug_loc:0000000000000026 .LLST0
     /tmp/cccr84xi.s:3263   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cccr84xi.s:3585   .debug_str:000000000000098a .LASF157
     /tmp/cccr84xi.s:3587   .debug_str:000000000000098f .LASF158
     /tmp/cccr84xi.s:3589   .debug_str:0000000000000994 .LASF159
     /tmp/cccr84xi.s:3591   .debug_str:0000000000000999 .LASF160
     /tmp/cccr84xi.s:3569   .debug_str:000000000000090b .LASF161
     /tmp/cccr84xi.s:3206   .debug_loc:0000000000000099 .LLST1
     /tmp/cccr84xi.s:3613   .debug_str:0000000000000a1c .LASF162
     /tmp/cccr84xi.s:3217   .debug_loc:00000000000000cf .LLST2
     /tmp/cccr84xi.s:79     .text:0000000000000050 .LBB26
     /tmp/cccr84xi.s:94     .text:000000000000005c .LBE26
     /tmp/cccr84xi.s:99     .text:0000000000000060 .LBB28
     /tmp/cccr84xi.s:115    .text:000000000000006c .LBE28
     /tmp/cccr84xi.s:274    .text:00000000000000dc .LBB30
     /tmp/cccr84xi.s:285    .text:00000000000000e0 .LBE30
     /tmp/cccr84xi.s:3228   .debug_loc:0000000000000105 .LLST3
     /tmp/cccr84xi.s:287    .text:00000000000000e0 .LBB32
     /tmp/cccr84xi.s:301    .text:00000000000000e8 .LBE32
     /tmp/cccr84xi.s:3235   .debug_loc:0000000000000128 .LLST4
     /tmp/cccr84xi.s:270    .text:00000000000000dc .LVL10
     /tmp/cccr84xi.s:315    .text:00000000000000fc .LVL13
     /tmp/cccr84xi.s:359    .text:0000000000000138 .LVL14
     /tmp/cccr84xi.s:367    .text:0000000000000144 .LVL15
     /tmp/cccr84xi.s:375    .text:0000000000000150 .LVL16
     /tmp/cccr84xi.s:402    .text:0000000000000178 .LVL17
     /tmp/cccr84xi.s:419    .text:0000000000000190 .LVL18
     /tmp/cccr84xi.s:436    .text:00000000000001a8 .LVL19
     /tmp/cccr84xi.s:453    .text:00000000000001c0 .LVL20
     /tmp/cccr84xi.s:470    .text:00000000000001d8 .LVL21
     /tmp/cccr84xi.s:478    .text:00000000000001e4 .LVL22
     /tmp/cccr84xi.s:496    .text:0000000000000200 .LVL23
     /tmp/cccr84xi.s:32     .text:0000000000000018 .LBB20
     /tmp/cccr84xi.s:49     .text:0000000000000024 .LBE20
     /tmp/cccr84xi.s:214    .text:000000000000009c .LBB37
     /tmp/cccr84xi.s:227    .text:00000000000000a4 .LBE37
     /tmp/cccr84xi.s:3242   .debug_loc:000000000000014b .LLST5
     /tmp/cccr84xi.s:251    .text:00000000000000c4 .LVL8
     /tmp/cccr84xi.s:506    .text:0000000000000214 .LVL25
     /tmp/cccr84xi.s:3401   .debug_str:00000000000003f5 .LASF163
     /tmp/cccr84xi.s:3601   .debug_str:00000000000009e0 .LASF164
GAS LISTING /tmp/cccr84xi.s 			page 24


     /tmp/cccr84xi.s:3403   .debug_str:00000000000003fb .LASF165
     /tmp/cccr84xi.s:3443   .debug_str:0000000000000518 .LASF166
     /tmp/cccr84xi.s:3383   .debug_str:0000000000000352 .LASF167
     /tmp/cccr84xi.s:3353   .debug_str:0000000000000228 .LASF168
     /tmp/cccr84xi.s:3477   .debug_str:00000000000005e8 .LASF169
     /tmp/cccr84xi.s:535    .text:0000000000000228 .LVL26
     /tmp/cccr84xi.s:546    .text:0000000000000230 .LVL27
     /tmp/cccr84xi.s:47     .text:0000000000000024 .LVL0
     /tmp/cccr84xi.s:72     .text:0000000000000048 .LVL1
     /tmp/cccr84xi.s:128    .text:000000000000007c .LVL4
     /tmp/cccr84xi.s:208    .text:000000000000009c .LVL5
     /tmp/cccr84xi.s:223    .text:00000000000000a4 .LVL6
     /tmp/cccr84xi.s:243    .text:00000000000000bc .LVL7
     /tmp/cccr84xi.s:499    .text:0000000000000204 .LVL24
     /tmp/cccr84xi.s:97     .text:0000000000000060 .LVL2
     /tmp/cccr84xi.s:253    .text:00000000000000c8 .LVL9
     /tmp/cccr84xi.s:113    .text:000000000000006c .LVL3
     /tmp/cccr84xi.s:282    .text:00000000000000e0 .LVL11
     /tmp/cccr84xi.s:298    .text:00000000000000e8 .LVL12
     /tmp/cccr84xi.s:576    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cccr84xi.s:76     .text:0000000000000050 .LBB25
     /tmp/cccr84xi.s:210    .text:000000000000009c .LBE25
     /tmp/cccr84xi.s:256    .text:00000000000000c8 .LBB34
     /tmp/cccr84xi.s:501    .text:0000000000000204 .LBE34

UNDEFINED SYMBOLS
console_handler
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_
_ZN3TCB10threadExitEv
_ZN3TCB8dispatchEv
_ZN3Sem8sem_openEPPS_j
_ZN3Sem9sem_closeEPS_
_ZN3Sem8sem_waitEPS_
_ZN3Sem10sem_signalEPS_
_ZN3Sem11sem_trywaitEPS_
__getc
__putc
_Z8printStrPKc
