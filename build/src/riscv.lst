GAS LISTING /tmp/cczmXlN6.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv16interruptHandlerEv
   9              	_ZN5Riscv16interruptHandlerEv:
  10              	.LFB14:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../h/riscv.hpp"
   3:src/riscv.cpp **** #include "../h/syscallC.hpp"
   4:src/riscv.cpp **** #include "../h/memoryAllocator.hpp"
   5:src/riscv.cpp **** 
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** void Riscv::interruptHandler(){ //PREKIDNA RUTINA
  12              		.loc 1 7 31
  13              		.cfi_startproc
  14 0000 130101FA 		addi	sp,sp,-96
  15              		.cfi_def_cfa_offset 96
  16 0004 233C1104 		sd	ra,88(sp)
  17 0008 23388104 		sd	s0,80(sp)
  18 000c 23349104 		sd	s1,72(sp)
  19 0010 23302105 		sd	s2,64(sp)
  20              		.cfi_offset 1, -8
  21              		.cfi_offset 8, -16
  22              		.cfi_offset 9, -24
  23              		.cfi_offset 18, -32
  24 0014 13040106 		addi	s0,sp,96
  25              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp **** 
   9:src/riscv.cpp ****     uint64 scause = readScause();
  26              		.loc 1 9 5
  27              	.LBB20:
  28              	.LBB21:
  29              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/riscv.hpp **** #include "../lib/console.h"
   9:src/../h/riscv.hpp **** #include "../h/syscallC.hpp"
  10:src/../h/riscv.hpp **** #include "../h/memoryAllocator.hpp"
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** constexpr uint64 SOFTWARE = 0x8000000000000001UL;
  13:src/../h/riscv.hpp **** constexpr uint64 EXTERNAL = 0x8000000000000009UL;
  14:src/../h/riscv.hpp **** constexpr uint64 U_ECALL  = 0x8UL;
  15:src/../h/riscv.hpp **** constexpr uint64 S_ECALL  = 0x9UL;
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp **** class Riscv{
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp **** public:
  20:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cczmXlN6.s 			page 2


  21:src/../h/riscv.hpp ****     static void supervisorTrap();
  22:src/../h/riscv.hpp ****     static void interruptHandler();
  23:src/../h/riscv.hpp ****     static void push();
  24:src/../h/riscv.hpp ****     static void pop();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     static void popSppSpie();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     static uint64 readScause();
  29:src/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  30:src/../h/riscv.hpp ****     static uint64 readSepc();
  31:src/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  32:src/../h/riscv.hpp ****     static uint64 readStvec();
  33:src/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     enum bitmaskSip{
  36:src/../h/riscv.hpp ****         SSIP = (1 << 1),
  37:src/../h/riscv.hpp ****         SEIP = (1 << 9)
  38:src/../h/riscv.hpp ****     };
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     static void setSip(uint64 mask);
  41:src/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  42:src/../h/riscv.hpp ****     static uint64 readSip();
  43:src/../h/riscv.hpp ****     static void writeSip(uint64 sip);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     enum bitmaskSstatus{
  46:src/../h/riscv.hpp ****         SIE = (1 << 1),
  47:src/../h/riscv.hpp ****         SPIE = (1 << 5),
  48:src/../h/riscv.hpp ****         SPP = (1 << 8)
  49:src/../h/riscv.hpp ****     };
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  52:src/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  53:src/../h/riscv.hpp ****     static uint64 readSstatus();
  54:src/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  55:src/../h/riscv.hpp **** };
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp **** inline uint64 Riscv::readScause() {
  58:src/../h/riscv.hpp ****     uint64 volatile value;
  30              		.loc 2 58 5
  59:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
  31              		.loc 2 59 5
  32              		.loc 2 59 55 is_stmt 0
  33              	#APP
  34              	# 59 "src/../h/riscv.hpp" 1
  60              	    return value;
  35              		csrr a5, scause
  36              	# 0 "" 2
  37              	#NO_APP
  38 001c 2334F4FC 		sd	a5,-56(s0)
  39              		.loc 2 60 5 is_stmt 1
  40              		.loc 2 60 12 is_stmt 0
  41 0020 033784FC 		ld	a4,-56(s0)
  42              	.LVL0:
  43              	.LBE21:
  44              	.LBE20:
  10:src/riscv.cpp **** 
  11:src/riscv.cpp ****     if(scause==SOFTWARE) { //timer
GAS LISTING /tmp/cczmXlN6.s 			page 3


  45              		.loc 1 11 5 is_stmt 1
  46              	.LBB22:
  47 0024 9307F0FF 		li	a5,-1
  48 0028 9397F703 		slli	a5,a5,63
  49 002c 93871700 		addi	a5,a5,1
  50 0030 630AF708 		beq	a4,a5,.L12
  51              	.LBE22:
  12:src/riscv.cpp ****         clearSip(bitmaskSip::SSIP);
  13:src/riscv.cpp ****     }
  14:src/riscv.cpp ****     else if(scause==EXTERNAL){
  52              		.loc 1 14 10
  53              	.LBB43:
  54              	.LBB23:
  55 0034 9307F0FF 		li	a5,-1
  56 0038 9397F703 		slli	a5,a5,63
  57 003c 93879700 		addi	a5,a5,9
  58 0040 6302F70A 		beq	a4,a5,.L13
  59              	.LBE23:
  60              	.LBE43:
  15:src/riscv.cpp ****         console_handler();
  16:src/riscv.cpp ****     }
  17:src/riscv.cpp ****     else if(scause==U_ECALL || scause==S_ECALL){
  61              		.loc 1 17 10
  62              	.LBB44:
  63              	.LBB38:
  64              	.LBB24:
  65              		.loc 1 17 29 is_stmt 0
  66 0044 130787FF 		addi	a4,a4,-8
  67              	.LVL1:
  68              		.loc 1 17 10
  69 0048 93071000 		li	a5,1
  70 004c 63E0E708 		bgtu	a4,a5,.L1
  71              	.LBB25:
  18:src/riscv.cpp ****         uint64 volatile oc, a1, a2, a3, a4;
  72              		.loc 1 18 9 is_stmt 1
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****         uint64 sepc=readSepc()+4;
  73              		.loc 1 20 9
  74              	.LBB26:
  75              	.LBB27:
  61:src/../h/riscv.hpp **** }
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp **** inline void Riscv::writeScause(uint64 value) {
  64:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %0" : : "r"(value));
  65:src/../h/riscv.hpp **** }
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp **** inline uint64 Riscv::readSepc() {
  68:src/../h/riscv.hpp ****     uint64 volatile value;
  76              		.loc 2 68 5
  69:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
  77              		.loc 2 69 5
  78              		.loc 2 69 53 is_stmt 0
  79              	#APP
  80              	# 69 "src/../h/riscv.hpp" 1
  70              	    return value;
  81              		csrr a5, sepc
  82              	# 0 "" 2
GAS LISTING /tmp/cczmXlN6.s 			page 4


  83              	#NO_APP
  84 0054 233CF4FC 		sd	a5,-40(s0)
  85              		.loc 2 70 5 is_stmt 1
  86              		.loc 2 70 12 is_stmt 0
  87 0058 833484FD 		ld	s1,-40(s0)
  88              	.LBE27:
  89              	.LBE26:
  90              		.loc 1 20 32
  91 005c 93844400 		addi	s1,s1,4
  92              	.LVL2:
  21:src/riscv.cpp ****         uint64 sstatus=readSstatus();
  93              		.loc 1 21 9 is_stmt 1
  94              	.LBB28:
  95              	.LBB29:
  71:src/../h/riscv.hpp **** }
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp **** inline void Riscv::writeSepc(uint64 value) {
  74:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %0" : : "r"(value));
  75:src/../h/riscv.hpp **** }
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp **** inline uint64 Riscv::readStvec() {
  78:src/../h/riscv.hpp ****     uint64 volatile value;
  79:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stvec" : "=r"(value));
  80:src/../h/riscv.hpp ****     return value;
  81:src/../h/riscv.hpp **** }
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** inline void Riscv::writeStvec(uint64 value) {
  84:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %0" : : "r"(value));
  85:src/../h/riscv.hpp **** }
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** inline void Riscv::setSip(uint64 mask) {
  88:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
  89:src/../h/riscv.hpp **** }
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** inline void Riscv::clearSip(uint64 mask) {
  92:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline uint64 Riscv::readSip() {
  96:src/../h/riscv.hpp ****     uint64 volatile value;
  97:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sip" : "=r"(value));
  98:src/../h/riscv.hpp ****     return value;
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline void Riscv::writeSip(uint64 value) {
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %0" : : "r"(value));
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::setSstatus(uint64 mask) {
 106:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline void Riscv::clearSstatus(uint64 mask) {
 110:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
 111:src/../h/riscv.hpp **** };
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::readSstatus() {
GAS LISTING /tmp/cczmXlN6.s 			page 5


 114:src/../h/riscv.hpp ****     uint64 volatile value;
  96              		.loc 2 114 5
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
  97              		.loc 2 115 5
  98              		.loc 2 115 56 is_stmt 0
  99              	#APP
 100              	# 115 "src/../h/riscv.hpp" 1
 116              	    return value;
 101              		csrr a5, sstatus
 102              	# 0 "" 2
 103              	#NO_APP
 104 0064 2338F4FC 		sd	a5,-48(s0)
 105              		.loc 2 116 5 is_stmt 1
 106              		.loc 2 116 12 is_stmt 0
 107 0068 033904FD 		ld	s2,-48(s0)
 108              	.LVL3:
 109              	.LBE29:
 110              	.LBE28:
  22:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(oc)); // operation code
 111              		.loc 1 22 9 is_stmt 1
 112              		.loc 1 22 49 is_stmt 0
 113              	#APP
 114              	# 22 "src/riscv.cpp" 1
  23              	        __asm__ volatile("mv %0, a1" : "=r"(a1));
 115              		mv a5, a0
 116              	# 0 "" 2
 117              	#NO_APP
 118 0070 2330F4FA 		sd	a5,-96(s0)
 119              		.loc 1 23 9 is_stmt 1
 120              		.loc 1 23 49 is_stmt 0
 121              	#APP
 122              	# 23 "src/riscv.cpp" 1
  24              	        __asm__ volatile("mv %0, a2" : "=r"(a2));
 123              		mv a5, a1
 124              	# 0 "" 2
 125              	#NO_APP
 126 0078 2334F4FA 		sd	a5,-88(s0)
 127              		.loc 1 24 9 is_stmt 1
 128              		.loc 1 24 49 is_stmt 0
 129              	#APP
 130              	# 24 "src/riscv.cpp" 1
  25              	        __asm__ volatile("mv %0, a3" : "=r"(a3));
 131              		mv a5, a2
 132              	# 0 "" 2
 133              	#NO_APP
 134 0080 2338F4FA 		sd	a5,-80(s0)
 135              		.loc 1 25 9 is_stmt 1
 136              		.loc 1 25 49 is_stmt 0
 137              	#APP
 138              	# 25 "src/riscv.cpp" 1
  26              	        __asm__ volatile("mv %0, a4" : "=r"(a4));
 139              		mv a5, a3
 140              	# 0 "" 2
 141              	#NO_APP
 142 0088 233CF4FA 		sd	a5,-72(s0)
 143              		.loc 1 26 9 is_stmt 1
 144              		.loc 1 26 49 is_stmt 0
GAS LISTING /tmp/cczmXlN6.s 			page 6


 145              	#APP
 146              	# 26 "src/riscv.cpp" 1
  27              	
 147              		mv a5, a4
 148              	# 0 "" 2
 149              	#NO_APP
 150 0090 2330F4FC 		sd	a5,-64(s0)
  28:src/riscv.cpp ****         switch(oc){
 151              		.loc 1 28 9 is_stmt 1
 152              		.loc 1 28 16 is_stmt 0
 153 0094 833704FA 		ld	a5,-96(s0)
 154              		.loc 1 28 9
 155 0098 13071004 		li	a4,65
 156              	.LVL4:
 157 009c 6384E708 		beq	a5,a4,.L5
 158 00a0 6368F704 		bgtu	a5,a4,.L6
 159 00a4 13071000 		li	a4,1
 160 00a8 6382E706 		beq	a5,a4,.L7
 161 00ac 13072000 		li	a4,2
 162 00b0 6394E706 		bne	a5,a4,.L9
  29:src/riscv.cpp ****             case MEM_ALLOC:
  30:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
  31:src/riscv.cpp ****                 break;
  32:src/riscv.cpp ****             case MEM_FREE:
 163              		.loc 1 32 13 is_stmt 1
  33:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 164              		.loc 1 33 17
 165              		.loc 1 33 42 is_stmt 0
 166 00b4 033584FA 		ld	a0,-88(s0)
 167 00b8 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 167      E7800000 
 168              	.LVL5:
  34:src/riscv.cpp ****                 break;
 169              		.loc 1 34 17 is_stmt 1
 170 00c0 6F008005 		j	.L9
 171              	.LVL6:
 172              	.L12:
 173              	.LBE25:
 174              	.LBE24:
 175              	.LBE38:
  12:src/riscv.cpp ****     }
 176              		.loc 1 12 9
 177              	.LBB39:
 178              	.LBB40:
  92:src/../h/riscv.hpp **** }
 179              		.loc 2 92 5
  92:src/../h/riscv.hpp **** }
 180              		.loc 2 92 51 is_stmt 0
 181 00c4 93072000 		li	a5,2
 182              	#APP
 183              	# 92 "src/../h/riscv.hpp" 1
 184              		csrc sip, a5
 185              	# 0 "" 2
 186              	.LVL7:
 187              	#NO_APP
 188              	.L1:
 189              	.LBE40:
GAS LISTING /tmp/cczmXlN6.s 			page 7


 190              	.LBE39:
 191              	.LBE44:
  35:src/riscv.cpp ****             case THREAD_CREATE:
  36:src/riscv.cpp ****                 //TCB::threadCreate((TCB**)a1, (body)a2, (void *)a3, (void *)a4);
  37:src/riscv.cpp ****                 break;
  38:src/riscv.cpp ****             case THREAD_EXIT:
  39:src/riscv.cpp ****                 //TCB::threadExit();
  40:src/riscv.cpp ****                 break;
  41:src/riscv.cpp ****             case THREAD_DISPATCH:
  42:src/riscv.cpp ****                 //TCB::dispatch();
  43:src/riscv.cpp ****                 break;
  44:src/riscv.cpp ****             case SEM_OPEN:
  45:src/riscv.cpp **** 
  46:src/riscv.cpp ****                 break;
  47:src/riscv.cpp ****             case SEM_CLOSE:
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****                 break;
  50:src/riscv.cpp ****             case SEM_WAIT:
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****                 break;
  53:src/riscv.cpp ****             case SEM_SIGNAL:
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****                 break;
  56:src/riscv.cpp ****             case SEM_TRYWAIT:
  57:src/riscv.cpp **** 
  58:src/riscv.cpp ****                 break;
  59:src/riscv.cpp ****             case GETC:
  60:src/riscv.cpp ****                 __getc();
  61:src/riscv.cpp ****                 break;
  62:src/riscv.cpp ****             case PUTC:
  63:src/riscv.cpp ****                 __putc(a1);
  64:src/riscv.cpp ****                 break;
  65:src/riscv.cpp ****         }
  66:src/riscv.cpp ****         writeSepc(sepc);
  67:src/riscv.cpp ****         writeSstatus(sstatus);
  68:src/riscv.cpp ****     }
  69:src/riscv.cpp **** }
 192              		.loc 1 69 1
 193 00cc 83308105 		ld	ra,88(sp)
 194              		.cfi_remember_state
 195              		.cfi_restore 1
 196 00d0 03340105 		ld	s0,80(sp)
 197              		.cfi_restore 8
 198              		.cfi_def_cfa 2, 96
 199 00d4 83348104 		ld	s1,72(sp)
 200              		.cfi_restore 9
 201 00d8 03390104 		ld	s2,64(sp)
 202              		.cfi_restore 18
 203 00dc 13010106 		addi	sp,sp,96
 204              		.cfi_def_cfa_offset 0
 205 00e0 67800000 		jr	ra
 206              	.LVL8:
 207              	.L13:
 208              		.cfi_restore_state
 209              	.LBB45:
 210              	.LBB41:
  15:src/riscv.cpp ****     }
GAS LISTING /tmp/cczmXlN6.s 			page 8


 211              		.loc 1 15 9 is_stmt 1
  15:src/riscv.cpp ****     }
 212              		.loc 1 15 24 is_stmt 0
 213 00e4 97000000 		call	console_handler@plt
 213      E7800000 
 214              	.LVL9:
 215 00ec 6FF01FFE 		j	.L1
 216              	.LVL10:
 217              	.L6:
 218              	.LBB36:
 219              	.LBB34:
  28:src/riscv.cpp ****             case MEM_ALLOC:
 220              		.loc 1 28 9
 221 00f0 13072004 		li	a4,66
 222 00f4 6392E702 		bne	a5,a4,.L9
  62:src/riscv.cpp ****                 __putc(a1);
 223              		.loc 1 62 13 is_stmt 1
  63:src/riscv.cpp ****                 break;
 224              		.loc 1 63 17
  63:src/riscv.cpp ****                 break;
 225              		.loc 1 63 23 is_stmt 0
 226 00f8 033584FA 		ld	a0,-88(s0)
 227 00fc 1375F50F 		andi	a0,a0,0xff
 228 0100 97000000 		call	__putc@plt
 228      E7800000 
 229              	.LVL11:
  64:src/riscv.cpp ****         }
 230              		.loc 1 64 17 is_stmt 1
 231 0108 6F000001 		j	.L9
 232              	.L7:
  29:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
 233              		.loc 1 29 13
  30:src/riscv.cpp ****                 break;
 234              		.loc 1 30 17
  30:src/riscv.cpp ****                 break;
 235              		.loc 1 30 43 is_stmt 0
 236 010c 033584FA 		ld	a0,-88(s0)
 237 0110 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 237      E7800000 
 238              	.LVL12:
  31:src/riscv.cpp ****             case MEM_FREE:
 239              		.loc 1 31 17 is_stmt 1
 240              	.L9:
  66:src/riscv.cpp ****         writeSstatus(sstatus);
 241              		.loc 1 66 9
 242              	.LBB30:
 243              	.LBB31:
  74:src/../h/riscv.hpp **** }
 244              		.loc 2 74 5
  74:src/../h/riscv.hpp **** }
 245              		.loc 2 74 54 is_stmt 0
 246              	#APP
 247              	# 74 "src/../h/riscv.hpp" 1
 248              		csrw sepc, s1
 249              	# 0 "" 2
 250              	.LVL13:
 251              	#NO_APP
GAS LISTING /tmp/cczmXlN6.s 			page 9


 252              	.LBE31:
 253              	.LBE30:
  67:src/riscv.cpp ****     }
 254              		.loc 1 67 9 is_stmt 1
 255              	.LBB32:
 256              	.LBB33:
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline void Riscv::writeSstatus(uint64 value) {
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %0" : : "r"(value));
 257              		.loc 2 120 5
 258              		.loc 2 120 57 is_stmt 0
 259              	#APP
 260              	# 120 "src/../h/riscv.hpp" 1
 121              	}
 261              		csrw sstatus, s2
 262              	# 0 "" 2
 263              	.LVL14:
 264              	#NO_APP
 265              	.LBE33:
 266              	.LBE32:
 267              	.LBE34:
 268              	.LBE36:
 269              	.LBE41:
 270              	.LBE45:
 271              		.loc 1 69 1
 272 0120 6FF0DFFA 		j	.L1
 273              	.L5:
 274              	.LBB46:
 275              	.LBB42:
 276              	.LBB37:
 277              	.LBB35:
  59:src/riscv.cpp ****                 __getc();
 278              		.loc 1 59 13 is_stmt 1
  60:src/riscv.cpp ****                 break;
 279              		.loc 1 60 17
  60:src/riscv.cpp ****                 break;
 280              		.loc 1 60 23 is_stmt 0
 281 0124 97000000 		call	__getc@plt
 281      E7800000 
 282              	.LVL15:
  61:src/riscv.cpp ****             case PUTC:
 283              		.loc 1 61 17 is_stmt 1
 284 012c 6FF0DFFE 		j	.L9
 285              	.LBE35:
 286              	.LBE37:
 287              	.LBE42:
 288              	.LBE46:
 289              		.cfi_endproc
 290              	.LFE14:
 292              		.align	2
 293              		.globl	_ZN5Riscv10popSppSpieEv
 295              	_ZN5Riscv10popSppSpieEv:
 296              	.LFB15:
  70:src/riscv.cpp **** 
  71:src/riscv.cpp **** void Riscv::popSppSpie(){
 297              		.loc 1 71 25
GAS LISTING /tmp/cczmXlN6.s 			page 10


 298              		.cfi_startproc
 299 0130 130101FF 		addi	sp,sp,-16
 300              		.cfi_def_cfa_offset 16
 301 0134 23348100 		sd	s0,8(sp)
 302              		.cfi_offset 8, -8
 303 0138 13040101 		addi	s0,sp,16
 304              		.cfi_def_cfa 8, 0
  72:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 305              		.loc 1 72 5
 306              		.loc 1 72 39 is_stmt 0
 307              	#APP
 308              	# 72 "src/riscv.cpp" 1
  73              	    Riscv::clearSstatus(bitmaskSstatus::SPP);
 309              		csrw sepc, ra
 310              	# 0 "" 2
 311              		.loc 1 73 5 is_stmt 1
 312              	.LVL16:
 313              	#NO_APP
 314              	.LBB47:
 315              	.LBB48:
 110:src/../h/riscv.hpp **** };
 316              		.loc 2 110 5
 110:src/../h/riscv.hpp **** };
 317              		.loc 2 110 55 is_stmt 0
 318 0140 93070010 		li	a5,256
 319              	#APP
 320              	# 110 "src/../h/riscv.hpp" 1
 321              		csrc sstatus, a5
 322              	# 0 "" 2
 323              	.LVL17:
 324              	#NO_APP
 325              	.LBE48:
 326              	.LBE47:
  74:src/riscv.cpp ****     __asm__ volatile ("sret");
 327              		.loc 1 74 5 is_stmt 1
 328              		.loc 1 74 30 is_stmt 0
 329              	#APP
 330              	# 74 "src/riscv.cpp" 1
  75              	}...
 331              		sret
 332              	# 0 "" 2
 333              		.loc 1 75 1
 334              	#NO_APP
 335 014c 03348100 		ld	s0,8(sp)
 336              		.cfi_restore 8
 337              		.cfi_def_cfa 2, 16
 338 0150 13010101 		addi	sp,sp,16
 339              		.cfi_def_cfa_offset 0
 340 0154 67800000 		jr	ra
 341              		.cfi_endproc
 342              	.LFE15:
 344              	.Letext0:
 345              		.file 3 "src/../lib/hw.h"
 346              		.file 4 "src/../h/../h/syscallC.hpp"
 347              		.file 5 "src/../h/../h/memoryAllocator.hpp"
 348              		.file 6 "src/../h/../lib/console.h"
GAS LISTING /tmp/cczmXlN6.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cczmXlN6.s:9      .text:0000000000000000 _ZN5Riscv16interruptHandlerEv
     /tmp/cczmXlN6.s:13     .text:0000000000000000 .L0 
     /tmp/cczmXlN6.s:14     .text:0000000000000000 .L0 
     /tmp/cczmXlN6.s:15     .text:0000000000000004 .L0 
     /tmp/cczmXlN6.s:20     .text:0000000000000014 .L0 
     /tmp/cczmXlN6.s:21     .text:0000000000000014 .L0 
     /tmp/cczmXlN6.s:22     .text:0000000000000014 .L0 
     /tmp/cczmXlN6.s:23     .text:0000000000000014 .L0 
     /tmp/cczmXlN6.s:25     .text:0000000000000018 .L0 
     /tmp/cczmXlN6.s:30     .text:0000000000000018 .L0 
     /tmp/cczmXlN6.s:31     .text:0000000000000018 .L0 
     /tmp/cczmXlN6.s:32     .text:0000000000000018 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000018 .L0 
     /tmp/cczmXlN6.s:40     .text:0000000000000020 .L0 
     /tmp/cczmXlN6.s:41     .text:0000000000000020 .L0 
     /tmp/cczmXlN6.s:47     .text:0000000000000024 .L0 
     /tmp/cczmXlN6.s:55     .text:0000000000000034 .L0 
     /tmp/cczmXlN6.s:65     .text:0000000000000044 .L0 
     /tmp/cczmXlN6.s:66     .text:0000000000000044 .L0 
     /tmp/cczmXlN6.s:69     .text:0000000000000048 .L0 
     /tmp/cczmXlN6.s:73     .text:0000000000000050 .L0 
     /tmp/cczmXlN6.s:76     .text:0000000000000050 .L0 
     /tmp/cczmXlN6.s:77     .text:0000000000000050 .L0 
     /tmp/cczmXlN6.s:78     .text:0000000000000050 .L0 
  src/../h/riscv.hpp:69     .text:0000000000000050 .L0 
     /tmp/cczmXlN6.s:86     .text:0000000000000058 .L0 
     /tmp/cczmXlN6.s:87     .text:0000000000000058 .L0 
     /tmp/cczmXlN6.s:91     .text:000000000000005c .L0 
     /tmp/cczmXlN6.s:96     .text:0000000000000060 .L0 
     /tmp/cczmXlN6.s:97     .text:0000000000000060 .L0 
     /tmp/cczmXlN6.s:98     .text:0000000000000060 .L0 
  src/../h/riscv.hpp:115    .text:0000000000000060 .L0 
     /tmp/cczmXlN6.s:106    .text:0000000000000068 .L0 
     /tmp/cczmXlN6.s:107    .text:0000000000000068 .L0 
     /tmp/cczmXlN6.s:112    .text:000000000000006c .L0 
       src/riscv.cpp:22     .text:000000000000006c .L0 
     /tmp/cczmXlN6.s:120    .text:0000000000000074 .L0 
       src/riscv.cpp:23     .text:0000000000000074 .L0 
     /tmp/cczmXlN6.s:128    .text:000000000000007c .L0 
       src/riscv.cpp:24     .text:000000000000007c .L0 
     /tmp/cczmXlN6.s:136    .text:0000000000000084 .L0 
       src/riscv.cpp:25     .text:0000000000000084 .L0 
     /tmp/cczmXlN6.s:144    .text:000000000000008c .L0 
       src/riscv.cpp:26     .text:000000000000008c .L0 
     /tmp/cczmXlN6.s:152    .text:0000000000000094 .L0 
     /tmp/cczmXlN6.s:153    .text:0000000000000094 .L0 
     /tmp/cczmXlN6.s:155    .text:0000000000000098 .L0 
     /tmp/cczmXlN6.s:164    .text:00000000000000b4 .L0 
     /tmp/cczmXlN6.s:165    .text:00000000000000b4 .L0 
     /tmp/cczmXlN6.s:166    .text:00000000000000b4 .L0 
     /tmp/cczmXlN6.s:170    .text:00000000000000c0 .L0 
     /tmp/cczmXlN6.s:179    .text:00000000000000c4 .L0 
     /tmp/cczmXlN6.s:180    .text:00000000000000c4 .L0 
     /tmp/cczmXlN6.s:181    .text:00000000000000c4 .L0 
     /tmp/cczmXlN6.s:193    .text:00000000000000cc .L0 
GAS LISTING /tmp/cczmXlN6.s 			page 12


     /tmp/cczmXlN6.s:194    .text:00000000000000d0 .L0 
     /tmp/cczmXlN6.s:195    .text:00000000000000d0 .L0 
     /tmp/cczmXlN6.s:197    .text:00000000000000d4 .L0 
     /tmp/cczmXlN6.s:198    .text:00000000000000d4 .L0 
     /tmp/cczmXlN6.s:200    .text:00000000000000d8 .L0 
     /tmp/cczmXlN6.s:202    .text:00000000000000dc .L0 
     /tmp/cczmXlN6.s:204    .text:00000000000000e0 .L0 
     /tmp/cczmXlN6.s:208    .text:00000000000000e4 .L0 
     /tmp/cczmXlN6.s:212    .text:00000000000000e4 .L0 
     /tmp/cczmXlN6.s:213    .text:00000000000000e4 .L0 
     /tmp/cczmXlN6.s:221    .text:00000000000000f0 .L0 
     /tmp/cczmXlN6.s:224    .text:00000000000000f8 .L0 
     /tmp/cczmXlN6.s:225    .text:00000000000000f8 .L0 
     /tmp/cczmXlN6.s:226    .text:00000000000000f8 .L0 
     /tmp/cczmXlN6.s:231    .text:0000000000000108 .L0 
     /tmp/cczmXlN6.s:234    .text:000000000000010c .L0 
     /tmp/cczmXlN6.s:235    .text:000000000000010c .L0 
     /tmp/cczmXlN6.s:236    .text:000000000000010c .L0 
     /tmp/cczmXlN6.s:241    .text:0000000000000118 .L0 
     /tmp/cczmXlN6.s:244    .text:0000000000000118 .L0 
     /tmp/cczmXlN6.s:245    .text:0000000000000118 .L0 
  src/../h/riscv.hpp:74     .text:0000000000000118 .L0 
     /tmp/cczmXlN6.s:257    .text:000000000000011c .L0 
     /tmp/cczmXlN6.s:258    .text:000000000000011c .L0 
  src/../h/riscv.hpp:120    .text:000000000000011c .L0 
     /tmp/cczmXlN6.s:272    .text:0000000000000120 .L0 
     /tmp/cczmXlN6.s:279    .text:0000000000000124 .L0 
     /tmp/cczmXlN6.s:280    .text:0000000000000124 .L0 
     /tmp/cczmXlN6.s:281    .text:0000000000000124 .L0 
     /tmp/cczmXlN6.s:284    .text:000000000000012c .L0 
     /tmp/cczmXlN6.s:289    .text:0000000000000130 .L0 
     /tmp/cczmXlN6.s:295    .text:0000000000000130 _ZN5Riscv10popSppSpieEv
     /tmp/cczmXlN6.s:298    .text:0000000000000130 .L0 
     /tmp/cczmXlN6.s:299    .text:0000000000000130 .L0 
     /tmp/cczmXlN6.s:300    .text:0000000000000134 .L0 
     /tmp/cczmXlN6.s:302    .text:0000000000000138 .L0 
     /tmp/cczmXlN6.s:304    .text:000000000000013c .L0 
     /tmp/cczmXlN6.s:306    .text:000000000000013c .L0 
       src/riscv.cpp:72     .text:000000000000013c .L0 
     /tmp/cczmXlN6.s:316    .text:0000000000000140 .L0 
     /tmp/cczmXlN6.s:317    .text:0000000000000140 .L0 
     /tmp/cczmXlN6.s:318    .text:0000000000000140 .L0 
     /tmp/cczmXlN6.s:328    .text:0000000000000148 .L0 
       src/riscv.cpp:74     .text:0000000000000148 .L0 
     /tmp/cczmXlN6.s:335    .text:000000000000014c .L0 
     /tmp/cczmXlN6.s:336    .text:0000000000000150 .L0 
     /tmp/cczmXlN6.s:337    .text:0000000000000150 .L0 
     /tmp/cczmXlN6.s:339    .text:0000000000000154 .L0 
     /tmp/cczmXlN6.s:341    .text:0000000000000158 .L0 
     /tmp/cczmXlN6.s:349    .text:0000000000000158 .L0 
     /tmp/cczmXlN6.s:172    .text:00000000000000c4 .L12
     /tmp/cczmXlN6.s:207    .text:00000000000000e4 .L13
     /tmp/cczmXlN6.s:188    .text:00000000000000cc .L1
     /tmp/cczmXlN6.s:273    .text:0000000000000124 .L5
     /tmp/cczmXlN6.s:217    .text:00000000000000f0 .L6
     /tmp/cczmXlN6.s:232    .text:000000000000010c .L7
     /tmp/cczmXlN6.s:240    .text:0000000000000118 .L9
GAS LISTING /tmp/cczmXlN6.s 			page 13


     /tmp/cczmXlN6.s:1284   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cczmXlN6.s:2355   .debug_str:000000000000054d .LASF98
     /tmp/cczmXlN6.s:2303   .debug_str:00000000000003ff .LASF99
     /tmp/cczmXlN6.s:2207   .debug_str:00000000000000f3 .LASF100
     /tmp/cczmXlN6.s:5      .text:0000000000000000 .Ltext0
     /tmp/cczmXlN6.s:344    .text:0000000000000158 .Letext0
     /tmp/cczmXlN6.s:2169   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cczmXlN6.s:2287   .debug_str:0000000000000376 .LASF0
     /tmp/cczmXlN6.s:2299   .debug_str:00000000000003d9 .LASF1
     /tmp/cczmXlN6.s:2267   .debug_str:00000000000002d0 .LASF2
     /tmp/cczmXlN6.s:2241   .debug_str:00000000000001f6 .LASF4
     /tmp/cczmXlN6.s:2331   .debug_str:00000000000004a0 .LASF3
     /tmp/cczmXlN6.s:2185   .debug_str:0000000000000055 .LASF5
     /tmp/cczmXlN6.s:2301   .debug_str:00000000000003ec .LASF6
     /tmp/cczmXlN6.s:2285   .debug_str:0000000000000363 .LASF7
     /tmp/cczmXlN6.s:2367   .debug_str:0000000000000670 .LASF8
     /tmp/cczmXlN6.s:2229   .debug_str:00000000000001a1 .LASF9
     /tmp/cczmXlN6.s:2311   .debug_str:0000000000000426 .LASF10
     /tmp/cczmXlN6.s:2357   .debug_str:0000000000000611 .LASF11
     /tmp/cczmXlN6.s:2187   .debug_str:000000000000005c .LASF12
     /tmp/cczmXlN6.s:2173   .debug_str:0000000000000005 .LASF13
     /tmp/cczmXlN6.s:2199   .debug_str:00000000000000bd .LASF14
     /tmp/cczmXlN6.s:2327   .debug_str:0000000000000480 .LASF15
     /tmp/cczmXlN6.s:2209   .debug_str:0000000000000116 .LASF16
     /tmp/cczmXlN6.s:2339   .debug_str:00000000000004cd .LASF17
     /tmp/cczmXlN6.s:2321   .debug_str:0000000000000460 .LASF18
     /tmp/cczmXlN6.s:2253   .debug_str:000000000000024b .LASF19
     /tmp/cczmXlN6.s:2219   .debug_str:0000000000000165 .LASF20
     /tmp/cczmXlN6.s:2201   .debug_str:00000000000000c9 .LASF21
     /tmp/cczmXlN6.s:2365   .debug_str:0000000000000667 .LASF22
     /tmp/cczmXlN6.s:2251   .debug_str:0000000000000241 .LASF23
     /tmp/cczmXlN6.s:2337   .debug_str:00000000000004c4 .LASF24
     /tmp/cczmXlN6.s:2189   .debug_str:000000000000006c .LASF25
     /tmp/cczmXlN6.s:2227   .debug_str:0000000000000195 .LASF26
     /tmp/cczmXlN6.s:2179   .debug_str:000000000000002c .LASF27
     /tmp/cczmXlN6.s:2385   .debug_str:00000000000006e4 .LASF28
     /tmp/cczmXlN6.s:2265   .debug_str:00000000000002c0 .LASF40
     /tmp/cczmXlN6.s:2391   .debug_str:00000000000006f6 .LASF101
     /tmp/cczmXlN6.s:2347   .debug_str:000000000000051a .LASF29
     /tmp/cczmXlN6.s:2389   .debug_str:00000000000006f1 .LASF30
     /tmp/cczmXlN6.s:2375   .debug_str:00000000000006ba .LASF31
     /tmp/cczmXlN6.s:2305   .debug_str:000000000000040d .LASF36
     /tmp/cczmXlN6.s:2353   .debug_str:0000000000000531 .LASF38
     /tmp/cczmXlN6.s:2335   .debug_str:00000000000004ba .LASF32
     /tmp/cczmXlN6.s:2343   .debug_str:00000000000004e1 .LASF34
     /tmp/cczmXlN6.s:2315   .debug_str:000000000000043e .LASF33
     /tmp/cczmXlN6.s:2243   .debug_str:00000000000001fd .LASF35
     /tmp/cczmXlN6.s:2361   .debug_str:000000000000063a .LASF102
     /tmp/cczmXlN6.s:2275   .debug_str:0000000000000318 .LASF103
     /tmp/cczmXlN6.s:2371   .debug_str:0000000000000695 .LASF104
     /tmp/cczmXlN6.s:2249   .debug_str:0000000000000238 .LASF37
     /tmp/cczmXlN6.s:2291   .debug_str:000000000000038b .LASF39
     /tmp/cczmXlN6.s:2377   .debug_str:00000000000006bf .LASF105
     /tmp/cczmXlN6.s:2217   .debug_str:000000000000014c .LASF41
     /tmp/cczmXlN6.s:2269   .debug_str:00000000000002de .LASF42
     /tmp/cczmXlN6.s:2379   .debug_str:00000000000006ca .LASF43
     /tmp/cczmXlN6.s:2383   .debug_str:00000000000006d8 .LASF44
GAS LISTING /tmp/cczmXlN6.s 			page 14


     /tmp/cczmXlN6.s:2221   .debug_str:0000000000000171 .LASF106
     /tmp/cczmXlN6.s:2255   .debug_str:0000000000000259 .LASF107
     /tmp/cczmXlN6.s:2225   .debug_str:0000000000000190 .LASF45
     /tmp/cczmXlN6.s:2213   .debug_str:0000000000000132 .LASF46
     /tmp/cczmXlN6.s:2191   .debug_str:0000000000000077 .LASF47
     /tmp/cczmXlN6.s:2333   .debug_str:00000000000004b2 .LASF48
     /tmp/cczmXlN6.s:2289   .debug_str:0000000000000383 .LASF49
     /tmp/cczmXlN6.s:2297   .debug_str:00000000000003d3 .LASF50
     /tmp/cczmXlN6.s:2193   .debug_str:0000000000000080 .LASF53
     /tmp/cczmXlN6.s:2239   .debug_str:00000000000001f1 .LASF51
     /tmp/cczmXlN6.s:2171   .debug_str:0000000000000000 .LASF52
     /tmp/cczmXlN6.s:2205   .debug_str:00000000000000e4 .LASF54
     /tmp/cczmXlN6.s:2381   .debug_str:00000000000006d3 .LASF55
     /tmp/cczmXlN6.s:2259   .debug_str:0000000000000291 .LASF56
     /tmp/cczmXlN6.s:2195   .debug_str:000000000000008b .LASF57
     /tmp/cczmXlN6.s:2215   .debug_str:000000000000013b .LASF58
     /tmp/cczmXlN6.s:2277   .debug_str:0000000000000322 .LASF59
     /tmp/cczmXlN6.s:2245   .debug_str:000000000000021e .LASF60
     /tmp/cczmXlN6.s:2363   .debug_str:0000000000000656 .LASF61
     /tmp/cczmXlN6.s:2293   .debug_str:00000000000003ab .LASF108
     /tmp/cczmXlN6.s:2323   .debug_str:0000000000000469 .LASF62
     /tmp/cczmXlN6.s:2271   .debug_str:00000000000002e7 .LASF63
     /tmp/cczmXlN6.s:2181   .debug_str:0000000000000031 .LASF64
     /tmp/cczmXlN6.s:2261   .debug_str:00000000000002a0 .LASF66
     /tmp/cczmXlN6.s:2325   .debug_str:0000000000000474 .LASF68
     /tmp/cczmXlN6.s:2183   .debug_str:000000000000003c .LASF70
     /tmp/cczmXlN6.s:2313   .debug_str:0000000000000435 .LASF65
     /tmp/cczmXlN6.s:2223   .debug_str:000000000000017b .LASF67
     /tmp/cczmXlN6.s:2341   .debug_str:00000000000004d7 .LASF69
     /tmp/cczmXlN6.s:2197   .debug_str:00000000000000a7 .LASF71
     /tmp/cczmXlN6.s:2329   .debug_str:0000000000000496 .LASF72
     /tmp/cczmXlN6.s:2235   .debug_str:00000000000001d4 .LASF73
     /tmp/cczmXlN6.s:2233   .debug_str:00000000000001c9 .LASF74
     /tmp/cczmXlN6.s:2345   .debug_str:0000000000000502 .LASF75
     /tmp/cczmXlN6.s:2281   .debug_str:0000000000000349 .LASF76
     /tmp/cczmXlN6.s:2283   .debug_str:0000000000000350 .LASF77
     /tmp/cczmXlN6.s:2279   .debug_str:0000000000000340 .LASF78
     /tmp/cczmXlN6.s:2369   .debug_str:0000000000000680 .LASF79
     /tmp/cczmXlN6.s:2387   .debug_str:00000000000006e9 .LASF80
     /tmp/cczmXlN6.s:2319   .debug_str:000000000000044c .LASF81
     /tmp/cczmXlN6.s:2373   .debug_str:00000000000006b1 .LASF82
     /tmp/cczmXlN6.s:2247   .debug_str:0000000000000223 .LASF83
     /tmp/cczmXlN6.s:2203   .debug_str:00000000000000d9 .LASF84
     /tmp/cczmXlN6.s:2295   .debug_str:00000000000003bb .LASF85
     /tmp/cczmXlN6.s:2349   .debug_str:000000000000051f .LASF86
     /tmp/cczmXlN6.s:2359   .debug_str:0000000000000620 .LASF87
     /tmp/cczmXlN6.s:2257   .debug_str:0000000000000285 .LASF88
     /tmp/cczmXlN6.s:2273   .debug_str:00000000000002ff .LASF89
     /tmp/cczmXlN6.s:2307   .debug_str:0000000000000412 .LASF109
     /tmp/cczmXlN6.s:2231   .debug_str:00000000000001af .LASF110
     /tmp/cczmXlN6.s:296    .text:0000000000000130 .LFB15
     /tmp/cczmXlN6.s:342    .text:0000000000000158 .LFE15
     /tmp/cczmXlN6.s:314    .text:0000000000000140 .LBB47
     /tmp/cczmXlN6.s:326    .text:0000000000000148 .LBE47
     /tmp/cczmXlN6.s:2072   .debug_loc:0000000000000000 .LLST6
     /tmp/cczmXlN6.s:10     .text:0000000000000000 .LFB14
     /tmp/cczmXlN6.s:290    .text:0000000000000130 .LFE14
GAS LISTING /tmp/cczmXlN6.s 			page 15


     /tmp/cczmXlN6.s:2175   .debug_str:0000000000000015 .LASF90
     /tmp/cczmXlN6.s:2081   .debug_loc:0000000000000026 .LLST0
     /tmp/cczmXlN6.s:2159   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cczmXlN6.s:2317   .debug_str:0000000000000447 .LASF91
     /tmp/cczmXlN6.s:2102   .debug_loc:0000000000000084 .LLST1
     /tmp/cczmXlN6.s:2263   .debug_str:00000000000002b8 .LASF92
     /tmp/cczmXlN6.s:2113   .debug_loc:00000000000000ba .LLST2
     /tmp/cczmXlN6.s:74     .text:0000000000000050 .LBB26
     /tmp/cczmXlN6.s:89     .text:000000000000005c .LBE26
     /tmp/cczmXlN6.s:94     .text:0000000000000060 .LBB28
     /tmp/cczmXlN6.s:110    .text:000000000000006c .LBE28
     /tmp/cczmXlN6.s:242    .text:0000000000000118 .LBB30
     /tmp/cczmXlN6.s:253    .text:000000000000011c .LBE30
     /tmp/cczmXlN6.s:2124   .debug_loc:00000000000000f0 .LLST3
     /tmp/cczmXlN6.s:255    .text:000000000000011c .LBB32
     /tmp/cczmXlN6.s:266    .text:0000000000000120 .LBE32
     /tmp/cczmXlN6.s:2131   .debug_loc:0000000000000113 .LLST4
     /tmp/cczmXlN6.s:168    .text:00000000000000c0 .LVL5
     /tmp/cczmXlN6.s:229    .text:0000000000000108 .LVL11
     /tmp/cczmXlN6.s:238    .text:0000000000000118 .LVL12
     /tmp/cczmXlN6.s:282    .text:000000000000012c .LVL15
     /tmp/cczmXlN6.s:27     .text:0000000000000018 .LBB20
     /tmp/cczmXlN6.s:44     .text:0000000000000024 .LBE20
     /tmp/cczmXlN6.s:177    .text:00000000000000c4 .LBB39
     /tmp/cczmXlN6.s:190    .text:00000000000000cc .LBE39
     /tmp/cczmXlN6.s:2138   .debug_loc:0000000000000136 .LLST5
     /tmp/cczmXlN6.s:214    .text:00000000000000ec .LVL9
     /tmp/cczmXlN6.s:2211   .debug_str:000000000000012c .LASF93
     /tmp/cczmXlN6.s:2351   .debug_str:000000000000052c .LASF94
     /tmp/cczmXlN6.s:2309   .debug_str:000000000000041f .LASF95
     /tmp/cczmXlN6.s:2237   .debug_str:00000000000001ea .LASF96
     /tmp/cczmXlN6.s:2177   .debug_str:000000000000001c .LASF97
     /tmp/cczmXlN6.s:312    .text:0000000000000140 .LVL16
     /tmp/cczmXlN6.s:323    .text:0000000000000148 .LVL17
     /tmp/cczmXlN6.s:42     .text:0000000000000024 .LVL0
     /tmp/cczmXlN6.s:67     .text:0000000000000048 .LVL1
     /tmp/cczmXlN6.s:156    .text:000000000000009c .LVL4
     /tmp/cczmXlN6.s:171    .text:00000000000000c4 .LVL6
     /tmp/cczmXlN6.s:186    .text:00000000000000cc .LVL7
     /tmp/cczmXlN6.s:206    .text:00000000000000e4 .LVL8
     /tmp/cczmXlN6.s:92     .text:0000000000000060 .LVL2
     /tmp/cczmXlN6.s:216    .text:00000000000000f0 .LVL10
     /tmp/cczmXlN6.s:108    .text:000000000000006c .LVL3
     /tmp/cczmXlN6.s:250    .text:000000000000011c .LVL13
     /tmp/cczmXlN6.s:263    .text:0000000000000120 .LVL14
     /tmp/cczmXlN6.s:350    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cczmXlN6.s:71     .text:0000000000000050 .LBB25
     /tmp/cczmXlN6.s:173    .text:00000000000000c4 .LBE25
     /tmp/cczmXlN6.s:219    .text:00000000000000f0 .LBB34
     /tmp/cczmXlN6.s:267    .text:0000000000000120 .LBE34
     /tmp/cczmXlN6.s:277    .text:0000000000000124 .LBB35
     /tmp/cczmXlN6.s:285    .text:0000000000000130 .LBE35

UNDEFINED SYMBOLS
_ZN15MemoryAllocator8mem_freeEPv
console_handler
__putc
GAS LISTING /tmp/cczmXlN6.s 			page 16


_ZN15MemoryAllocator9mem_allocEm
__getc
