GAS LISTING /tmp/ccYvrGKC.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv16interruptHandlerEv
   9              	_ZN5Riscv16interruptHandlerEv:
  10              	.LFB19:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../h/riscv.hpp"
   3:src/riscv.cpp **** #include "../h/syscallC.hpp"
   4:src/riscv.cpp **** #include "../h/memoryAllocator.hpp"
   5:src/riscv.cpp **** #include "../h/tcb.hpp"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** void Riscv::interruptHandler(){ //PREKIDNA RUTINA
  12              		.loc 1 7 31
  13              		.cfi_startproc
  14 0000 130101FA 		addi	sp,sp,-96
  15              		.cfi_def_cfa_offset 96
  16 0004 233C1104 		sd	ra,88(sp)
  17 0008 23388104 		sd	s0,80(sp)
  18 000c 23349104 		sd	s1,72(sp)
  19 0010 23302105 		sd	s2,64(sp)
  20              		.cfi_offset 1, -8
  21              		.cfi_offset 8, -16
  22              		.cfi_offset 9, -24
  23              		.cfi_offset 18, -32
  24 0014 13040106 		addi	s0,sp,96
  25              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp **** 
   9:src/riscv.cpp ****     uint64 scause = readScause();
  26              		.loc 1 9 5
  27              	.LBB20:
  28              	.LBB21:
  29              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/riscv.hpp **** #include "../lib/console.h"
   9:src/../h/riscv.hpp **** #include "../h/syscallC.hpp"
  10:src/../h/riscv.hpp **** #include "../h/memoryAllocator.hpp"
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** constexpr uint64 SOFTWARE = 0x8000000000000001UL;
  13:src/../h/riscv.hpp **** constexpr uint64 EXTERNAL = 0x8000000000000009UL;
  14:src/../h/riscv.hpp **** constexpr uint64 U_ECALL  = 0x8UL;
  15:src/../h/riscv.hpp **** constexpr uint64 S_ECALL  = 0x9UL;
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp **** class Riscv{
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp **** public:
  20:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccYvrGKC.s 			page 2


  21:src/../h/riscv.hpp ****     static void supervisorTrap();
  22:src/../h/riscv.hpp ****     static void interruptHandler();
  23:src/../h/riscv.hpp ****     static void push();
  24:src/../h/riscv.hpp ****     static void pop();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     static void popSppSpie();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     static uint64 readScause();
  29:src/../h/riscv.hpp ****     static void writeScause(uint64 scause);
  30:src/../h/riscv.hpp ****     static uint64 readSepc();
  31:src/../h/riscv.hpp ****     static void writeSepc(uint64 sepc);
  32:src/../h/riscv.hpp ****     static uint64 readStvec();
  33:src/../h/riscv.hpp ****     static void writeStvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     enum bitmaskSip{
  36:src/../h/riscv.hpp ****         SSIP = (1 << 1),
  37:src/../h/riscv.hpp ****         SEIP = (1 << 9)
  38:src/../h/riscv.hpp ****     };
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     static void setSip(uint64 mask);
  41:src/../h/riscv.hpp ****     static void clearSip(uint64 mask);
  42:src/../h/riscv.hpp ****     static uint64 readSip();
  43:src/../h/riscv.hpp ****     static void writeSip(uint64 sip);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     enum bitmaskSstatus{
  46:src/../h/riscv.hpp ****         SIE = (1 << 1),
  47:src/../h/riscv.hpp ****         SPIE = (1 << 5),
  48:src/../h/riscv.hpp ****         SPP = (1 << 8)
  49:src/../h/riscv.hpp ****     };
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     static void setSstatus(uint64 mask);
  52:src/../h/riscv.hpp ****     static void clearSstatus(uint64 mask);
  53:src/../h/riscv.hpp ****     static uint64 readSstatus();
  54:src/../h/riscv.hpp ****     static void writeSstatus(uint64 sstatus);
  55:src/../h/riscv.hpp **** };
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp **** inline uint64 Riscv::readScause() {
  58:src/../h/riscv.hpp ****     uint64 volatile value;
  30              		.loc 2 58 5
  59:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
  31              		.loc 2 59 5
  32              		.loc 2 59 55 is_stmt 0
  33              	#APP
  34              	# 59 "src/../h/riscv.hpp" 1
  60              	    return value;
  35              		csrr a5, scause
  36              	# 0 "" 2
  37              	#NO_APP
  38 001c 2334F4FC 		sd	a5,-56(s0)
  39              		.loc 2 60 5 is_stmt 1
  40              		.loc 2 60 12 is_stmt 0
  41 0020 033784FC 		ld	a4,-56(s0)
  42              	.LVL0:
  43              	.LBE21:
  44              	.LBE20:
  10:src/riscv.cpp **** 
  11:src/riscv.cpp ****     if(scause==SOFTWARE) { //timer
GAS LISTING /tmp/ccYvrGKC.s 			page 3


  45              		.loc 1 11 5 is_stmt 1
  46              	.LBB22:
  47 0024 9307F0FF 		li	a5,-1
  48 0028 9397F703 		slli	a5,a5,63
  49 002c 93871700 		addi	a5,a5,1
  50 0030 630AF708 		beq	a4,a5,.L16
  51              	.LBE22:
  12:src/riscv.cpp ****         clearSip(bitmaskSip::SSIP);
  13:src/riscv.cpp ****     }
  14:src/riscv.cpp ****     else if(scause==EXTERNAL){
  52              		.loc 1 14 10
  53              	.LBB43:
  54              	.LBB23:
  55 0034 9307F0FF 		li	a5,-1
  56 0038 9397F703 		slli	a5,a5,63
  57 003c 93879700 		addi	a5,a5,9
  58 0040 6302F70A 		beq	a4,a5,.L17
  59              	.LBE23:
  60              	.LBE43:
  15:src/riscv.cpp ****         console_handler();
  16:src/riscv.cpp ****     }
  17:src/riscv.cpp ****     else if(scause==U_ECALL || scause==S_ECALL){
  61              		.loc 1 17 10
  62              	.LBB44:
  63              	.LBB38:
  64              	.LBB24:
  65              		.loc 1 17 29 is_stmt 0
  66 0044 130787FF 		addi	a4,a4,-8
  67              	.LVL1:
  68              		.loc 1 17 10
  69 0048 93071000 		li	a5,1
  70 004c 63E0E708 		bgtu	a4,a5,.L1
  71              	.LBB25:
  18:src/riscv.cpp ****         uint64 volatile oc, a1, a2, a3, a4;
  72              		.loc 1 18 9 is_stmt 1
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****         uint64 sepc=readSepc()+4;
  73              		.loc 1 20 9
  74              	.LBB26:
  75              	.LBB27:
  61:src/../h/riscv.hpp **** }
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp **** inline void Riscv::writeScause(uint64 value) {
  64:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %0" : : "r"(value));
  65:src/../h/riscv.hpp **** }
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp **** inline uint64 Riscv::readSepc() {
  68:src/../h/riscv.hpp ****     uint64 volatile value;
  76              		.loc 2 68 5
  69:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
  77              		.loc 2 69 5
  78              		.loc 2 69 53 is_stmt 0
  79              	#APP
  80              	# 69 "src/../h/riscv.hpp" 1
  70              	    return value;
  81              		csrr a5, sepc
  82              	# 0 "" 2
GAS LISTING /tmp/ccYvrGKC.s 			page 4


  83              	#NO_APP
  84 0054 233CF4FC 		sd	a5,-40(s0)
  85              		.loc 2 70 5 is_stmt 1
  86              		.loc 2 70 12 is_stmt 0
  87 0058 833484FD 		ld	s1,-40(s0)
  88              	.LBE27:
  89              	.LBE26:
  90              		.loc 1 20 32
  91 005c 93844400 		addi	s1,s1,4
  92              	.LVL2:
  21:src/riscv.cpp ****         uint64 sstatus=readSstatus();
  93              		.loc 1 21 9 is_stmt 1
  94              	.LBB28:
  95              	.LBB29:
  71:src/../h/riscv.hpp **** }
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp **** inline void Riscv::writeSepc(uint64 value) {
  74:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %0" : : "r"(value));
  75:src/../h/riscv.hpp **** }
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp **** inline uint64 Riscv::readStvec() {
  78:src/../h/riscv.hpp ****     uint64 volatile value;
  79:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stvec" : "=r"(value));
  80:src/../h/riscv.hpp ****     return value;
  81:src/../h/riscv.hpp **** }
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** inline void Riscv::writeStvec(uint64 value) {
  84:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %0" : : "r"(value));
  85:src/../h/riscv.hpp **** }
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** inline void Riscv::setSip(uint64 mask) {
  88:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
  89:src/../h/riscv.hpp **** }
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** inline void Riscv::clearSip(uint64 mask) {
  92:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline uint64 Riscv::readSip() {
  96:src/../h/riscv.hpp ****     uint64 volatile value;
  97:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sip" : "=r"(value));
  98:src/../h/riscv.hpp ****     return value;
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline void Riscv::writeSip(uint64 value) {
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %0" : : "r"(value));
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::setSstatus(uint64 mask) {
 106:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline void Riscv::clearSstatus(uint64 mask) {
 110:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
 111:src/../h/riscv.hpp **** };
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::readSstatus() {
GAS LISTING /tmp/ccYvrGKC.s 			page 5


 114:src/../h/riscv.hpp ****     uint64 volatile value;
  96              		.loc 2 114 5
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
  97              		.loc 2 115 5
  98              		.loc 2 115 56 is_stmt 0
  99              	#APP
 100              	# 115 "src/../h/riscv.hpp" 1
 116              	    return value;
 101              		csrr a5, sstatus
 102              	# 0 "" 2
 103              	#NO_APP
 104 0064 2338F4FC 		sd	a5,-48(s0)
 105              		.loc 2 116 5 is_stmt 1
 106              		.loc 2 116 12 is_stmt 0
 107 0068 033904FD 		ld	s2,-48(s0)
 108              	.LVL3:
 109              	.LBE29:
 110              	.LBE28:
  22:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(oc)); // operation code
 111              		.loc 1 22 9 is_stmt 1
 112              		.loc 1 22 49 is_stmt 0
 113              	#APP
 114              	# 22 "src/riscv.cpp" 1
  23              	        __asm__ volatile("mv %0, a1" : "=r"(a1));
 115              		mv a5, a0
 116              	# 0 "" 2
 117              	#NO_APP
 118 0070 2330F4FA 		sd	a5,-96(s0)
 119              		.loc 1 23 9 is_stmt 1
 120              		.loc 1 23 49 is_stmt 0
 121              	#APP
 122              	# 23 "src/riscv.cpp" 1
  24              	        __asm__ volatile("mv %0, a2" : "=r"(a2));
 123              		mv a5, a1
 124              	# 0 "" 2
 125              	#NO_APP
 126 0078 2334F4FA 		sd	a5,-88(s0)
 127              		.loc 1 24 9 is_stmt 1
 128              		.loc 1 24 49 is_stmt 0
 129              	#APP
 130              	# 24 "src/riscv.cpp" 1
  25              	        __asm__ volatile("mv %0, a3" : "=r"(a3));
 131              		mv a5, a2
 132              	# 0 "" 2
 133              	#NO_APP
 134 0080 2338F4FA 		sd	a5,-80(s0)
 135              		.loc 1 25 9 is_stmt 1
 136              		.loc 1 25 49 is_stmt 0
 137              	#APP
 138              	# 25 "src/riscv.cpp" 1
  26              	        __asm__ volatile("mv %0, a4" : "=r"(a4));
 139              		mv a5, a3
 140              	# 0 "" 2
 141              	#NO_APP
 142 0088 233CF4FA 		sd	a5,-72(s0)
 143              		.loc 1 26 9 is_stmt 1
 144              		.loc 1 26 49 is_stmt 0
GAS LISTING /tmp/ccYvrGKC.s 			page 6


 145              	#APP
 146              	# 26 "src/riscv.cpp" 1
  27              	
 147              		mv a5, a4
 148              	# 0 "" 2
 149              	#NO_APP
 150 0090 2330F4FC 		sd	a5,-64(s0)
  28:src/riscv.cpp ****         switch(oc){
 151              		.loc 1 28 9 is_stmt 1
 152              		.loc 1 28 16 is_stmt 0
 153 0094 833704FA 		ld	a5,-96(s0)
 154              		.loc 1 28 9
 155 0098 13073001 		li	a4,19
 156              	.LVL4:
 157 009c 636AF704 		bgtu	a5,a4,.L5
 158 00a0 63800708 		beqz	a5,.L6
 159 00a4 636EF706 		bgtu	a5,a4,.L6
 160 00a8 93972700 		slli	a5,a5,2
 161 00ac 17070000 		lla	a4,.L8
 161      13070700 
 162 00b4 B387E700 		add	a5,a5,a4
 163 00b8 83A70700 		lw	a5,0(a5)
 164 00bc B387E700 		add	a5,a5,a4
 165 00c0 67800700 		jr	a5
 166              		.section	.rodata
 167              		.align	2
 168              		.align	2
 169              	.L8:
 170 0000 00000000 		.word	.L6-.L8
 171 0004 00000000 		.word	.L12-.L8
 172 0008 00000000 		.word	.L11-.L8
 173 000c 00000000 		.word	.L6-.L8
 174 0010 00000000 		.word	.L6-.L8
 175 0014 00000000 		.word	.L6-.L8
 176 0018 00000000 		.word	.L6-.L8
 177 001c 00000000 		.word	.L6-.L8
 178 0020 00000000 		.word	.L6-.L8
 179 0024 00000000 		.word	.L6-.L8
 180 0028 00000000 		.word	.L6-.L8
 181 002c 00000000 		.word	.L6-.L8
 182 0030 00000000 		.word	.L6-.L8
 183 0034 00000000 		.word	.L6-.L8
 184 0038 00000000 		.word	.L6-.L8
 185 003c 00000000 		.word	.L6-.L8
 186 0040 00000000 		.word	.L6-.L8
 187 0044 00000000 		.word	.L10-.L8
 188 0048 00000000 		.word	.L9-.L8
 189 004c 00000000 		.word	.L7-.L8
 190              		.text
 191              	.LVL5:
 192              	.L16:
 193              	.LBE25:
 194              	.LBE24:
 195              	.LBE38:
  12:src/riscv.cpp ****     }
 196              		.loc 1 12 9 is_stmt 1
 197              	.LBB39:
GAS LISTING /tmp/ccYvrGKC.s 			page 7


 198              	.LBB40:
  92:src/../h/riscv.hpp **** }
 199              		.loc 2 92 5
  92:src/../h/riscv.hpp **** }
 200              		.loc 2 92 51 is_stmt 0
 201 00c4 93072000 		li	a5,2
 202              	#APP
 203              	# 92 "src/../h/riscv.hpp" 1
 204              		csrc sip, a5
 205              	# 0 "" 2
 206              	.LVL6:
 207              	#NO_APP
 208              	.L1:
 209              	.LBE40:
 210              	.LBE39:
 211              	.LBE44:
  29:src/riscv.cpp ****             case MEM_ALLOC:
  30:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
  31:src/riscv.cpp ****                 break;
  32:src/riscv.cpp ****             case MEM_FREE:
  33:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
  34:src/riscv.cpp ****                 break;
  35:src/riscv.cpp ****             case THREAD_CREATE:
  36:src/riscv.cpp ****                 TCB::threadCreate((thread_t *)a1, (body)a2, (void *)a3, (void *)a4);
  37:src/riscv.cpp ****                 break;
  38:src/riscv.cpp ****             case THREAD_EXIT:
  39:src/riscv.cpp ****                 TCB::threadExit();
  40:src/riscv.cpp ****                 break;
  41:src/riscv.cpp ****             case THREAD_DISPATCH:
  42:src/riscv.cpp ****                 TCB::dispatch();
  43:src/riscv.cpp ****                 break;
  44:src/riscv.cpp ****             case SEM_OPEN:
  45:src/riscv.cpp **** 
  46:src/riscv.cpp ****                 break;
  47:src/riscv.cpp ****             case SEM_CLOSE:
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****                 break;
  50:src/riscv.cpp ****             case SEM_WAIT:
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****                 break;
  53:src/riscv.cpp ****             case SEM_SIGNAL:
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****                 break;
  56:src/riscv.cpp ****             case SEM_TRYWAIT:
  57:src/riscv.cpp **** 
  58:src/riscv.cpp ****                 break;
  59:src/riscv.cpp ****             case GETC:
  60:src/riscv.cpp ****                 __getc();
  61:src/riscv.cpp ****                 break;
  62:src/riscv.cpp ****             case PUTC:
  63:src/riscv.cpp ****                 __putc(a1);
  64:src/riscv.cpp ****                 break;
  65:src/riscv.cpp ****         }
  66:src/riscv.cpp ****         writeSepc(sepc);
  67:src/riscv.cpp ****         writeSstatus(sstatus);
  68:src/riscv.cpp ****     }
  69:src/riscv.cpp **** }
GAS LISTING /tmp/ccYvrGKC.s 			page 8


 212              		.loc 1 69 1
 213 00cc 83308105 		ld	ra,88(sp)
 214              		.cfi_remember_state
 215              		.cfi_restore 1
 216 00d0 03340105 		ld	s0,80(sp)
 217              		.cfi_restore 8
 218              		.cfi_def_cfa 2, 96
 219 00d4 83348104 		ld	s1,72(sp)
 220              		.cfi_restore 9
 221 00d8 03390104 		ld	s2,64(sp)
 222              		.cfi_restore 18
 223 00dc 13010106 		addi	sp,sp,96
 224              		.cfi_def_cfa_offset 0
 225 00e0 67800000 		jr	ra
 226              	.LVL7:
 227              	.L17:
 228              		.cfi_restore_state
 229              	.LBB45:
 230              	.LBB41:
  15:src/riscv.cpp ****     }
 231              		.loc 1 15 9 is_stmt 1
  15:src/riscv.cpp ****     }
 232              		.loc 1 15 24 is_stmt 0
 233 00e4 97000000 		call	console_handler@plt
 233      E7800000 
 234              	.LVL8:
 235 00ec 6FF01FFE 		j	.L1
 236              	.LVL9:
 237              	.L5:
 238              	.LBB36:
 239              	.LBB34:
  28:src/riscv.cpp ****             case MEM_ALLOC:
 240              		.loc 1 28 9
 241 00f0 13071004 		li	a4,65
 242 00f4 638EE706 		beq	a5,a4,.L13
 243 00f8 13072004 		li	a4,66
 244 00fc 6392E702 		bne	a5,a4,.L6
  62:src/riscv.cpp ****                 __putc(a1);
 245              		.loc 1 62 13 is_stmt 1
  63:src/riscv.cpp ****                 break;
 246              		.loc 1 63 17
  63:src/riscv.cpp ****                 break;
 247              		.loc 1 63 23 is_stmt 0
 248 0100 033584FA 		ld	a0,-88(s0)
 249 0104 1375F50F 		andi	a0,a0,0xff
 250 0108 97000000 		call	__putc@plt
 250      E7800000 
 251              	.LVL10:
  64:src/riscv.cpp ****         }
 252              		.loc 1 64 17 is_stmt 1
 253 0110 6F000001 		j	.L6
 254              	.L12:
  29:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
 255              		.loc 1 29 13
  30:src/riscv.cpp ****                 break;
 256              		.loc 1 30 17
  30:src/riscv.cpp ****                 break;
GAS LISTING /tmp/ccYvrGKC.s 			page 9


 257              		.loc 1 30 43 is_stmt 0
 258 0114 033584FA 		ld	a0,-88(s0)
 259 0118 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 259      E7800000 
 260              	.LVL11:
  31:src/riscv.cpp ****             case MEM_FREE:
 261              		.loc 1 31 17 is_stmt 1
 262              	.L6:
  66:src/riscv.cpp ****         writeSstatus(sstatus);
 263              		.loc 1 66 9
 264              	.LBB30:
 265              	.LBB31:
  74:src/../h/riscv.hpp **** }
 266              		.loc 2 74 5
  74:src/../h/riscv.hpp **** }
 267              		.loc 2 74 54 is_stmt 0
 268              	#APP
 269              	# 74 "src/../h/riscv.hpp" 1
 270              		csrw sepc, s1
 271              	# 0 "" 2
 272              	.LVL12:
 273              	#NO_APP
 274              	.LBE31:
 275              	.LBE30:
  67:src/riscv.cpp ****     }
 276              		.loc 1 67 9 is_stmt 1
 277              	.LBB32:
 278              	.LBB33:
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline void Riscv::writeSstatus(uint64 value) {
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %0" : : "r"(value));
 279              		.loc 2 120 5
 280              		.loc 2 120 57 is_stmt 0
 281              	#APP
 282              	# 120 "src/../h/riscv.hpp" 1
 121              	}
 283              		csrw sstatus, s2
 284              	# 0 "" 2
 285              	.LVL13:
 286              	#NO_APP
 287              	.LBE33:
 288              	.LBE32:
 289              	.LBE34:
 290              	.LBE36:
 291              	.LBE41:
 292              	.LBE45:
 293              		.loc 1 69 1
 294 0128 6FF05FFA 		j	.L1
 295              	.L11:
 296              	.LBB46:
 297              	.LBB42:
 298              	.LBB37:
 299              	.LBB35:
  32:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 300              		.loc 1 32 13 is_stmt 1
  33:src/riscv.cpp ****                 break;
GAS LISTING /tmp/ccYvrGKC.s 			page 10


 301              		.loc 1 33 17
  33:src/riscv.cpp ****                 break;
 302              		.loc 1 33 42 is_stmt 0
 303 012c 033584FA 		ld	a0,-88(s0)
 304 0130 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 304      E7800000 
 305              	.LVL14:
  34:src/riscv.cpp ****             case THREAD_CREATE:
 306              		.loc 1 34 17 is_stmt 1
 307 0138 6FF09FFE 		j	.L6
 308              	.L10:
  35:src/riscv.cpp ****                 TCB::threadCreate((thread_t *)a1, (body)a2, (void *)a3, (void *)a4);
 309              		.loc 1 35 13
  36:src/riscv.cpp ****                 break;
 310              		.loc 1 36 17
  36:src/riscv.cpp ****                 break;
 311              		.loc 1 36 34 is_stmt 0
 312 013c 033584FA 		ld	a0,-88(s0)
 313 0140 833504FB 		ld	a1,-80(s0)
 314 0144 033684FB 		ld	a2,-72(s0)
 315 0148 833604FC 		ld	a3,-64(s0)
 316 014c 97000000 		call	_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_@plt
 316      E7800000 
 317              	.LVL15:
  37:src/riscv.cpp ****             case THREAD_EXIT:
 318              		.loc 1 37 17 is_stmt 1
 319 0154 6FF0DFFC 		j	.L6
 320              	.L9:
  38:src/riscv.cpp ****                 TCB::threadExit();
 321              		.loc 1 38 13
  39:src/riscv.cpp ****                 break;
 322              		.loc 1 39 17
  39:src/riscv.cpp ****                 break;
 323              		.loc 1 39 32 is_stmt 0
 324 0158 97000000 		call	_ZN3TCB10threadExitEv@plt
 324      E7800000 
 325              	.LVL16:
  40:src/riscv.cpp ****             case THREAD_DISPATCH:
 326              		.loc 1 40 17 is_stmt 1
 327 0160 6FF01FFC 		j	.L6
 328              	.L7:
  41:src/riscv.cpp ****                 TCB::dispatch();
 329              		.loc 1 41 13
  42:src/riscv.cpp ****                 break;
 330              		.loc 1 42 17
  42:src/riscv.cpp ****                 break;
 331              		.loc 1 42 30 is_stmt 0
 332 0164 97000000 		call	_ZN3TCB8dispatchEv@plt
 332      E7800000 
 333              	.LVL17:
  43:src/riscv.cpp ****             case SEM_OPEN:
 334              		.loc 1 43 17 is_stmt 1
 335 016c 6FF05FFB 		j	.L6
 336              	.L13:
  59:src/riscv.cpp ****                 __getc();
 337              		.loc 1 59 13
  60:src/riscv.cpp ****                 break;
GAS LISTING /tmp/ccYvrGKC.s 			page 11


 338              		.loc 1 60 17
  60:src/riscv.cpp ****                 break;
 339              		.loc 1 60 23 is_stmt 0
 340 0170 97000000 		call	__getc@plt
 340      E7800000 
 341              	.LVL18:
  61:src/riscv.cpp ****             case PUTC:
 342              		.loc 1 61 17 is_stmt 1
 343 0178 6FF09FFA 		j	.L6
 344              	.LBE35:
 345              	.LBE37:
 346              	.LBE42:
 347              	.LBE46:
 348              		.cfi_endproc
 349              	.LFE19:
 351              		.align	2
 352              		.globl	_ZN5Riscv10popSppSpieEv
 354              	_ZN5Riscv10popSppSpieEv:
 355              	.LFB20:
  70:src/riscv.cpp **** 
  71:src/riscv.cpp **** void Riscv::popSppSpie(){
 356              		.loc 1 71 25
 357              		.cfi_startproc
 358 017c 130101FF 		addi	sp,sp,-16
 359              		.cfi_def_cfa_offset 16
 360 0180 23348100 		sd	s0,8(sp)
 361              		.cfi_offset 8, -8
 362 0184 13040101 		addi	s0,sp,16
 363              		.cfi_def_cfa 8, 0
  72:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 364              		.loc 1 72 5
 365              		.loc 1 72 39 is_stmt 0
 366              	#APP
 367              	# 72 "src/riscv.cpp" 1
  73              	    Riscv::clearSstatus(bitmaskSstatus::SPP);
 368              		csrw sepc, ra
 369              	# 0 "" 2
 370              		.loc 1 73 5 is_stmt 1
 371              	.LVL19:
 372              	#NO_APP
 373              	.LBB47:
 374              	.LBB48:
 110:src/../h/riscv.hpp **** };
 375              		.loc 2 110 5
 110:src/../h/riscv.hpp **** };
 376              		.loc 2 110 55 is_stmt 0
 377 018c 93070010 		li	a5,256
 378              	#APP
 379              	# 110 "src/../h/riscv.hpp" 1
 380              		csrc sstatus, a5
 381              	# 0 "" 2
 382              	.LVL20:
 383              	#NO_APP
 384              	.LBE48:
 385              	.LBE47:
  74:src/riscv.cpp ****     __asm__ volatile ("sret");
 386              		.loc 1 74 5 is_stmt 1
GAS LISTING /tmp/ccYvrGKC.s 			page 12


 387              		.loc 1 74 30 is_stmt 0
 388              	#APP
 389              	# 74 "src/riscv.cpp" 1
  75              	}...
 390              		sret
 391              	# 0 "" 2
 392              		.loc 1 75 1
 393              	#NO_APP
 394 0198 03348100 		ld	s0,8(sp)
 395              		.cfi_restore 8
 396              		.cfi_def_cfa 2, 16
 397 019c 13010101 		addi	sp,sp,16
 398              		.cfi_def_cfa_offset 0
 399 01a0 67800000 		jr	ra
 400              		.cfi_endproc
 401              	.LFE20:
 403              	.Letext0:
 404              		.file 3 "src/../lib/hw.h"
 405              		.file 4 "src/../h/../h/syscallC.hpp"
 406              		.file 5 "src/../h/tcb.hpp"
 407              		.file 6 "src/../h/../h/memoryAllocator.hpp"
 408              		.file 7 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccYvrGKC.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccYvrGKC.s:9      .text:0000000000000000 _ZN5Riscv16interruptHandlerEv
     /tmp/ccYvrGKC.s:13     .text:0000000000000000 .L0 
     /tmp/ccYvrGKC.s:14     .text:0000000000000000 .L0 
     /tmp/ccYvrGKC.s:15     .text:0000000000000004 .L0 
     /tmp/ccYvrGKC.s:20     .text:0000000000000014 .L0 
     /tmp/ccYvrGKC.s:21     .text:0000000000000014 .L0 
     /tmp/ccYvrGKC.s:22     .text:0000000000000014 .L0 
     /tmp/ccYvrGKC.s:23     .text:0000000000000014 .L0 
     /tmp/ccYvrGKC.s:25     .text:0000000000000018 .L0 
     /tmp/ccYvrGKC.s:30     .text:0000000000000018 .L0 
     /tmp/ccYvrGKC.s:31     .text:0000000000000018 .L0 
     /tmp/ccYvrGKC.s:32     .text:0000000000000018 .L0 
  src/../h/riscv.hpp:59     .text:0000000000000018 .L0 
     /tmp/ccYvrGKC.s:40     .text:0000000000000020 .L0 
     /tmp/ccYvrGKC.s:41     .text:0000000000000020 .L0 
     /tmp/ccYvrGKC.s:47     .text:0000000000000024 .L0 
     /tmp/ccYvrGKC.s:55     .text:0000000000000034 .L0 
     /tmp/ccYvrGKC.s:65     .text:0000000000000044 .L0 
     /tmp/ccYvrGKC.s:66     .text:0000000000000044 .L0 
     /tmp/ccYvrGKC.s:69     .text:0000000000000048 .L0 
     /tmp/ccYvrGKC.s:73     .text:0000000000000050 .L0 
     /tmp/ccYvrGKC.s:76     .text:0000000000000050 .L0 
     /tmp/ccYvrGKC.s:77     .text:0000000000000050 .L0 
     /tmp/ccYvrGKC.s:78     .text:0000000000000050 .L0 
  src/../h/riscv.hpp:69     .text:0000000000000050 .L0 
     /tmp/ccYvrGKC.s:86     .text:0000000000000058 .L0 
     /tmp/ccYvrGKC.s:87     .text:0000000000000058 .L0 
     /tmp/ccYvrGKC.s:91     .text:000000000000005c .L0 
     /tmp/ccYvrGKC.s:96     .text:0000000000000060 .L0 
     /tmp/ccYvrGKC.s:97     .text:0000000000000060 .L0 
     /tmp/ccYvrGKC.s:98     .text:0000000000000060 .L0 
  src/../h/riscv.hpp:115    .text:0000000000000060 .L0 
     /tmp/ccYvrGKC.s:106    .text:0000000000000068 .L0 
     /tmp/ccYvrGKC.s:107    .text:0000000000000068 .L0 
     /tmp/ccYvrGKC.s:112    .text:000000000000006c .L0 
       src/riscv.cpp:22     .text:000000000000006c .L0 
     /tmp/ccYvrGKC.s:120    .text:0000000000000074 .L0 
       src/riscv.cpp:23     .text:0000000000000074 .L0 
     /tmp/ccYvrGKC.s:128    .text:000000000000007c .L0 
       src/riscv.cpp:24     .text:000000000000007c .L0 
     /tmp/ccYvrGKC.s:136    .text:0000000000000084 .L0 
       src/riscv.cpp:25     .text:0000000000000084 .L0 
     /tmp/ccYvrGKC.s:144    .text:000000000000008c .L0 
       src/riscv.cpp:26     .text:000000000000008c .L0 
     /tmp/ccYvrGKC.s:152    .text:0000000000000094 .L0 
     /tmp/ccYvrGKC.s:153    .text:0000000000000094 .L0 
     /tmp/ccYvrGKC.s:155    .text:0000000000000098 .L0 
     /tmp/ccYvrGKC.s:199    .text:00000000000000c4 .L0 
     /tmp/ccYvrGKC.s:200    .text:00000000000000c4 .L0 
     /tmp/ccYvrGKC.s:201    .text:00000000000000c4 .L0 
     /tmp/ccYvrGKC.s:213    .text:00000000000000cc .L0 
     /tmp/ccYvrGKC.s:214    .text:00000000000000d0 .L0 
     /tmp/ccYvrGKC.s:215    .text:00000000000000d0 .L0 
     /tmp/ccYvrGKC.s:217    .text:00000000000000d4 .L0 
     /tmp/ccYvrGKC.s:218    .text:00000000000000d4 .L0 
GAS LISTING /tmp/ccYvrGKC.s 			page 14


     /tmp/ccYvrGKC.s:220    .text:00000000000000d8 .L0 
     /tmp/ccYvrGKC.s:222    .text:00000000000000dc .L0 
     /tmp/ccYvrGKC.s:224    .text:00000000000000e0 .L0 
     /tmp/ccYvrGKC.s:228    .text:00000000000000e4 .L0 
     /tmp/ccYvrGKC.s:232    .text:00000000000000e4 .L0 
     /tmp/ccYvrGKC.s:233    .text:00000000000000e4 .L0 
     /tmp/ccYvrGKC.s:241    .text:00000000000000f0 .L0 
     /tmp/ccYvrGKC.s:246    .text:0000000000000100 .L0 
     /tmp/ccYvrGKC.s:247    .text:0000000000000100 .L0 
     /tmp/ccYvrGKC.s:248    .text:0000000000000100 .L0 
     /tmp/ccYvrGKC.s:253    .text:0000000000000110 .L0 
     /tmp/ccYvrGKC.s:256    .text:0000000000000114 .L0 
     /tmp/ccYvrGKC.s:257    .text:0000000000000114 .L0 
     /tmp/ccYvrGKC.s:258    .text:0000000000000114 .L0 
     /tmp/ccYvrGKC.s:263    .text:0000000000000120 .L0 
     /tmp/ccYvrGKC.s:266    .text:0000000000000120 .L0 
     /tmp/ccYvrGKC.s:267    .text:0000000000000120 .L0 
  src/../h/riscv.hpp:74     .text:0000000000000120 .L0 
     /tmp/ccYvrGKC.s:279    .text:0000000000000124 .L0 
     /tmp/ccYvrGKC.s:280    .text:0000000000000124 .L0 
  src/../h/riscv.hpp:120    .text:0000000000000124 .L0 
     /tmp/ccYvrGKC.s:294    .text:0000000000000128 .L0 
     /tmp/ccYvrGKC.s:301    .text:000000000000012c .L0 
     /tmp/ccYvrGKC.s:302    .text:000000000000012c .L0 
     /tmp/ccYvrGKC.s:303    .text:000000000000012c .L0 
     /tmp/ccYvrGKC.s:307    .text:0000000000000138 .L0 
     /tmp/ccYvrGKC.s:310    .text:000000000000013c .L0 
     /tmp/ccYvrGKC.s:311    .text:000000000000013c .L0 
     /tmp/ccYvrGKC.s:312    .text:000000000000013c .L0 
     /tmp/ccYvrGKC.s:319    .text:0000000000000154 .L0 
     /tmp/ccYvrGKC.s:322    .text:0000000000000158 .L0 
     /tmp/ccYvrGKC.s:323    .text:0000000000000158 .L0 
     /tmp/ccYvrGKC.s:324    .text:0000000000000158 .L0 
     /tmp/ccYvrGKC.s:327    .text:0000000000000160 .L0 
     /tmp/ccYvrGKC.s:330    .text:0000000000000164 .L0 
     /tmp/ccYvrGKC.s:331    .text:0000000000000164 .L0 
     /tmp/ccYvrGKC.s:332    .text:0000000000000164 .L0 
     /tmp/ccYvrGKC.s:335    .text:000000000000016c .L0 
     /tmp/ccYvrGKC.s:338    .text:0000000000000170 .L0 
     /tmp/ccYvrGKC.s:339    .text:0000000000000170 .L0 
     /tmp/ccYvrGKC.s:340    .text:0000000000000170 .L0 
     /tmp/ccYvrGKC.s:343    .text:0000000000000178 .L0 
     /tmp/ccYvrGKC.s:348    .text:000000000000017c .L0 
     /tmp/ccYvrGKC.s:354    .text:000000000000017c _ZN5Riscv10popSppSpieEv
     /tmp/ccYvrGKC.s:357    .text:000000000000017c .L0 
     /tmp/ccYvrGKC.s:358    .text:000000000000017c .L0 
     /tmp/ccYvrGKC.s:359    .text:0000000000000180 .L0 
     /tmp/ccYvrGKC.s:361    .text:0000000000000184 .L0 
     /tmp/ccYvrGKC.s:363    .text:0000000000000188 .L0 
     /tmp/ccYvrGKC.s:365    .text:0000000000000188 .L0 
       src/riscv.cpp:72     .text:0000000000000188 .L0 
     /tmp/ccYvrGKC.s:375    .text:000000000000018c .L0 
     /tmp/ccYvrGKC.s:376    .text:000000000000018c .L0 
     /tmp/ccYvrGKC.s:377    .text:000000000000018c .L0 
     /tmp/ccYvrGKC.s:387    .text:0000000000000194 .L0 
       src/riscv.cpp:74     .text:0000000000000194 .L0 
     /tmp/ccYvrGKC.s:394    .text:0000000000000198 .L0 
GAS LISTING /tmp/ccYvrGKC.s 			page 15


     /tmp/ccYvrGKC.s:395    .text:000000000000019c .L0 
     /tmp/ccYvrGKC.s:396    .text:000000000000019c .L0 
     /tmp/ccYvrGKC.s:398    .text:00000000000001a0 .L0 
     /tmp/ccYvrGKC.s:400    .text:00000000000001a4 .L0 
     /tmp/ccYvrGKC.s:409    .text:00000000000001a4 .L0 
     /tmp/ccYvrGKC.s:169    .rodata:0000000000000000 .L8
     /tmp/ccYvrGKC.s:161    .text:00000000000000ac .L0 
     /tmp/ccYvrGKC.s:192    .text:00000000000000c4 .L16
     /tmp/ccYvrGKC.s:227    .text:00000000000000e4 .L17
     /tmp/ccYvrGKC.s:208    .text:00000000000000cc .L1
     /tmp/ccYvrGKC.s:237    .text:00000000000000f0 .L5
     /tmp/ccYvrGKC.s:262    .text:0000000000000120 .L6
     /tmp/ccYvrGKC.s:336    .text:0000000000000170 .L13
     /tmp/ccYvrGKC.s:254    .text:0000000000000114 .L12
     /tmp/ccYvrGKC.s:295    .text:000000000000012c .L11
     /tmp/ccYvrGKC.s:308    .text:000000000000013c .L10
     /tmp/ccYvrGKC.s:320    .text:0000000000000158 .L9
     /tmp/ccYvrGKC.s:328    .text:0000000000000164 .L7
     /tmp/ccYvrGKC.s:1614   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccYvrGKC.s:2893   .debug_str:00000000000006da .LASF132
     /tmp/ccYvrGKC.s:2827   .debug_str:0000000000000522 .LASF133
     /tmp/ccYvrGKC.s:2707   .debug_str:000000000000015c .LASF134
     /tmp/ccYvrGKC.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccYvrGKC.s:403    .text:00000000000001a4 .Letext0
     /tmp/ccYvrGKC.s:2655   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccYvrGKC.s:2805   .debug_str:0000000000000483 .LASF0
     /tmp/ccYvrGKC.s:2821   .debug_str:00000000000004f5 .LASF1
     /tmp/ccYvrGKC.s:2785   .debug_str:00000000000003d1 .LASF2
     /tmp/ccYvrGKC.s:2751   .debug_str:00000000000002cc .LASF4
     /tmp/ccYvrGKC.s:2867   .debug_str:0000000000000621 .LASF3
     /tmp/ccYvrGKC.s:2679   .debug_str:000000000000007b .LASF5
     /tmp/ccYvrGKC.s:2825   .debug_str:000000000000050f .LASF6
     /tmp/ccYvrGKC.s:2803   .debug_str:0000000000000470 .LASF7
     /tmp/ccYvrGKC.s:2909   .debug_str:000000000000080e .LASF8
     /tmp/ccYvrGKC.s:2733   .debug_str:0000000000000233 .LASF9
     /tmp/ccYvrGKC.s:2837   .debug_str:0000000000000568 .LASF10
     /tmp/ccYvrGKC.s:2897   .debug_str:00000000000007a9 .LASF11
     /tmp/ccYvrGKC.s:2681   .debug_str:0000000000000082 .LASF12
     /tmp/ccYvrGKC.s:2663   .debug_str:0000000000000016 .LASF13
     /tmp/ccYvrGKC.s:2695   .debug_str:00000000000000ff .LASF14
     /tmp/ccYvrGKC.s:2861   .debug_str:00000000000005ea .LASF15
     /tmp/ccYvrGKC.s:2709   .debug_str:000000000000017f .LASF16
     /tmp/ccYvrGKC.s:2877   .debug_str:0000000000000653 .LASF17
     /tmp/ccYvrGKC.s:2851   .debug_str:00000000000005b4 .LASF18
     /tmp/ccYvrGKC.s:2767   .debug_str:0000000000000322 .LASF19
     /tmp/ccYvrGKC.s:2721   .debug_str:00000000000001f3 .LASF20
     /tmp/ccYvrGKC.s:2699   .debug_str:0000000000000125 .LASF21
     /tmp/ccYvrGKC.s:2907   .debug_str:0000000000000805 .LASF22
     /tmp/ccYvrGKC.s:2765   .debug_str:0000000000000318 .LASF23
     /tmp/ccYvrGKC.s:2875   .debug_str:000000000000064a .LASF24
     /tmp/ccYvrGKC.s:2683   .debug_str:0000000000000092 .LASF25
     /tmp/ccYvrGKC.s:2731   .debug_str:0000000000000227 .LASF26
     /tmp/ccYvrGKC.s:2673   .debug_str:0000000000000052 .LASF27
     /tmp/ccYvrGKC.s:2935   .debug_str:00000000000008b2 .LASF28
     /tmp/ccYvrGKC.s:2657   .debug_str:0000000000000000 .LASF29
     /tmp/ccYvrGKC.s:2669   .debug_str:000000000000003a .LASF48
     /tmp/ccYvrGKC.s:2723   .debug_str:00000000000001ff .LASF30
GAS LISTING /tmp/ccYvrGKC.s 			page 16


     /tmp/ccYvrGKC.s:2667   .debug_str:000000000000002d .LASF31
     /tmp/ccYvrGKC.s:2715   .debug_str:00000000000001ae .LASF33
     /tmp/ccYvrGKC.s:2925   .debug_str:000000000000086d .LASF94
     /tmp/ccYvrGKC.s:2735   .debug_str:0000000000000241 .LASF96
     /tmp/ccYvrGKC.s:2807   .debug_str:0000000000000490 .LASF53
     /tmp/ccYvrGKC.s:2725   .debug_str:0000000000000207 .LASF55
     /tmp/ccYvrGKC.s:2831   .debug_str:0000000000000535 .LASF61
     /tmp/ccYvrGKC.s:2865   .debug_str:000000000000060a .LASF62
     /tmp/ccYvrGKC.s:2787   .debug_str:00000000000003df .LASF32
     /tmp/ccYvrGKC.s:2775   .debug_str:000000000000037d .LASF34
     /tmp/ccYvrGKC.s:2719   .debug_str:00000000000001ee .LASF35
     /tmp/ccYvrGKC.s:2847   .debug_str:0000000000000594 .LASF36
     /tmp/ccYvrGKC.s:2917   .debug_str:0000000000000848 .LASF37
     /tmp/ccYvrGKC.s:2885   .debug_str:00000000000006a0 .LASF38
     /tmp/ccYvrGKC.s:2711   .debug_str:0000000000000195 .LASF39
     /tmp/ccYvrGKC.s:2853   .debug_str:00000000000005bd .LASF99
     /tmp/ccYvrGKC.s:2933   .debug_str:000000000000089b .LASF135
     /tmp/ccYvrGKC.s:2923   .debug_str:0000000000000864 .LASF40
     /tmp/ccYvrGKC.s:2729   .debug_str:000000000000021f .LASF41
     /tmp/ccYvrGKC.s:2809   .debug_str:0000000000000499 .LASF42
     /tmp/ccYvrGKC.s:2761   .debug_str:0000000000000307 .LASF43
     /tmp/ccYvrGKC.s:2929   .debug_str:0000000000000881 .LASF44
     /tmp/ccYvrGKC.s:2757   .debug_str:00000000000002f9 .LASF45
     /tmp/ccYvrGKC.s:2659   .debug_str:0000000000000009 .LASF46
     /tmp/ccYvrGKC.s:2783   .debug_str:00000000000003c3 .LASF136
     /tmp/ccYvrGKC.s:2741   .debug_str:0000000000000278 .LASF137
     /tmp/ccYvrGKC.s:2913   .debug_str:0000000000000833 .LASF71
     /tmp/ccYvrGKC.s:2747   .debug_str:000000000000029f .LASF73
     /tmp/ccYvrGKC.s:2799   .debug_str:000000000000044d .LASF47
     /tmp/ccYvrGKC.s:2941   .debug_str:00000000000008c4 .LASF49
     /tmp/ccYvrGKC.s:2743   .debug_str:0000000000000291 .LASF50
     /tmp/ccYvrGKC.s:2939   .debug_str:00000000000008bf .LASF51
     /tmp/ccYvrGKC.s:2921   .debug_str:000000000000085f .LASF52
     /tmp/ccYvrGKC.s:2829   .debug_str:0000000000000530 .LASF54
     /tmp/ccYvrGKC.s:2891   .debug_str:00000000000006be .LASF56
     /tmp/ccYvrGKC.s:2871   .debug_str:000000000000063b .LASF57
     /tmp/ccYvrGKC.s:2881   .debug_str:0000000000000667 .LASF58
     /tmp/ccYvrGKC.s:2843   .debug_str:0000000000000586 .LASF59
     /tmp/ccYvrGKC.s:2753   .debug_str:00000000000002d3 .LASF60
     /tmp/ccYvrGKC.s:2903   .debug_str:00000000000007d8 .LASF63
     /tmp/ccYvrGKC.s:2795   .debug_str:0000000000000425 .LASF138
     /tmp/ccYvrGKC.s:2693   .debug_str:00000000000000e3 .LASF139
     /tmp/ccYvrGKC.s:2763   .debug_str:000000000000030f .LASF64
     /tmp/ccYvrGKC.s:2813   .debug_str:00000000000004a7 .LASF65
     /tmp/ccYvrGKC.s:2895   .debug_str:000000000000079e .LASF66
     /tmp/ccYvrGKC.s:2717   .debug_str:00000000000001d5 .LASF67
     /tmp/ccYvrGKC.s:2789   .debug_str:00000000000003eb .LASF68
     /tmp/ccYvrGKC.s:2927   .debug_str:0000000000000878 .LASF69
     /tmp/ccYvrGKC.s:2931   .debug_str:000000000000088f .LASF70
     /tmp/ccYvrGKC.s:2919   .debug_str:0000000000000855 .LASF72
     /tmp/ccYvrGKC.s:2769   .debug_str:0000000000000330 .LASF74
     /tmp/ccYvrGKC.s:2727   .debug_str:000000000000021a .LASF75
     /tmp/ccYvrGKC.s:2713   .debug_str:00000000000001a5 .LASF76
     /tmp/ccYvrGKC.s:2685   .debug_str:000000000000009d .LASF77
     /tmp/ccYvrGKC.s:2869   .debug_str:0000000000000633 .LASF78
     /tmp/ccYvrGKC.s:2811   .debug_str:000000000000049f .LASF79
     /tmp/ccYvrGKC.s:2819   .debug_str:00000000000004ef .LASF80
GAS LISTING /tmp/ccYvrGKC.s 			page 17


     /tmp/ccYvrGKC.s:2687   .debug_str:00000000000000a6 .LASF83
     /tmp/ccYvrGKC.s:2749   .debug_str:00000000000002c7 .LASF81
     /tmp/ccYvrGKC.s:2661   .debug_str:0000000000000011 .LASF82
     /tmp/ccYvrGKC.s:2703   .debug_str:0000000000000146 .LASF84
     /tmp/ccYvrGKC.s:2873   .debug_str:0000000000000645 .LASF85
     /tmp/ccYvrGKC.s:2777   .debug_str:0000000000000394 .LASF86
     /tmp/ccYvrGKC.s:2689   .debug_str:00000000000000b1 .LASF87
     /tmp/ccYvrGKC.s:2701   .debug_str:0000000000000135 .LASF88
     /tmp/ccYvrGKC.s:2797   .debug_str:000000000000042f .LASF89
     /tmp/ccYvrGKC.s:2755   .debug_str:00000000000002f4 .LASF90
     /tmp/ccYvrGKC.s:2905   .debug_str:00000000000007f4 .LASF91
     /tmp/ccYvrGKC.s:2815   .debug_str:00000000000004c7 .LASF140
     /tmp/ccYvrGKC.s:2857   .debug_str:00000000000005d3 .LASF92
     /tmp/ccYvrGKC.s:2791   .debug_str:00000000000003f4 .LASF93
     /tmp/ccYvrGKC.s:2675   .debug_str:0000000000000057 .LASF95
     /tmp/ccYvrGKC.s:2779   .debug_str:00000000000003a3 .LASF97
     /tmp/ccYvrGKC.s:2859   .debug_str:00000000000005de .LASF98
     /tmp/ccYvrGKC.s:2677   .debug_str:0000000000000062 .LASF100
     /tmp/ccYvrGKC.s:2841   .debug_str:000000000000057d .LASF101
     /tmp/ccYvrGKC.s:2773   .debug_str:0000000000000368 .LASF102
     /tmp/ccYvrGKC.s:2879   .debug_str:000000000000065d .LASF103
     /tmp/ccYvrGKC.s:2691   .debug_str:00000000000000cd .LASF104
     /tmp/ccYvrGKC.s:2863   .debug_str:0000000000000600 .LASF105
     /tmp/ccYvrGKC.s:2739   .debug_str:0000000000000262 .LASF106
     /tmp/ccYvrGKC.s:2737   .debug_str:0000000000000257 .LASF107
     /tmp/ccYvrGKC.s:2883   .debug_str:0000000000000688 .LASF108
     /tmp/ccYvrGKC.s:2705   .debug_str:0000000000000155 .LASF109
     /tmp/ccYvrGKC.s:2801   .debug_str:000000000000045d .LASF110
     /tmp/ccYvrGKC.s:2855   .debug_str:00000000000005ca .LASF111
     /tmp/ccYvrGKC.s:2911   .debug_str:000000000000081e .LASF112
     /tmp/ccYvrGKC.s:2937   .debug_str:00000000000008b7 .LASF113
     /tmp/ccYvrGKC.s:2849   .debug_str:00000000000005a0 .LASF114
     /tmp/ccYvrGKC.s:2745   .debug_str:0000000000000296 .LASF115
     /tmp/ccYvrGKC.s:2901   .debug_str:00000000000007c3 .LASF116
     /tmp/ccYvrGKC.s:2899   .debug_str:00000000000007b8 .LASF117
     /tmp/ccYvrGKC.s:2817   .debug_str:00000000000004d7 .LASF118
     /tmp/ccYvrGKC.s:2887   .debug_str:00000000000006ac .LASF119
     /tmp/ccYvrGKC.s:2835   .debug_str:000000000000054e .LASF120
     /tmp/ccYvrGKC.s:2771   .debug_str:000000000000035c .LASF121
     /tmp/ccYvrGKC.s:2793   .debug_str:000000000000040c .LASF122
     /tmp/ccYvrGKC.s:2833   .debug_str:0000000000000541 .LASF141
     /tmp/ccYvrGKC.s:2697   .debug_str:000000000000010b .LASF142
     /tmp/ccYvrGKC.s:2759   .debug_str:0000000000000302 .LASF123
     /tmp/ccYvrGKC.s:355    .text:000000000000017c .LFB20
     /tmp/ccYvrGKC.s:401    .text:00000000000001a4 .LFE20
     /tmp/ccYvrGKC.s:373    .text:000000000000018c .LBB47
     /tmp/ccYvrGKC.s:385    .text:0000000000000194 .LBE47
     /tmp/ccYvrGKC.s:2558   .debug_loc:0000000000000000 .LLST6
     /tmp/ccYvrGKC.s:10     .text:0000000000000000 .LFB19
     /tmp/ccYvrGKC.s:349    .text:000000000000017c .LFE19
     /tmp/ccYvrGKC.s:2665   .debug_str:0000000000000026 .LASF124
     /tmp/ccYvrGKC.s:2567   .debug_loc:0000000000000026 .LLST0
     /tmp/ccYvrGKC.s:2645   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccYvrGKC.s:2845   .debug_str:000000000000058f .LASF125
     /tmp/ccYvrGKC.s:2588   .debug_loc:0000000000000084 .LLST1
     /tmp/ccYvrGKC.s:2781   .debug_str:00000000000003bb .LASF126
     /tmp/ccYvrGKC.s:2599   .debug_loc:00000000000000ba .LLST2
GAS LISTING /tmp/ccYvrGKC.s 			page 18


     /tmp/ccYvrGKC.s:74     .text:0000000000000050 .LBB26
     /tmp/ccYvrGKC.s:89     .text:000000000000005c .LBE26
     /tmp/ccYvrGKC.s:94     .text:0000000000000060 .LBB28
     /tmp/ccYvrGKC.s:110    .text:000000000000006c .LBE28
     /tmp/ccYvrGKC.s:264    .text:0000000000000120 .LBB30
     /tmp/ccYvrGKC.s:275    .text:0000000000000124 .LBE30
     /tmp/ccYvrGKC.s:2610   .debug_loc:00000000000000f0 .LLST3
     /tmp/ccYvrGKC.s:277    .text:0000000000000124 .LBB32
     /tmp/ccYvrGKC.s:288    .text:0000000000000128 .LBE32
     /tmp/ccYvrGKC.s:2617   .debug_loc:0000000000000113 .LLST4
     /tmp/ccYvrGKC.s:251    .text:0000000000000110 .LVL10
     /tmp/ccYvrGKC.s:260    .text:0000000000000120 .LVL11
     /tmp/ccYvrGKC.s:305    .text:0000000000000138 .LVL14
     /tmp/ccYvrGKC.s:317    .text:0000000000000154 .LVL15
     /tmp/ccYvrGKC.s:325    .text:0000000000000160 .LVL16
     /tmp/ccYvrGKC.s:333    .text:000000000000016c .LVL17
     /tmp/ccYvrGKC.s:341    .text:0000000000000178 .LVL18
     /tmp/ccYvrGKC.s:27     .text:0000000000000018 .LBB20
     /tmp/ccYvrGKC.s:44     .text:0000000000000024 .LBE20
     /tmp/ccYvrGKC.s:197    .text:00000000000000c4 .LBB39
     /tmp/ccYvrGKC.s:210    .text:00000000000000cc .LBE39
     /tmp/ccYvrGKC.s:2624   .debug_loc:0000000000000136 .LLST5
     /tmp/ccYvrGKC.s:234    .text:00000000000000ec .LVL8
     /tmp/ccYvrGKC.s:2839   .debug_str:0000000000000577 .LASF127
     /tmp/ccYvrGKC.s:2889   .debug_str:00000000000006b9 .LASF128
     /tmp/ccYvrGKC.s:2823   .debug_str:0000000000000508 .LASF129
     /tmp/ccYvrGKC.s:2915   .debug_str:0000000000000841 .LASF130
     /tmp/ccYvrGKC.s:2671   .debug_str:0000000000000042 .LASF131
     /tmp/ccYvrGKC.s:371    .text:000000000000018c .LVL19
     /tmp/ccYvrGKC.s:382    .text:0000000000000194 .LVL20
     /tmp/ccYvrGKC.s:42     .text:0000000000000024 .LVL0
     /tmp/ccYvrGKC.s:67     .text:0000000000000048 .LVL1
     /tmp/ccYvrGKC.s:156    .text:000000000000009c .LVL4
     /tmp/ccYvrGKC.s:191    .text:00000000000000c4 .LVL5
     /tmp/ccYvrGKC.s:206    .text:00000000000000cc .LVL6
     /tmp/ccYvrGKC.s:226    .text:00000000000000e4 .LVL7
     /tmp/ccYvrGKC.s:92     .text:0000000000000060 .LVL2
     /tmp/ccYvrGKC.s:236    .text:00000000000000f0 .LVL9
     /tmp/ccYvrGKC.s:108    .text:000000000000006c .LVL3
     /tmp/ccYvrGKC.s:272    .text:0000000000000124 .LVL12
     /tmp/ccYvrGKC.s:285    .text:0000000000000128 .LVL13
     /tmp/ccYvrGKC.s:410    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccYvrGKC.s:71     .text:0000000000000050 .LBB25
     /tmp/ccYvrGKC.s:193    .text:00000000000000c4 .LBE25
     /tmp/ccYvrGKC.s:239    .text:00000000000000f0 .LBB34
     /tmp/ccYvrGKC.s:289    .text:0000000000000128 .LBE34
     /tmp/ccYvrGKC.s:299    .text:000000000000012c .LBB35
     /tmp/ccYvrGKC.s:344    .text:000000000000017c .LBE35

UNDEFINED SYMBOLS
console_handler
__putc
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_
_ZN3TCB10threadExitEv
_ZN3TCB8dispatchEv
GAS LISTING /tmp/ccYvrGKC.s 			page 19


__getc
